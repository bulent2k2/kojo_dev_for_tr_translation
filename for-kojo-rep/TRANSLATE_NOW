* This dir: ~/src/kojo/git/for-kojo-rep
* SEE: ./DIRS_WITH_TR_SAMPLES
* (shell-command "grep -r foo ~/kojo-repo/installer/*" nil nil)
* Thisd/src/kojo/git/for-kojo-rep/DIRS_WITH_TR_SAMPLES ~/src/kojo/git/for-kojo-rep/TRANSLATE_NOW
* Link TRANSLATE_NOW in ~/src/kojo/git/kojo/src/main/resources/samples/tr

* anahtar sözcükler keywords: ~/src/scala-2/README.keywords

* Drag Protractor to move it around; 
Shift-Drag to rotate.
Drag Scale to move it around; 
tuvalden

açıölçeri göster tuvalın bağlam komudu, pergel?

* DONE Upgrade to scala-2.13.15 and sbt.version=1.10.2 (enables Metals in VSCode)
* [tür] sırayaSok : (kaçSaniyeSonra: Kesir)(komut: => Birim): javax.swing.Timer
* DONE Matematik
açı dereceye değişim doğalLogu eSayısı enUfakOrtakKat enUfağı enİriOrtakPayda enİrisi
eüssü gücü işareti karekökü karesi kosinüs kosinüsünAçısı kuvveti log2tabanlı logTabanlı
logaritması mutlakDeğer onlukTabandaLogu ortalama piSayısı radyana rasgele sayıya
sinüs sinüsünAçısı taban tanjant tanjantınAçısı tavan uzaklık uzaklık yakın yakın yakını
yuvarla
* a COMPLETE almost done :-)
AbstractMethodError: scala.package
AffineTransform: java.awt.geom
Animation: net.kogics.kojo.lite.Builtins
App: scala
Appendable: java.lang
Aralık: Aralık.tür
ArithmeticException: java.lang
ArrowAssoc(self: A): ArrowAssoc[A]
ArrowAssoc: scala.Predef
Artalan: ÇizimYöntemleri
AssertionError: java.lang
AutoCloseable: java.lang
Aylar: Dizin[Yazı]
Dizik: scala
DizikDizisi: scala.collection.mutable
DizikIndexOutOfBoundsException: scala.package
DizikMethods(d: DizikYöntemleri.bu.Dizik[T]): DizikMethods[T]
DizikMethods: DizikYöntemleri
DizikOps: scala.collection
DizikStoreException: java.lang
EsnekDizim: net.kogics.kojo.lite.CoreBuiltins
HarfDizisindenDizik(arrayOfHarfs: Dizik[Harf]): HarfDizisindenDizik
HarfDizisindenDizik: scala.Predef
Her: scala
HerDeğer: scala
HerDeğerCompanion: scala
HerGönder: scala
a_kalıp(): Birim
abstract
activateCanvas
activateEditor(): Birim
addCodeTemplates
addCodeTemplates(lang: Yazı, templates: Eşlek[Yazı,Yazı]): Birim
addHelpContent
addHelpContent(lang: Yazı, content: Eşlek[Yazı,Yazı]): Birim
akka: <root>
animDizi(as: Builtins.bu.Animation*): Sarıcı1.builtins.Animation
animDizi(as: scala.collection.Dizi[Builtins.bu.Animation]): Sarıcı1.builtins.Animation
animPar(as: Builtins.bu.Animation*): Sarıcı1.builtins.Animation
animPar(as: scala.collection.Dizi[Builtins.bu.Animation]): Sarıcı1.builtins.Animation
animate
animateWithCanvasDraw(drawFrame: Builtins.bu.CanvasDraw => Birim): Birim
animateWithRedraw
animateWithSetupCanvasDraw(setupCanvas: Builtins.bu.CanvasDraw => Birim)(drawFrame: Builtins.bu.CanvasDraw => Birim): Birim
animateWithState
animationDelay
annotation: scala
any2stringadd(self: A): any2stringadd[A]
any2stringadd: scala.Predef
apple: <root>
arc
arc2
arcVertex(x: Kesir, y: Kesir, angle: Kesir): Birim
area
artalandaOynat(kod: => Birim): Birim
artalanıKur(b: Boya): Birim
artalanıKurDik(r1: Renk, r2: Renk): Birim
artalanıKurYatay(r1: Renk, r2: Renk): Birim
asInstanceOf: T0
assert(assertion: İkil): Birim
assert(assertion: İkil, message: => Her): Birim
assets: <root>
assume(assumption: İkil): Birim
assume(assumption: İkil, message: => Her): Birim
astStopPhase: Yazı
atla
augmentYazı(x: Yazı): scala.collection.YazıOps
availableFontNames: Dizin[Yazı]
axes
axesOff
axesOn
ay: arayuz.tür
aydınlık: Kesir => res.AydınlıkBD
açı(n1: Nokta, n2: Nokta): Kesir
açı(x1: Kesir, y1: Kesir, x2: Kesir, y2: Kesir): Kesir
açıkGri: Renk
açıyaDön
açıÖlçeriGizle: Birim
açıÖlçeriGöster(x: Kesir, y: Kesir): Resim
açıÖlçeriGöster: Resim
** DONE Implicit definition should have explicit (output) type (inferred) [quickfixable]

** See: ~/src/scala-2.13.15/src/compiler/scala/tools/nsc/reporters/Reporter.scala

*** third upon switching to reflect.internal.Reporter
[info] compiling 1 Scala source to /Users/ben/src/kojo/git/kojo/target/scala-2.13/classes ...
[error] /Users/ben/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/trace/Tracing.scala:113:39: type mismatch;
[error]  found   : Reporter (in scala.reflect.internal) 
[error]  required: Reporter (in scala.tools.nsc.reporters) 
[error]   val compiler = new Global(settings, reporter)
[error]                                       ^
[error] one error found

*** second upon fixing first
[info] Build triggered by /Users/ben/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/trace/Tracing.scala. Running 'compile'.
[info] compiling 1 Scala source to /Users/ben/src/kojo/git/kojo/target/scala-2.13/classes ...
[warn] /Users/ben/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/trace/Tracing.scala:93:18: 
overriding method doReport in class FilteringReporter is deprecated (since 2.13.12): 
override the `doReport` overload (defined in reflect.internal.Reporter) instead
[warn]     override def doReport(position: Position, msg: String, severity: Severity): Unit = {
[warn]                  ^
[error] /Users/ben/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/trace/Tracing.scala:92:22: object creation impossible.
[error] Missing implementation for member of class FilteringReporter:
[error]   def settings: scala.tools.nsc.Settings = ???
[error]   val reporter = new FilteringReporter {
[error]                      ^
[warn] one warning found
[error] one error found
[error] (Compile / compileIncremental) Compilation failed

*** first
[warn] /Users/ben/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/trace/Tracing.scala:93:18: overriding method info0 in class Reporter is deprecated (since 2.13.12): extend scala.tools.nsc.reporters.FilteringReporter, and override doReport instead
[warn]     override def info0(position: Position, msg: String, severity: Severity, force: Boolean): Unit = {
[warn]                  ^
[warn] /Users/ben/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/xscala/CompilerAndRunner.scala:141:18: overriding method info0 in class Reporter is deprecated (since 2.13.12): extend scala.tools.nsc.reporters.FilteringReporter, and override doReport instead
[warn]     override def info0(position: Position, msg: String, severity: Severity, force: Boolean): Unit = {
[warn]                  ^
[warn] /Users/ben/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/xscala/CompilerAndRunner.scala:396:18: overriding method info0 in class Reporter is deprecated (since 2.13.12): extend scala.tools.nsc.reporters.FilteringReporter, and override doReport instead
[warn]     override def info0(position: Position, msg: String, severity: Severity, force: Boolean): Unit = {}
[warn]                  ^
[warn] three warnings found
[info] compiling 33 Scala sources to /Users/ben/src/kojo/git/kojo/target/scala-2.13/test-classes ...

* DONE code formatting fails for "tanım"

* Hata oldu - ÇalışmaSırasıKuralDışı: Potential Deadlock. Bailing out! (kütük
* NullPointer -> YokNoktaer
* Renkler! (not renkler)
sgrep renkler
src/main/resources/robosim/tr/cevre.kojo:    dez renk = renkler.darkOliveGreen
src/main/resources/robosim/tr/robot.kojo:    dez renk = renkler.darkMagenta
src/main/resources/robosim/tr/obstacle-greedy.kojo:artalanıKur(renkler.khaki)
src/main/resources/robosim/tr/obstacle-furthest.kojo:artalanıKur(renkler.khaki)
src/main/resources/samples/tr/addition-game.kojo:dez aaRengi = renkler.khaki // artalan yani arkaplan rengi
src/main/resources/samples/tr/genart-mondrian.kojo:dez renkler =
src/main/resources/samples/tr/genart-mondrian.kojo:renkler.ikileSırayla.işle {
src/main/resources/samples/tr/pong.kojo:    dez yazısı = Resim.yazıRenkli(skor, 20, renkler.lightSteelBlue)
src/main/resources/samples/tr/lamp-animation2.kojo:artalanıKur(renkler.darkSlateBlue) // eflatuna yakın koyu mavi
src/main/resources/samples/tr/collidium.kojo:    oyunSüresiniGeriyeSayarakGöster(60, "Süre doldu. Tekrar dene", renkler.lightBlue, 20) // açık mavi
src/main/resources/samples/tr/collidium.kojo:    geçiciRaket = doğruÇiz(raketNoktaları, renkler.aquamarine)
src/main/resources/samples/tr/multiplication-game.kojo:dez aaRengi = renkler.khaki // artalan yani arkaplan rengi
src/main/resources/samples/tr/eye.kojo:// girdiler: merkezX, merkezY, yarıçap, dağılım, renkler, dalgalıDevam
src/main/resources/samples/tr/angle-experiment.kojo:    boyaRengi(renkler.lightBlue) * kalemRengi(koyuGri) -> Resim.dikdörtgen(200, 40),
src/main/resources/samples/tr/widgets-canvas.kojo:dez ay_renkler = ay.Salındıraç("mavi", "yeşil", "sarı")
src/main/resources/samples/tr/widgets-canvas.kojo:dez renkler = Eşlem("mavi" -> mavi, "yeşil" -> yeşil, "sarı" -> sarı)
src/main/resources/samples/tr/widgets-canvas.kojo:            ay.Sıra(ay.Tanıt("Boyama rengi: "), ay_renkler),
src/main/resources/samples/tr/widgets-canvas.kojo:                dez resim = götür(solKenarX, 0) * boyaRengi(renkler(ay_renkler.değeri)) ->
src/main/resources/samples/tr/lamp-animation.kojo:artalanıKur(renkler.darkSlateBlue) // eflatuna yakın koyu mavi
src/main/resources/samples/tr/mandelbrot.kojo: oluyor ve onu siyah yapıyoruz. Diğer renkler m'nin sonsuza gitmesine
src/main/resources/samples/tr/mandelbrot.kojo:        renkler(sayıya(karekökü(i + 10 - yumuşak) * 256) % renkler.boyu)
src/main/resources/samples/tr/mandelbrot.kojo:    miskin dez renkler = Dizi.doldur(2048) { i => k2kym(i / 2048.0) }
src/main/resources/samples/tr/mandelbrot.kojo:    // Arasını da yumuşak geçiş benzeri renklerle dolduruyoruz
src/main/resources/samples/tr/spiral-hexagon-tiles.kojo:// Ayrıca taşların renklerini de her dönüşte biraz değiştiriyoruz.
src/main/resources/samples/tr/spiral-hexagon-tiles.kojo:// Başlangıç renkleri ve merkezdeki taş türü. Bunları her dönüşte değiştiriyoruz
src/main/resources/samples/tr/spiral-hexagon-tiles.kojo:    eğer (dönüşSayısı != 0) { // ilk taş için renkleri değiştirmeye gerek yok
src/main/resources/samples/tr/lunar-lander.kojo:        kalemRenginiKur(renkler.lightBlue)
src/main/resources/samples/tr/lunar-lander.kojo:        boyamaRenginiKur(renkler.darkGray)
src/main/resources/samples/tr/kojo-kilavuz/turler.kojo:dez ay_renkler = ay.Salındıraç("mavi", "yeşil", "sarı")
src/main/resources/samples/tr/kojo-kilavuz/turler.kojo:Resim.arayüz(ay_renkler).veGötür(-100, 80).çiz
src/main/resources/samples/tr/kojo-kilavuz/turler.kojo:  satıryaz(s"Renk: ${ay_renkler.değeri}")}
src/main/resources/samples/tr/kojo-kilavuz/ornek-yazilimlar.kojo:  renkler.aliceBlue,
src/main/resources/samples/tr/kojo-kilavuz/ornek-yazilimlar.kojo:  renkler.hotpink,
src/main/resources/samples/tr/kojo-kilavuz/ornek-yazilimlar.kojo:  renkler.darkTurquoise,
src/main/resources/samples/tr/kojo-kilavuz/ornek-yazilimlar.kojo:  renkler.yellowGreen)
src/main/resources/samples/tr/kojo-kilavuz/ornek-yazilimlar.kojo:aşağıda boş bir satıra 'renkler.'
src/main/resources/samples/tr/kojo-kilavuz/ornek-yazilimlar.kojo:Adı d harfiyle başlayan renkleri
src/main/resources/samples/tr/kojo-kilavuz/ornek-yazilimlar.kojo:bulmak istersen renkler.d yazıp
src/main/resources/samples/tr/kojo-kilavuz/ornek-yazilimlar.kojo://  renkler.d
src/main/resources/samples/tr/kojo-kilavuz/ornek-yazilimlar.kojo://  renkler
src/main/resources/samples/tr/sierpinski-tri.kojo:dez kirliBeyaz = renkler.hex(0xF2F5F1)
src/main/resources/samples/tr/sierpinski-tri.kojo:dez mavimsi = renkler.darkBlue.fadeOut(0.4)
src/main/resources/samples/tr/sierpinski-tri.kojo:dez koyuYeşil = renkler.darkSeaGreen
src/main/resources/samples/tr/subtraction-game.kojo:dez aaRengi = renkler.khaki // artalan yani arkaplan rengi
src/main/resources/samples/tr/car-ride.kojo:dez dermanÇizimi = Resim.yazıRenkli(dermanYazısı, 20, renkler.aquamarine)
src/main/resources/samples/tr/car-ride.kojo:    dez kalanSüreGösterimi = Resim.yazıRenkli(kalanSüre, 20, renkler.azure)
src/main/resources/samples/tr/flappy-ball.kojo:    dez engel = boyaRengi(renkler.blueViolet) * kalemRengi(renksiz) *
src/main/resources/samples/tr/animated-square-creation.kojo:dez altın = renkler.gold
src/main/resources/samples/tr/shapes-cols.kojo:// Yine sadece bir kare çizelim. Ama bu sefer, değişik renkler kullanmayı da
src/main/resources/samples/tr/shapes-cols.kojo:   Aynı şekilde renkleri de değiştirebiliriz. 
src/main/resources/samples/tr/shapes-cols.kojo:   Ama Kojo şimdilik Türkçe renklerle yapamıyor bunu. Onun için aşağıda 
* boyaRengi completion gives döndür(boya)!
* !! Completions a to z!
** Hata oldu - java.lang.NullNoktaerException (kütük dosyasında daha çok bilgi var)
/Users/ben/a_yaz/book/dosya-ve-klasorler.kojo

DosyaArama.dir = "/Users/ben/"
bilgi

** Hata oldu - java.util.regex.PatternSyntaxException: Dangling meta character '*' near index 0
*is*.scala
^ (kütük dosyasında daha çok bilgi var)

"abc".eşlenirMi("*")

** Hata oldu - java.util.NoSuchElementException: head of empty list (kütük dosyasında daha çok bilgi var)
BatchPics()

cleari
val bp = BatchPics(Picture.circle(30), Picture.rect(10, 20))
draw(bp)
bp.showNext(1)
** Color Renk
RenkArıRenkDoygunlukAydınlık(arıRenk: Sayı, doygunluk: Sayı, aydınlık: Sayı): DRenk
RenkDoğrusalDeğişim(x1: Sayı, y1: Sayı, renk1: RenkYöntemleri.bu.Renk, x2: Sayı, y2: Sayı, renk2: RenkYöntemleri.bu.Renk, dönüşlü: İkil): java.awt.GradientPaint
RenkADA(arıRenk: Sayı, doygunluk: Sayı, aydınlık: Sayı): DRenk
RenkDD(x1: Sayı, y1: Sayı, renk1: RenkYöntemleri.bu.Renk, x2: Sayı, y2: Sayı, renk2: RenkYöntemleri.bu.Renk, dönüşlü: İkil): java.awt.GradientPaint
RenkKYM(kırmızı: Sayı, yeşil: Sayı, mavi: Sayı, saydam: Sayı): Renk
Renkler: RenkYöntemleri
renksiz: Renk
renkler(r: net.kogics.kojo.doodle.Color.tür): renkler
renkler: RenkYöntemleri
Renk: RenkYöntemleri

*** Matematik
açıkSarı: net.kogics.kojo.doodle.Color
açıkÇelikMavisi: net.kogics.kojo.doodle.Color
açıkKurşunGrisi: net.kogics.kojo.doodle.Color
açıkGökMavisi: net.kogics.kojo.doodle.Color
açıkDenizYeşili: net.kogics.kojo.doodle.Color
açıkSomon: net.kogics.kojo.doodle.Color
açıkPembe: net.kogics.kojo.doodle.Color
açıkAltınbaşakSarısı: net.kogics.kojo.doodle.Color
açıkMercan: net.kogics.kojo.doodle.Color
açıkYeşil: net.kogics.kojo.doodle.Color
açıkCamgöbeği: net.kogics.kojo.doodle.Color
açıkMavi: net.kogics.kojo.doodle.Color
koyuMenekşe: net.kogics.kojo.doodle.Color
koyuTurkuaz: net.kogics.kojo.doodle.Color
koyuKurşunGrisi: net.kogics.kojo.doodle.Color
koyuKurşunMavisi: net.kogics.kojo.doodle.Color
koyuDenizYeşili: net.kogics.kojo.doodle.Color
koyuSomon: net.kogics.kojo.doodle.Color
koyuKırmızı: net.kogics.kojo.doodle.Color
koyuOrkidePembesi: net.kogics.kojo.doodle.Color
koyuTuruncu: net.kogics.kojo.doodle.Color
koyuZeytinYeşili: net.kogics.kojo.doodle.Color
koyuMorumsu: net.kogics.kojo.doodle.Color
koyuHaki: net.kogics.kojo.doodle.Color
koyuYeşil: net.kogics.kojo.doodle.Color
koyuKlasikGri: net.kogics.kojo.doodle.Color
koyuAltınbaşak: net.kogics.kojo.doodle.Color
koyuCamgöbeği: net.kogics.kojo.doodle.Color
koyuMavi: net.kogics.kojo.doodle.Color
beyazlatılmışBadem: net.kogics.kojo.doodle.Color
çelikMavisi: net.kogics.kojo.doodle.Color
gökMavisi: net.kogics.kojo.doodle.Color
mercan: net.kogics.kojo.doodle.Color
haki: net.kogics.kojo.doodle.Color
menekşe: net.kogics.kojo.doodle.Color
turkuaz: net.kogics.kojo.doodle.Color
kurşunGrisi: net.kogics.kojo.doodle.Color
kurşunMavisi: net.kogics.kojo.doodle.Color
denizYeşili: net.kogics.kojo.doodle.Color
somon: net.kogics.kojo.doodle.Color
orkidePembesi: net.kogics.kojo.doodle.Color
zeytin: net.kogics.kojo.doodle.Color
yeşilimsiSarı: net.kogics.kojo.doodle.Color
altın: net.kogics.kojo.doodle.Color
altınbaşak: net.kogics.kojo.doodle.Color
camgöbeği: Renk
morumsu: Renk
turuncu: Renk
açıkGri: Renk
koyuGri: Renk
gri: Renk
beyaz: Renk
siyah: Renk
kahverengi: Renk
pembe: Renk
mor: Renk
yeşil: Renk
sarı: Renk
kırmızı: Renk
mavi: Renk
renksiz: Renk

* rastgele
rastgele(altSınır: Sayı, üstSınır: Sayı): Sayı
rastgeleDiziden(dizi: Dizi[T]): T
rastgeleDiziden(dizi: Dizi[T], ağırlıklar: Dizi[Kesir]): T
rastgeleDoğalKesir: Kesir
rastgeleKarıştır(xLer: YinelenebilirBirKere[T]): C
rastgeleKesir(altSınır: Kesir, üstSınır: Kesir): Kesir
rastgeleNormalKesir: Kesir
rastgeleRenk: Renk
rastgeleSayı: Sayı
rastgeleSeçim: İkil
rastgeleTohumunuKur(tohum: Uzun): Birim
rastgeleUzun: Long
rastgeleÇanEğrisinden: Kesir
rastgeleİkil: İkil
rastgeleŞeffafRenk: Renk
* Matematik nesnesi
açı(n1: Nokta, n2: Nokta): Kesir
açı(x1: Kesir, y1: Kesir, x2: Kesir, y2: Kesir): Kesir
dereceye(açı: Kesir): Kesir
değişim(sayılar: Dizik[Kesir]): Kesir
değişim(sayılar: Dizik[Kesir], ortalama: Kesir): Kesir
doğalLogu(x: Kesir): Kesir
eSayısı: Kesir
enUfakOrtakKat(s1: Sayı, s2: Sayı): Sayı
enUfakOrtakKat(s1: Uzun, s2: Uzun): Uzun
enUfağı(x: Kesir, y: Kesir): Kesir
enUfağı(x: Sayı, y: Sayı): Sayı
enUfağı(x: UfakKesir, y: UfakKesir): UfakKesir
enUfağı(x: Uzun, y: Uzun): Uzun
enİriOrtakPayda(s1: Sayı, s2: Sayı): Sayı
enİriOrtakPayda(s1: Uzun, s2: Uzun): Uzun
enİrisi(x: Kesir, y: Kesir): Kesir
enİrisi(x: Sayı, y: Sayı): Sayı
enİrisi(x: UfakKesir, y: UfakKesir): UfakKesir
enİrisi(x: Uzun, y: Uzun): Uzun
eüssü(x: Kesir): Kesir
gücü: (Kesir, Kesir) => Kesir
işareti(x: Number): Sayı
karekökü(x: Kesir): Kesir
karesi(x: Kesir): Kesir
kosinüs(açı: Kesir): Kesir
kosinüsünAçısı(x: Kesir): Kesir
kuvveti(x: Kesir, k: Kesir): Kesir
log2tabanlı(x: Kesir): Kesir
logTabanlı(x: Kesir, t: Kesir): Kesir
logaritması(x: Kesir): Kesir
mutlakDeğer(x: Kesir): Kesir
mutlakDeğer(x: Sayı): Sayı
mutlakDeğer(x: UfakKesir): UfakKesir
mutlakDeğer(x: Uzun): Uzun
onlukTabandaLogu(x: Kesir): Kesir
ortalama(sayılar: Dizik[Kesir]): Kesir
piSayısı: Kesir
radyana(açı: Kesir): Kesir
rasgele: Kesir
sayıya(x: Number): Sayı
sinüs(açı: Kesir): Kesir
sinüsünAçısı(x: Kesir): Kesir
taban(x: Kesir): Kesir
tanjant(açı: Kesir): Kesir
tanjantınAçısı(x: Kesir): Kesir
tavan(x: Kesir): Kesir
uzaklık(n1: Nokta, n2: Nokta): Kesir
uzaklık(x1: Kesir, y1: Kesir, x2: Kesir, y2: Kesir): Kesir
yakın(x: Kesir): Uzun
yakın(x: UfakKesir): Sayı
yakını(x: Kesir): Kesir
yuvarla(sayı: Number, basamaklar: Sayı): Kesir

* ç z'den sonra geliyor! Örnegin:
satıryaz(
    Dizi("zeytin", "kahverengi", "altın", "çelikMavisi").sıralı
    )
DizikDizi(altın, kahverengi, zeytin, çelikMavisi)

* DizikDizi? toString: DizikDizi(altın, kahverengi, zeytin, çelikMavisi)
dez x = 
    Dizi("zeytin", "kahverengi", "altın", "çelikMavisi").sıralı

satıryaz(x)

*** A few things to translate/amend 2.9.29 Kojo'ya Hoşgeldin!
 Görsel paletle kolaylık için   → En üstteki 'Araçlar' menüsünde 'Komut Paleti' var. Ona tıkla
 Yazı tamamlama özelliği için   → Yazılımcık düzenleyicisinde Ctrl+Boşluk veya Ctrl+Alt+Boşluk tuşuna bas
 Çıktıyı hızla değiştirmek için → Yazılımcık düzenleyicisinde sayı veya renge Ctrl tuşuyla birlikte tıkla
 Bağlamsal komutlar için        → Herhangi bir pencere ya da göz üzerinde farenin sağ tuşuna bas
 Tuvali kaydır, boyunu değiştir → Fareye basarak kaydır, üst tekerleğini döndürerek büyütüp küçült
 Renk ve görünüş ayarları       → En üstteki 'Dosya' menüsünde 'Ayarlar' var. Ona tıkla
Warning: the fonts "Times" and "Times" are not available for the Java logical font "Serif", which may have unexpected appearance or behavior. Re-enable the "Times" font to remove this warning.
Warning: the fonts "Times" and "Times" are not available for the Java logical font "Serif", which may have unexpected appearance or behavior. Re-enable the "Times" font to remove this warning.

Scanning libk...
Additional jars available (within libk) - 25

Scanning extensions...
Additional jars available (within /Users/ben/.kojo/extension/kojo-music) - 4

Kojo başlatılıyor...
                                      _____

Kaplumbağalı Kojo'ya Hoşgeldin!

altın
altınbaşak
açıkAltınbaşakSarısı
açıkCamgöbeği
açıkDenizYeşili
açıkGri
açıkGökMavisi
açıkKurşunGrisi
açıkMavi
açıkMercan
açıkPembe
açıkSarı
açıkSomon
açıkYeşil
açıkÇelikMavisi
beyaz
beyazlatılmışBadem
camgöbeği
çelikMavisi
denizYeşili
gri
gökMavisi
haki
kahverengi
koyuAltınbaşak
koyuCamgöbeği
koyuDenizYeşili
koyuGri
koyuHaki
koyuKlasikGri
koyuKurşunGrisi
koyuKurşunMavisi
koyuKırmızı
koyuMavi
koyuMenekşe
koyuMorumsu
koyuOrkidePembesi
koyuSomon
koyuTurkuaz
koyuTuruncu
koyuYeşil
koyuZeytinYeşili
kurşunGrisi
kurşunMavisi
kırmızı
mavi
menekşe
mercan
mor
morumsu
orkidePembesi
pembe
renksiz
sarı
siyah
somon
turkuaz
turuncu
yeşil
yeşilimsiSarı
zeytin

** !! Türler ** Types -- 390 or so Did upto and including Color!
AbstractMethodError: scala.package ----- SoyutYöntemHatası
Animation: net.kogics.kojo.lite.Builtins ----- Canlandırma
Any: scala ----- Her
AnyRef: scala ----- HerGönder
AnyVal: scala ----- HerDeğer
AnyValCompanion: scala ----- HerDeğerinEşliği
App: scala ----- Uygulama
Appendable: java.lang ----- Eklenir
ArithmeticException: java.lang ----- MatematikselHata
Array: scala ----- Dizik ve Dizim
ArrayBuffer: net.kogics.kojo.lite.CoreBuiltins ----- EsnekDizim
ArrayCharSequence: scala.Predef ----- HarfDizisindenDizik
ArrayIndexOutOfBoundsException: scala.package ----- DizikSınırıDışınaTaşmaHatası
ArrayStoreException: java.lang ----- DizikYüklemeHatası
ArrowAssoc: scala.Predef ----- Okİlişkisi
AssertionError: java.lang ----- BelirtimHatası
AutoCloseable: java.lang ----- KendiKapanır
Background: Wrapper1.builtins.Tw.Background ----- Artalan
BatchPics: net.kogics.kojo.lite.CoreBuiltins ----- Resim.küme
BigDecimal: scala.package ----- İriKesir
BigInt: scala.package ----- İriSayı
BoldFont: Int ----- Yazıyüzü.kalın
Boolean2boolean(x: Boolean): Boolean ----- İkildenİkile
Boolean: scala ----- İkil
BootstrapMethodError: java.lang  ----- ÖnyüklemeYöntemHatası
BufferedIterator: scala.package ----- BellekliYineleyici
Button ----- ay.Düğme
Byte2byte(x: Byte): Byte ----- LokmadanLokmaya
Byte: scala ----- Lokma
C: net.kogics.kojo.staging.KColor.type ??
CanvasDraw: net.kogics.kojo.lite.Builtins ??
CapJoin: net.kogics.kojo.staging.CapJoin ??
Char: scala ----- Harf
CharSequence: java.lang ----- HarfDizisi
Character2char(x: Character): Char ----- HarftenHarfe
Character: java.lang ----- JHarf
Class: scala.Predef ----- Sınıf
ClassCastException: scala.package ----- KuraldışıSınıfDökümü
ClassCircularityError: java.lang ----- DöngüselSınıfHatası
ClassFormatError: java.lang ----- HatalıSınıfDüzeni
ClassLoader: java.lang ----- SınıfYükleyici
ClassNotFoundException: java.lang ----- SınıfBulunamadı
ClassValue: java.lang ----- SınıfDeğeri
ClipShape: net.kogics.kojo.lite.Builtins
CloneNotSupportedException: java.lang
Cloneable: scala.package
Cm: net.kogics.kojo.core.Cm.type
CmdQ: net.kogics.kojo.lite.Builtins
ColPanel
ColPanel: net.kogics.kojo.lite.Builtins
CollisionDetector: net.kogics.kojo.fpgaming.CollisionDetector
Color ----- RenkKYM/Renk/Renk.kym/Renk.kyms
ColorG ----- RenkDD/RenkDoğrusalDeğişim/Renk.doğrusalDeğişim
ColorHSB ----- RenkADA/Renk.ada/Renk.adas
ColorLinearG ----- RenkDD/RenkDoğrusalDeğişim/Renk.doğrusalDeğişim
ColorMaker: net.kogics.kojo.doodle.Color.type ----- renkler/Renkler
ColorRadialG ----- Renk.merkezdenDışarıDoğruDeğişim
Comparable: java.lang ----- Karşılaştırılabilir
Compiler: java.lang ----- Derleyici
Console: scala ----- KumandaPaneli
Costume: Wrapper1.builtins.Tw.Costume ----- Görünüş
Data: <empty> ----- 
Def: <empty>
DelayedInit: scala
Deprecated: java.lang
Double2double(x: Double): Double
Double: java.awt.geom.Point2D
DoubleRead: net.kogics.kojo.util.Read.DoubleRead.type
DropDown: net.kogics.kojo.lite.Builtins
DummyImplicit: scala
Dynamic: scala
Either: scala.package
Ensuring(self: A): Ensuring[A]
Ensuring: scala.Predef
Enum: java.lang
EnumConstantNotPresentException: java.lang
Enumeration: scala
Equals: scala
Equiv: scala.package
Error: scala.package
Exception: scala.package
ExceptionInInitializerError: java.lang
Float2float(x: Float): Float
Float: scala
Font
Fractional: scala.package
Function0: scala
Function10: scala
Function11: scala
Function12: scala
Function13: scala
Function14: scala
Function15: scala
Function16: scala
Function17: scala
Function18: scala
Function19: scala
Function1: scala
Function20: scala
Function21: scala
Function22: scala
Function2: scala
Function3: scala
Function4: scala
Function5: scala
Function6: scala
Function7: scala
Function8: scala
Function9: scala
Function: scala.Predef
FunctionalInterface: java.lang
GPics
GPics2: net.kogics.kojo.lite.CoreBuiltins
HPics
HPics2: net.kogics.kojo.lite.CoreBuiltins
HashMap: net.kogics.kojo.lite.CoreBuiltins
HashSet: net.kogics.kojo.lite.CoreBuiltins
IllegalAccessError: java.lang
IllegalAccessException: java.lang
IllegalArgumentException: scala.package
IllegalCallerException: java.lang
IllegalMonitorStateException: java.lang
IllegalStateException: java.lang
IllegalThreadStateException: java.lang
Image: net.kogics.kojo.lite.CoreBuiltins
ImageOp: net.kogics.kojo.lite.Builtins
Inch: net.kogics.kojo.core.Inch.type
IncompatibleClassChangeError: java.lang
IncrPage: net.kogics.kojo.lite.Builtins
IndexOutOfBoundsException: scala.package
IndexedSeq: scala.package
InheritableThreadLocal: java.lang
InstantiationError: java.lang
InstantiationException: java.lang
Instrument: net.kogics.kojo.music.Instrument.type
Int: scala
IntRead: net.kogics.kojo.util.Read.IntRead.type
Integer2int(x: Integer): Int
Integer: java.lang ----- JSayı
Integral: scala.package
InternalError: java.lang
InterruptedException: scala.package
ItalicFont: Int ----- Yazıyüzü.vurgulu
Iterable: scala.package
IterableOnce: scala.package
Iterator: scala.package
JComponent: javax.swing
JKW: <empty>
KW: <empty>
Kc: net.kogics.kojo.staging.KeyCodes
KeyFrames(frames: (Double, Seq[Double])*): net.kogics.kojo.animation.KeyFrames
Kojo-z: <root>
Label: net.kogics.kojo.lite.Builtins
LayerInstantiationException: java.lang
LazyList: scala.package
Left: scala.package
LinkageError: java.lang
List: scala.package
Long2long(x: Long): Long
Long: scala
LowPriorityImplicits2: scala
LowPriorityImplicits: scala
MMap: net.kogics.kojo.lite.CoreBuiltins
MSeq: net.kogics.kojo.lite.CoreBuiltins
MSet: net.kogics.kojo.lite.CoreBuiltins
Manifest: scala.Predef
Map: scala.Predef
MatchError: scala
Matchers: org.scalatest
Math: java.lang
Melody: net.kogics.kojo.lite.Builtins
Method: <empty>
Module: java.lang
ModuleLayer: java.lang
MouseButton: net.kogics.kojo.staging.MouseButtons
MusicScore: net.kogics.kojo.core.Score.type
Name: <empty>
Ne: <empty>
NegativeArraySizeException: java.lang
Nil: collection.immutable.Nil.type
NoClassDefFoundError: java.lang
NoManifest: reflect.NoManifest.type
NoSuchElementException: scala.package
NoSuchFieldError: java.lang
NoSuchFieldException: java.lang
NoSuchMethodError: java.lang
NoSuchMethodException: java.lang
None: scala
NotImplementedError: scala
Nothing: scala
Null: scala
NullPointerException: scala.package
Number: java.lang ----- JTemelSayı 
NumberFormatException: scala.package
Numeric: scala.package
Object: java.lang
OptManifest: scala.Predef
Option: scala
Ordered: scala.package
Ordering: scala.package
OutOfMemoryError: java.lang
Override: java.lang
PShapes: Wrapper1.builtins.Picture.type
Package: java.lang
Page: net.kogics.kojo.lite.Builtins
Painter: net.kogics.kojo.lite.Builtins
Para: net.kogics.kojo.lite.Builtins
PartialFunction: scala
PartialOrdering: scala.package
PartiallyOrdered: scala.package
Pic0: net.kogics.kojo.lite.Builtins
Pic: net.kogics.kojo.lite.Builtins
PicScreen: net.kogics.kojo.lite.CoreBuiltins
PicShape: Wrapper1.builtins.Picture.type
Picture
PictureDraw: net.kogics.kojo.lite.Builtins
PictureMaker: net.kogics.kojo.lite.Builtins
PictureT
Pixel: net.kogics.kojo.core.Pixel.type
PlainFont: Int ----- Yazıyüzü.sade
Point
Point2D(x: Double, y: Double): java.awt.geom.Point2D.Double
Point2D: net.kogics.kojo.lite.CoreBuiltins
Point: net.kogics.kojo.lite.CoreBuiltins
PointLight
PointLight: (Double, Double, Double, Double, Double) => com.jhlabs.image.LightFilter#PointLight
PolyLine
PolyLine: net.kogics.kojo.lite.CoreBuiltins
Predef: scala
Process: java.lang
ProcessBuilder: java.lang
ProcessHandle: java.lang
Product10: scala
Product11: scala
Product12: scala
Product13: scala
Product14: scala
Product15: scala
Product16: scala
Product17: scala
Product18: scala
Product19: scala
Product1: scala
Product20: scala
Product21: scala
Product22: scala
Product2: scala
Product3: scala
Product4: scala
Product5: scala
Product6: scala
Product7: scala
Product8: scala
Product9: scala
Product: scala
Proxy: scala
Random: java.util.Random
Range: scala.package
Rational(rep: org.apache.commons.math3.fraction.BigFraction): Wrapper1.builtins.Rational
Rational: net.kogics.kojo.kmath.Rationals
RationalMaker(sc: StringContext): Wrapper1.builtins.RationalMaker
RationalMaker: net.kogics.kojo.kmath.Rationals
Readable: java.lang
ReflectiveOperationException: java.lang
Rhythm: net.kogics.kojo.lite.Builtins
Right: scala.package
RowPanel
RowPanel: net.kogics.kojo.lite.Builtins
Runnable: java.lang
Runtime: java.lang
RuntimeException: scala.package
RuntimePermission: java.lang
SafeVarargs: java.lang
ScalaReflectionException: scala
SecurityException: java.lang
SecurityManager: java.lang
Seq: scala.package
SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence
SeqCharSequence: scala.Predef
SerialVersionUID: scala
Serializable: scala.package
Set: scala.Predef
Short2short(x: Short): Short
Short: scala
Singleton: scala
SketchRunner: net.kogics.kojo.lite.Builtins
Slider
Slider: net.kogics.kojo.lite.Builtins
Some: scala
Sound: Wrapper1.builtins.Tw.Sound
Specializable: scala
SpotLight
SpotLight: (Double, Double, Double, Double, Double) => com.jhlabs.image.LightFilter#SpotLight
SpriteSheet: net.kogics.kojo.lite.Builtins
StackOverflowError: java.lang
StackTraceElement: java.lang
StackWalker: java.lang
Staging: net.kogics.kojo.staging.API
Story
Story: net.kogics.kojo.lite.Builtins
StoryPage: net.kogics.kojo.lite.Builtins
Stream: scala.package
StrictMath: java.lang
String: scala.Predef
StringBuffer: java.lang
StringBuilder: scala.package
StringContext: scala
StringFormat(self: A): StringFormat[A]
StringFormat: scala.Predef
StringIndexOutOfBoundsException: scala.package
StringRead: net.kogics.kojo.util.Read.StringRead.type
Sub: net.kogics.kojo.lite.Builtins
Subscriptions: net.kogics.kojo.fpgaming.Subscriptions.type
SuppressWarnings: java.lang
Symbol: scala
System: java.lang
TAGS: <root>
TSCanvas: net.kogics.kojo.lite.DrawingCanvasAPI
TextArea
TextArea: net.kogics.kojo.lite.Builtins
TextField
TextField: net.kogics.kojo.lite.Builtins
TexturePaint
Thread: java.lang
ThreadDeath: java.lang
ThreadGroup: java.lang
ThreadLocal: java.lang
Throwable: scala.package
TileWorld: net.kogics.kojo.lite.Builtins
TileXY: net.kogics.kojo.lite.Builtins
Timeline(duration: Double, keyFrames: net.kogics.kojo.animation.KeyFrames, easer: net.kogics.kojo.kmath.KEasing, picMaker: Seq[Double] => Builtins.this.Picture, hideOnDone: Boolean): Wrapper1.builtins.Animation
Timeline(duration: Double, keyFrames: net.kogics.kojo.animation.KeyFrames, easers: Seq[net.kogics.kojo.kmath.KEasing], picMaker: Seq[Double] => Builtins.this.Picture, hideOnDone: Boolean): Wrapper1.builtins.Animation
ToggleButton
ToggleButton: net.kogics.kojo.lite.Builtins
Transition(durationSeconds: Double, fromState: Seq[Double], toState: Seq[Double], easer: net.kogics.kojo.kmath.KEasing, picMaker: Seq[Double] => Builtins.this.Picture, hideOnDone: Boolean): Wrapper1.builtins.Animation
Traversable: scala.package
TraversableOnce: scala.package
Tuple10: scala
Tuple11: scala
Tuple12: scala
Tuple13: scala
Tuple14: scala
Tuple15: scala
Tuple16: scala
Tuple17: scala
Tuple18: scala
Tuple19: scala
Tuple1: scala
Tuple20: scala
Tuple21: scala
Tuple22: scala
Tuple2: scala
Tuple3: scala
Tuple4: scala
Tuple5: scala
Tuple6: scala
Tuple7: scala
Tuple8: scala
Tuple9: scala
Turtle: net.kogics.kojo.lite.CoreBuiltins
Tw: net.kogics.kojo.turtle.TurtleWorldAPI
Type: <empty>
TypeNotPresentException: java.lang
UninitializedError: scala
UninitializedFieldError: scala
UniquenessCache: scala
Unit: scala
UnknownError: java.lang
UnsatisfiedLinkError: java.lang
UnsupportedClassVersionError: java.lang
UnsupportedOperationException: scala.package
UserCode: Wrapper1
VPics
VPics2: net.kogics.kojo.lite.CoreBuiltins
Val: <empty>
ValueOf: scala
Vector2D
Vector2D: net.kogics.kojo.lite.Builtins
Vector: scala.package
VerifyError: java.lang
Viewable: net.kogics.kojo.story
VirtualMachineError: java.lang
Void: java.lang
Widget: net.kogics.kojo.lite.Builtins
Wrapper1: <empty>
** !! lower case completions -- 760 or so
a
abstract
activateCanvas
activateEditor(): Unit
addCodeTemplates
addCodeTemplates(lang: String, templates: Map[String,String]): Unit
addHelpContent
addHelpContent(lang: String, content: Map[String,String]): Unit
akka: <root>
animPar(as: Builtins.this.Animation*): Wrapper1.builtins.Animation
animPar(as: scala.collection.Seq[Builtins.this.Animation]): Wrapper1.builtins.Animation
animSeq(as: Builtins.this.Animation*): Wrapper1.builtins.Animation
animSeq(as: scala.collection.Seq[Builtins.this.Animation]): Wrapper1.builtins.Animation
animate
animateWithCanvasDraw(drawFrame: Builtins.this.CanvasDraw => Unit): Unit
animateWithRedraw
animateWithSetupCanvasDraw(setupCanvas: Builtins.this.CanvasDraw => Unit)(drawFrame: Builtins.this.CanvasDraw => Unit): Unit
animateWithState
animationDelay
annotation: scala
any2stringadd(self: A): any2stringadd[A]
any2stringadd: scala.Predef
apple: <root>
arc
arc2
arcVertex(x: Double, y: Double, angle: Double): Unit
area
asInstanceOf: T0
assert(assertion: Boolean): Unit
assert(assertion: Boolean, message: => Any): Unit
assets: <root>
assume(assumption: Boolean): Unit
assume(assumption: Boolean, message: => Any): Unit
astStopPhase: String
augmentString(x: String): scala.collection.StringOps
availableFontNames: List[String]
axes
axesOff
axesOn
back
badlib: <root>
baseFontSize: Int
bd2double(bd: BigDecimal): Double
beamsOff
beamsOn
beans: scala
beginShape
bezierVertex(cx1: Double, cy1: Double, cx2: Double, cy2: Double, x2: Double, y2: Double): Unit
bibliothek: <root>
black: java.awt.Color
blue: java.awt.Color
blur
blur: Int => net.kogics.kojo.picture.Blurc
boolean2Boolean(x: Boolean): Boolean
booleanArrayOps(xs: Array[Boolean]): scala.collection.ArrayOps[Boolean]
booleanWrapper(x: Boolean): scala.runtime.RichBoolean
bouncePicOffPic(pic: Builtins.this.Picture, vel: Builtins.this.Vector2D, obstacle: Builtins.this.Picture): Wrapper1.builtins.Vector2D
bouncePicOffStage(pic: Builtins.this.Picture, vel: Builtins.this.Vector2D): Wrapper1.builtins.Vector2D
bouncePicVectorOffPic
bouncePicVectorOffPic(pic: Builtins.this.Picture, v: Builtins.this.Vector2D, obstacle: Builtins.this.Picture): Wrapper1.builtins.Vector2D
bouncePicVectorOffStage
bouncePicVectorOffStage(p: Builtins.this.Picture, v: Builtins.this.Vector2D): Wrapper1.builtins.Vector2D
bounds: net.kogics.kojo.picture.PostDrawTransformc
br
breakpoint
breakpoint(msg: Any, pauseMessage: String, resumeMsg: String): Unit
brit
britMod
brown: java.awt.Color
builtins: net.kogics.kojo.lite.Builtins
byte2Byte(x: Byte): Byte
byteArrayOps(xs: Array[Byte]): scala.collection.ArrayOps[Byte]
byteWrapper(x: Byte): scala.runtime.RichByte
c2rc(c: CoreBuiltins.this.Color): net.kogics.kojo.doodle.Color
camScale: Double
canvasBounds
canvasSketch
canvasSketch(sketch: AnyRef{def setup(cd: Builtins.this.CanvasDraw): Unit; def drawLoop(cd: Builtins.this.CanvasDraw): Unit}, scaleOutFactor: Double): Unit
case
catch
center(pic: Builtins.this.Picture): Unit
challenge: <root>
changePosition
char2Character(x: Char): Character
charArrayOps(xs: Array[Char]): scala.collection.ArrayOps[Char]
charWrapper(c: Char): scala.runtime.RichChar
checkForLargeDrawing
checkNotePlayer
cheight: Int
cheight_=
circle
class
classOf: Class[T]
clear
clearGameTime
clearOutput
clearOutputError(): Unit
clearSingleLineCode
clearStepDrawing(): Unit
clearWithUL
cleari
clip(clipShape: java.awt.Shape): net.kogics.kojo.picture.Clippedc
clone: Object
clr(): Unit
cm: net.kogics.kojo.doodle.Color.type
code
col
col: (=> net.kogics.kojo.core.Picture, Int) => net.kogics.kojo.picture.VPics
collection: scala
color
color(r: Int, g: Int, b: Int): java.awt.Color
color(rgbHex: Int): java.awt.Color
com: <root>
compat: scala
compileRunCode(code: String): Unit
concurrent: scala
copyArrayToImmutableIndexedSeq(xs: Array[T]): IndexedSeq[T]
countDownLatch
countDownLatch(n: Int): java.util.concurrent.CountDownLatch
currGame
currGame_=
currentDir: String
curveVertex(x: Double, y: Double): Unit
curveVertexRt(r: Double, theta: Double): Unit
cwidth: Int
cwidth_=
cyan: java.awt.Color
darkGray: java.awt.Color
darkGrayClassic: java.awt.Color
data: <root>
de: <root>
def
def_command_0
def_command_1
def_command_2
def_function_1
def_function_2
deprecated: scala
deprecatedInheritance: scala
deprecatedName: scala
deprecatedOverriding: scala
direction: Double
disablePanAndZoom(): Unit
dist: <root>
distantLight(direction: Double, elevation: Double): com.jhlabs.image.LightFilter
div
do
dot
double2Double(x: Double): Double
doubleArrayOps(xs: Array[Double]): scala.collection.ArrayOps[Double]
doubleWrapper(x: Double): scala.runtime.RichDouble
draw
drawAndHide
drawAndHide(pictures: Builtins.this.Picture*): Unit
drawCentered(pic: Builtins.this.Picture): Unit
drawCenteredMessage(message: String, color: Builtins.this.Color, fontSize: Int): Unit
drawLoop(fn: => Unit): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity]
drawStage
drawStage(fillc: java.awt.Paint): Unit
dtor(n: Double): Wrapper1.builtins.Rational
easing: net.kogics.kojo.kmath.KEasing.type
edu: <root>
effect
effect(filter: java.awt.image.BufferedImageOp): net.kogics.kojo.picture.ApplyFilterc
effect(filterOp: Builtins.this.ImageOp): net.kogics.kojo.picture.ApplyFilterc
effect(name: Symbol, props: (Symbol, Any)*): net.kogics.kojo.picture.SomeEffectc
ellipse
ellipse(r1: Double, r2: Double): Unit
else
em
endShape
entry(): Unit
epochTime
epochTimeMillis
eq(x$1: AnyRef): Boolean
equals(x$1: Object): Boolean
erasePictures(): Unit
eval(expr: String): Option[Any]
evalInDrawingThread(fn: => T): T
example: <root>
examples: <root>
export: <root>
exportImage
exportImageH
exportImageW
exportThumbnail(filePrefix: String, height: Int): java.io.File
extends
fade
fade: Int => net.kogics.kojo.picture.Fadec
false
fast: net.kogics.kojo.core.Fast.type
fillColor
filterImage(img: java.awt.image.BufferedImage, filter: java.awt.image.BufferedImageOp): java.awt.image.BufferedImage
filterPicture(p: Builtins.this.Picture, filter: java.awt.image.BufferedImageOp): Wrapper1.builtins.Picture
final
finalize(): Unit
finally
flip
flipAroundX: net.kogics.kojo.picture.FlipXc.type
flipAroundY: net.kogics.kojo.picture.FlipYc.type
flipX
flipY
float2Float(x: Float): Float
floatArrayOps(xs: Array[Float]): scala.collection.ArrayOps[Float]
floatWrapper(x: Float): scala.runtime.RichFloat
for
forSome
for_range_command
for_seq_command
for_seq_expr
for_seq_expr_multi
forward
ftor(n: Float): Wrapper1.builtins.Rational
fullScreenAction
fullScreenOutputAction
gameTimeEndMsg: Option[Wrapper1.builtins.Picture]
gameTimeEndMsg_=
gameTimeLabel: Option[Wrapper1.builtins.Picture]
gameTimeLabel_=
gameTimeRunning
gameTimeRunning_=
genericArrayOps(xs: Array[T]): scala.collection.ArrayOps[T]
genericWrapArray(xs: Array[T]): scala.collection.mutable.ArraySeq[T]
getClass: Class[_]
getEditorText: String
getImagePixel(image: java.awt.image.BufferedImage, x: Int, y: Int): java.awt.Color
google: <root>
gray: java.awt.Color
green: java.awt.Color
gridOff
gridOn
hashCode: Int
heading
help(): Unit
hiDpiFontIncrease: Int
hideAxes(): Unit
hideGrid(): Unit
hideProtractor(): Unit
hideScale(): Unit
hideScriptInOutput
hideVerboseOutput
home
homeDir: String
hop
hue
hueMod
i18n: <root>
id: net.kogics.kojo.picture.Transc
identity(x: A): A
ids2dds(is: (Int, Seq[Double])): (Double, Seq[Double])
if
ignore(name: String)(fn: => Unit): Unit
iis2dds(is: (Int, Seq[Int])): (Double, Seq[Double])
image
images: <root>
implicit
implicitly: T
import
incr
info: <root>
initRandomGenerator(): Unit
initRandomGenerator(seed: Long): Unit
inline: scala
insertOutputError(text: String): Unit
installDir: String
installer.i4j: <root>
installer: <root>
instrument: java.lang
int2Integer(x: Int): Integer
intArrayOps(xs: Array[Int]): scala.collection.ArrayOps[Int]
intWrapper(x: Int): scala.runtime.RichInt
interpret(code: String): Unit
invisible
invoke: java.lang
io: <root>
isInstanceOf: Boolean
isKeyPressed(key: Int): Boolean
isMousePressed(button: Int): Boolean
isMousePressed: Boolean
isMp3Playing: Boolean
isMusicPlaying: Boolean
isScratchPad: Boolean
isTracing: Boolean
itor(n: Int): Wrapper1.builtins.Rational
java: <root>
javax: <root>
javazoom: <root>
jdk: <root>
joystick(radius: Double): net.kogics.kojo.lite.JoyStick
jssc: <root>
jumpTo
jumpTo(p: net.kogics.kojo.core.Point): Unit
jumpTo(x: Double, y: Double): Unit
ka-bridge: <root>
kmath: net.kogics.kojo.kmath.Kmath.type
kojoCtx: net.kogics.kojo.core.KojoCtx
kojoInterp: net.kogics.kojo.xscala.KojoInterpreter
l10n-level2: <root>
language: scala
languageFeature: scala
lastLine: Option[(java.awt.geom.Point2D.Double, java.awt.geom.Point2D.Double)]
lastTurn: Option[(java.awt.geom.Point2D.Double, Double, Double)]
lazy
left
li
lib: <root>
libs: <root>
light: Double => net.kogics.kojo.picture.Britc
lightGray: java.awt.Color
lightMod: (java.awt.Color, Double) => java.awt.Color
lights(lights: com.jhlabs.image.LightFilter.Light*): net.kogics.kojo.picture.Lightsc
lineTo(p: net.kogics.kojo.core.Point): Unit
lineTo(x: Double, y: Double): Unit
locally(x: T): T
log: <root>
long2Long(x: Long): Long
longArrayOps(xs: Array[Long]): scala.collection.ArrayOps[Long]
longWrapper(x: Long): scala.runtime.RichLong
lruCache(maxEntries: Int): scala.collection.mutable.Map[A,B]
ltor(n: Long): Wrapper1.builtins.Rational
magenta: java.awt.Color
makeCenteredMessage(message: String, color: Builtins.this.Color, fontSize: Int): Wrapper1.builtins.Picture
management: java.lang
manifest: Manifest[T]
match
math: scala
mathgames: <root>
mathx: net.kogics.kojo.kmath.Kmath.type
media: <root>
medium: net.kogics.kojo.core.Medium.type
melody
module-info: <empty>
module: java.lang
mouseButton: Int
mousePosition: net.kogics.kojo.core.Point
mouseX: Double
mouseY: Double
moveTo
mozilla: <root>
mscore
native: scala
ne(x$1: AnyRef): Boolean
net: <root>
new
newMp3Player: net.kogics.kojo.music.KMp3
newTurtle
newTurtle(x: Double, y: Double, costume: String): net.kogics.kojo.core.Turtle
newTurtle: net.kogics.kojo.core.Turtle
nextCostume
noColor: java.awt.Color
noPen: net.kogics.kojo.picture.PreDrawTransformc
noinline: scala
noise
noise: (Int, Double) => net.kogics.kojo.picture.Noisec
notify(): Unit
notifyAll(): Unit
nt(t: net.kogics.kojo.core.Turtle): net.kogics.kojo.turtle.LoTurtle
nt(x: Double, y: Double): net.kogics.kojo.turtle.LoTurtle
nt: net.kogics.kojo.turtle.LoTurtle
null
object
offset
onAnimationStart(fn: => Unit): Unit
onAnimationStop(fn: => Unit): Unit
onClear
onKeyPress(fn: Int => Unit): Unit
onKeyRelease(fn: Int => Unit): Unit
onMouseClick(fn: (Double, Double) => Unit): Unit
onMouseDrag(fn: (Double, Double) => Unit): Unit
onMouseMove(fn: (Double, Double) => Unit): Unit
onRunDone(): Unit
onRunStart(): Unit
opac
optManifest: OptManifest[T]
orange: java.awt.Color
org: <root>
originBottomLeft(): Unit
originTopLeft(): Unit
override
p
p2rp(path: java.awt.geom.GeneralPath): net.kogics.kojo.core.Rich2DPath
package
page
para
pause
pause(seconds: Double): Unit
pauseMillis(milliSeconds: Long): Unit
penColor
penDown
penThickness
penThickness: Double => net.kogics.kojo.picture.StrokeWidthc
penUp
penWidth
perimeter
perlin2: net.kogics.kojo.util.PerlinNoiseImproved
perlin: net.kogics.kojo.util.PerlinNoiseProcessing
picBatch: net.kogics.kojo.picture.BatchPics.type
picCol
picCol2: net.kogics.kojo.picture.VPics2.type
picColCentered
picColCentered: net.kogics.kojo.picture.VPics2.type
picRow
picRow2: net.kogics.kojo.picture.HPics2.type
picRowCentered
picRowCentered: net.kogics.kojo.picture.HPics2.type
picStack
picStack2: net.kogics.kojo.picture.GPics2.type
picStackCentered
picStackCentered: net.kogics.kojo.picture.GPics2.type
pict
pictureSketch(sketch: AnyRef{def setup(cd: Builtins.this.PictureDraw): Unit; def drawLoop(cd: Builtins.this.PictureDraw): Unit}): Unit
pink: java.awt.Color
playMp3
playMp3Loop
playMp3Sound
playMp3Sound(mp3File: String): Unit
playMusic
playMusicLoop
playMusicUntilDone
playNote(pitch: Int, durationMillis: Int, volume: Int): Unit
playSound
playSound(voice: net.kogics.kojo.core.Voice): Unit
pm: Wrapper1.builtins.PictureMaker.type
position
postDrawTransform(fn: Builtins.this.Picture => Unit): net.kogics.kojo.picture.PostDrawTransformc
pre
preDrawTransform(fn: Builtins.this.Picture => Unit): net.kogics.kojo.picture.PreDrawTransformc
preloadImage(file: String): Unit
preloadMp3(mp3File: String): Unit
pressedKeys: scala.collection.Set[Int]
print
printf(text: String, xs: Any*): Unit
println
private
processing: <root>
project: <root>
protected
purple: java.awt.Color
quadraticVertex(cx: Double, cy: Double, x2: Double, y2: Double): Unit
random
randomBoolean
randomColor: java.awt.Color
randomDouble
randomFrom
randomInt: Int
randomLong: Long
randomNormalDouble(mean: Double, stdDev: Double): Double
randomNormalDouble: Double
randomTransparentColor: java.awt.Color
rangeTill(start: Double, end: Double, step: Double): scala.collection.immutable.NumericRange.Exclusive[BigDecimal]
rangeTill(start: Int, end: Int, step: Int): scala.collection.immutable.Range
rangeTo(start: Double, end: Double, step: Double): scala.collection.immutable.NumericRange.Inclusive[BigDecimal]
rangeTo(start: Int, end: Int, step: Int): scala.collection.immutable.Range
rc2c(rc: net.kogics.kojo.doodle.Color): Wrapper1.builtins.Color
rcSeq2cSeq(rcs: scala.collection.Seq[net.kogics.kojo.doodle.Color]): scala.collection.Seq[Wrapper1.builtins.Color]
readDouble
readInt
readln
red: java.awt.Color
ref: scala
refArrayOps(xs: Array[T]): scala.collection.ArrayOps[T]
reflect
reflect: scala
reimportBuiltins(): Unit
reimportDefaults(): Unit
repeat
repeatFor
repeatUntil
repeatWhile
repeati
require(requirement: Boolean): Unit
require(requirement: Boolean, message: => Any): Unit
resetInterpreter(): Unit
resetNotePlayer(): Unit
resetPanAndZoom(): Unit
resolvedPath(fname: String): String
restorePosHe
restoreStyle
retainSingleLineCode
return
right
robosim: <root>
rot
rotp
rotp: (Double, Double, Double) => net.kogics.kojo.picture.Rotpc
round
row
row: (net.kogics.kojo.core.Picture, Int) => net.kogics.kojo.picture.HPics
rpt(n: Int)(code: => net.kogics.kojo.turtle.LoTurtle): net.kogics.kojo.turtle.LoTurtle
rtnp
rtnp_=
run(anim: Builtins.this.Animation): Unit
runCommandQuery(cmdQ: Builtins.this.CmdQ[M]): Unit
runGame(init: S, update: (S, M) => S, view: S => Builtins.this.Picture, subscriptions: S => Seq[Builtins.this.Sub[M]], refreshRate: Long): Unit
runInBackground
runInDrawingThread(code: => Unit): Unit
runInGuiThread(code: => Unit): Unit
runtime: scala
rythm
sRandom: scala.util.Random
samples: <root>
sat
satMod
savePosHe
saveStyle
scala-tr: <root>
scala: <root>
scalariform: <root>
scale
scaleCostume
scalep
scalep(f: Double, x: Double, y: Double): net.kogics.kojo.picture.PreDrawTransformc
schedule
scheduleN(n: Int, seconds: Double)(code: => Unit): javax.swing.Timer
screenDPI: Int
screenSize: java.awt.Dimension
scroll
sealed
setAnimationDelay
setAstStopPhase
setAstStopPhase(phase: String): Unit
setBackground
setBackgroundH
setBackgroundV
setCostume
setCostumeImage
setCostumeImages
setCostumes
setDrawingCanvasAspectRatio(r: Double): Unit
setDrawingCanvasSize(width: Int, height: Int): Unit
setDrawingCanvasToA0(): Unit
setDrawingCanvasToA0Landscape(): Unit
setDrawingCanvasToA1(): Unit
setDrawingCanvasToA1Landscape(): Unit
setDrawingCanvasToA2(): Unit
setDrawingCanvasToA2Landscape(): Unit
setDrawingCanvasToA3(): Unit
setDrawingCanvasToA3Landscape(): Unit
setDrawingCanvasToA4(): Unit
setDrawingCanvasToA4Landscape(): Unit
setEditorFont(name: String): Unit
setEditorTabSize
setEditorTabSize(ts: Int): Unit
setFillColor
setHeading
setImagePixel
setNoPen(): Unit
setNoteInstrument(instrumentCode: Int): Unit
setOutputBackground
setOutputBackground(color: Builtins.this.Color): Unit
setOutputTextColor
setOutputTextColor(color: Builtins.this.Color): Unit
setOutputTextFontSize
setOutputTextFontSize(size: Int): Unit
setPenCapJoin(cap: Int, join: Int): Unit
setPenCapJoin(capJoin: (Int, Int)): Unit
setPenColor
setPenFont
setPenFontSize
setPenThickness
setPosition
setRandomSeed(seed: Long): Unit
setRefreshRate
setRefreshRate(fps: Int): Unit
setScreenDPI
setScreenDPI(dpi: Int): Unit
setSlowness
setSpeed
setUnitLength
setUnitLength(ul: net.kogics.kojo.core.UnitLen): Unit
setup(fn: => Unit): Unit
shapeDone(path: java.awt.geom.GeneralPath): Unit
shapePath: java.awt.geom.GeneralPath
shear(shearX: Double, shearY: Double): net.kogics.kojo.picture.PreDrawTransformc
short2Short(x: Short): Short
shortArrayOps(xs: Array[Short]): scala.collection.ArrayOps[Short]
shortWrapper(x: Short): scala.runtime.RichShort
show
show(pictures: Builtins.this.Picture*): Unit
showAxes(): Unit
showFps(color: Builtins.this.Color, fontSize: Int): Unit
showGameTime(limitSecs: Int, endMsg: => String, color: Builtins.this.Color, fontSize: Int, dx: Double, dy: Double, countDown: Boolean): Unit
showGameTimeCountdown(limitSecs: Int, endMsg: => String, color: Builtins.this.Color, fontSize: Int, dx: Double, dy: Double): Unit
showGrid(): Unit
showProtractor(x: Double, y: Double): net.kogics.kojo.core.Picture
showProtractor: net.kogics.kojo.core.Picture
showScale(x: Double, y: Double): net.kogics.kojo.core.Picture
showScale: net.kogics.kojo.core.Picture
showScriptInOutput
showVerboseOutput
shuffle(seq: scala.collection.Seq[T]): scala.collection.Seq[T]
size(width: Int, height: Int): Unit
sketchpic
slow: net.kogics.kojo.core.Slow.type
span
specialized: scala
spin
spin: Int => net.kogics.kojo.picture.Spinc
src: <root>
stAddButton
stAddField
stAddLinkEnterHandler
stAddLinkEnterHandler(name: String, story: Builtins.this.Story): Unit
stAddLinkExitHandler
stAddLinkExitHandler(name: String, story: Builtins.this.Story): Unit
stAddLinkHandler
stAddLinkHandler(name: String, story: Builtins.this.Story): Unit
stAddUiBigComponent(c: javax.swing.JComponent): Unit
stAddUiComponent(c: javax.swing.JComponent): Unit
stCanvasLocation: java.awt.Point
stClear
stClickRunAsWorksheetButton(): Unit
stClickRunButton
stClickRunInterpreterButton(): Unit
stCompileRunCode(code: String): Unit
stDisableNextButton(): Unit
stEnableNextButton(): Unit
stFieldValue
stFormula
stFrame: javax.swing.JFrame
stGotoUrl(url: String): Unit
stHelpFor(instr: String): String
stInsertCodeBlock
stInsertCodeBlock(code: String): Unit
stInsertCodeInline
stInsertCodeInline(code: String): Unit
stNext
stOnStoryStop(story: Builtins.this.Story)(fn: => Unit): Unit
stPlayMp3
stPlayMp3Loop
stPlayStory
stRunCode
stSetScript
stSetStorytellerWidth(width: Int): Unit
stSetUserControlsBg(color: Builtins.this.Color): Unit
stShowStatusError
stShowStatusMsg
stage: net.kogics.kojo.core.Picture
stageArea: net.kogics.kojo.core.Picture
stageBorder: net.kogics.kojo.core.Picture
stageBot: net.kogics.kojo.core.Picture
stageLeft: net.kogics.kojo.core.Picture
stageRight: net.kogics.kojo.core.Picture
stageTop: net.kogics.kojo.core.Picture
stopAnimation(): Unit
stopAnimationActivity(a: java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity]): Unit
stopAnimations(): Unit
stopMp3(): Unit
stopMp3Loop(): Unit
stopMusic(): Unit
stopNotePlayer(): Unit
strong
sty
style
sun: <root>
super
superFast: net.kogics.kojo.core.SuperFast.type
swing: scala
switchToDefault2Perspective(): Unit
switchToDefaultPerspective(): Unit
switchToHistoryBrowsingPerspective(): Unit
switchToOutputStoryViewingPerspective(): Unit
switchToScriptEditingPerspective(): Unit
switchToStoryViewingPerspective(): Unit
switchToWorksheetPerspective(): Unit
synchronized(x$1: T0): T0
sys: scala
tCanvas: net.kogics.kojo.core.SCanvas
target: <root>
templates: <root>
test
test(name: String)(fn: => Unit): Unit
textExtent
this
throw
throws: scala
timeit(fn: => T): T
timeit(msg: String)(fn: => T): T
timeline
timer
timer(milliSeconds: Long)(code: => Unit): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity]
timerWithState(rate: Long, init: S)(code: S => S): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity]
toIhm(handler: Int => Unit): net.kogics.kojo.story.HandlerHolder[Int]
toShm(handler: String => Unit): net.kogics.kojo.story.HandlerHolder[String]
toString: String
toVhm(handler: () => Unit): net.kogics.kojo.story.HandlerHolder[Unit]
toggleFullScreenCanvas(): Unit
toggleFullScreenOutput(): Unit
tools: scala
towards
trait
trans
transform(fn: Builtins.this.Picture => Unit): net.kogics.kojo.picture.PreDrawTransformc
transient: scala
transition
triangulate(points: scala.collection.Seq[CoreBuiltins.this.Point]): scala.collection.Seq[io.github.jdiemke.triangulation.Triangle2D]
true
try
tt
tuple2ToZippedOps(x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1,T2]
tuple3ToZippedOps(x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1,T2,T3]
turn
turnEast(): Unit
turnNorth(): Unit
turnSouth(): Unit
turnWest(): Unit
turtle0: net.kogics.kojo.core.Turtle
type
ul
unchecked: scala
unitArrayOps(xs: Array[Unit]): scala.collection.ArrayOps[Unit]
url(url: String): java.net.URL
urlHandler
util: scala
val
valueOf: T
var
version
vertex(x: Double, y: Double): Unit
vertexRt(r: Double, theta: Double): Unit
viewRotate(a: Double): Unit
viewScale(factor: Double): Unit
viewTranslate(x: Double, y: Double): Unit
visible
volatile: scala
wait(): Unit
wait(x$1: Long): Unit
wait(x$1: Long, x$2: Int): Unit
waitFor(): Unit
weave
weave: (Double, Double, Double, Double) => net.kogics.kojo.picture.Weavec
wh
while
white: java.awt.Color
wipe
with
withFillColor(pic: Builtins.this.Picture, color: Builtins.this.Color): net.kogics.kojo.core.Picture
withPenColor(pic: Builtins.this.Picture, color: Builtins.this.Color): net.kogics.kojo.core.Picture
withRotation(pic: Builtins.this.Picture, angle: Double): net.kogics.kojo.core.Picture
withScaling(pic: Builtins.this.Picture, factor: Double): net.kogics.kojo.core.Picture
withTranslation(pic: Builtins.this.Picture, x: Double, y: Double): net.kogics.kojo.core.Picture
wrapBooleanArray(xs: Array[Boolean]): scala.collection.mutable.ArraySeq.ofBoolean
wrapByteArray(xs: Array[Byte]): scala.collection.mutable.ArraySeq.ofByte
wrapCharArray(xs: Array[Char]): scala.collection.mutable.ArraySeq.ofChar
wrapDoubleArray(xs: Array[Double]): scala.collection.mutable.ArraySeq.ofDouble
wrapFloatArray(xs: Array[Float]): scala.collection.mutable.ArraySeq.ofFloat
wrapIntArray(xs: Array[Int]): scala.collection.mutable.ArraySeq.ofInt
wrapLongArray(xs: Array[Long]): scala.collection.mutable.ArraySeq.ofLong
wrapRefArray(xs: Array[T]): scala.collection.mutable.ArraySeq.ofRef[T]
wrapShortArray(xs: Array[Short]): scala.collection.mutable.ArraySeq.ofShort
wrapString(s: String): scala.collection.immutable.WrappedString
wrapUnitArray(xs: Array[Unit]): scala.collection.mutable.ArraySeq.ofUnit
write
xml: scala
yellow: java.awt.Color
yield
zIndex(idx: Int): net.kogics.kojo.picture.PostDrawTransformc
zoom
zoomXY(xfactor: Double, yfactor: Double, cx: Double, cy: Double): Unit
** Picture. completion!
showAxes(pics: Builtins.this.Picture*): Unit
showBounds(pics: Builtins.this.Picture*): Unit
showLocalBounds(pics: Builtins.this.Picture*): Unit
showGlobalBounds(pics: Builtins.this.Picture*): Unit
vgap(gap: Double): net.kogics.kojo.core.Picture
hgap(gap: Double): net.kogics.kojo.core.Picture
effectablePic(pic: Builtins.this.Picture): net.kogics.kojo.picture.EffectableImagePic
button(label: String)(fn: => Unit): net.kogics.kojo.picture.SwingPic
widget(component: javax.swing.JComponent): net.kogics.kojo.picture.SwingPic
image(url: java.net.URL, envelope: Builtins.this.Picture): net.kogics.kojo.picture.UrlImagePic
point: net.kogics.kojo.core.Picture
arc(radius: Double, angle: Double): net.kogics.kojo.picture.ArcPic
ellipseInRect(width: Double, height: Double): net.kogics.kojo.core.Picture
ellipse(xRadius: Double, yRadius: Double): net.kogics.kojo.picture.EllipsePic
circle(radius: Double): net.kogics.kojo.picture.CirclePic
fromSketch(sketch: AnyRef{def setup(cd: Builtins.this.CanvasDraw): Unit; def drawLoop(cd: Builtins.this.CanvasDraw): Unit}, scaleOutFactor: Double): Wrapper1.builtins.Picture
fromCanvas(width: Double, height: Double)(fn: java.awt.Graphics2D => Unit): net.kogics.kojo.picture.Java2DPic
fromTurtle(fn: Builtins.this.Turtle => Unit): net.kogics.kojo.picture.Pic
fromVertexShape(fn: net.kogics.kojo.core.VertexShape => Unit): net.kogics.kojo.picture.PathPic
fromPath(fn: java.awt.geom.GeneralPath => Unit): net.kogics.kojo.picture.PathPic
line(width: Double, height: Double): net.kogics.kojo.picture.LinePic
hline(length: Double): net.kogics.kojo.picture.LinePic
vline(length: Double): net.kogics.kojo.picture.LinePic
rectangle(width: Double, height: Double): net.kogics.kojo.picture.RectanglePic
rect(h: Double, w: Double): net.kogics.kojo.picture.RectanglePic
textu(content: Any, font: Builtins.this.Font, color: Builtins.this.Color): net.kogics.kojo.picture.TextPic
textu(content: Any, fontSize: Int, color: Builtins.this.Color): net.kogics.kojo.picture.TextPic
text(content: Any, font: Builtins.this.Font): net.kogics.kojo.picture.TextPic
synchronized(x$1: T0): T0
##: Int
!=(x$1: Any): Boolean
==(x$1: Any): Boolean
ne(x$1: AnyRef): Boolean
eq(x$1: AnyRef): Boolean
wait(x$1: Long, x$2: Int): Unit
wait(x$1: Long): Unit
wait(): Unit
notifyAll(): Unit
notify(): Unit
toString: String
equals(x$1: Object): Boolean
hashCode: Int
getClass: Class[_]
asInstanceOf: T0
isInstanceOf: Boolean
+(other: String): String
formatted(fmtstr: String): String
ensuring(cond: A => Boolean, msg: => Any): Wrapper1.builtins.Picture.type
ensuring(cond: A => Boolean): Wrapper1.builtins.Picture.type
ensuring(cond: Boolean, msg: => Any): Wrapper1.builtins.Picture.type
ensuring(cond: Boolean): Wrapper1.builtins.Picture.type
→(y: B): (Wrapper1.builtins.Picture.type, B)
->(y: B): (Wrapper1.builtins.Picture.type, B)

* !! Turkish completions:
AbstractMethodError: scala.package -> yok
AffineTransform: java.awt.geom -> yok
Animation: net.kogics.kojo.lite.Builtins -> yok
Any: scala -> yok
AnyRef: scala -> yok
AnyVal: scala -> yok
AnyValCompanion: scala -> yok
App: scala -> yok
Appendable: java.lang -> yok
Aralık: Aralık.tür -> yok
ArithmeticException: java.lang -> yok
ArrowAssoc(self: A): ArrowAssoc[A] -> yok
ArrowAssoc: scala.Pretanım -> yok
Artalan: GraphicsUtilsInTurkish -> yok
AssertionError: java.lang -> yok
AutoCloseable: java.lang -> yok
BKK: UrlInTurkish -> yok
BKK: UrlInTurkish -> yok
Background: Sarıcı0.builtins.Tw.Background -> yok
Background: Sarıcı0.builtins.Tw.Background -> yok
BaskınYazıyaYöntemiyle: CoreTypeMethodsInTurkish -> yok
BaskınYazıyaYöntemiyle: CoreTypeMethodsInTurkish -> yok
BatchPics: net.kogics.kojo.lite.CoreBuiltins -> yok
BatchPics: net.kogics.kojo.lite.CoreBuiltins -> yok
BelirtimHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
BelirtimHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Belki: OptionMethodsInTurkish -> yok
Belki: OptionMethodsInTurkish -> yok
BelkiYöntemleri(b: OptionMethodsInTurkish.bu.Belki[T]): BelkiYöntemleri[T] -> yok
BelkiYöntemleri(b: OptionMethodsInTurkish.bu.Belki[T]): BelkiYöntemleri[T] -> yok
BelkiYöntemleri: OptionMethodsInTurkish -> yok
BelkiYöntemleri: OptionMethodsInTurkish -> yok
Bellekteİmge: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Bellekteİmge: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Bellekteİmgeİşlemi: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Bellekteİmgeİşlemi: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
BenzerDönüşüm: GeoMethodsInTurkish -> yok
BenzerDönüşüm: GeoMethodsInTurkish -> yok
BigDecimal: scala.package -> yok
BigDecimal: scala.package -> yok
BigDecimalMethods(a: NumMethodsInTurkish.bu.İriKesir): BigDecimalMethods -> yok
BigDecimalMethods(a: NumMethodsInTurkish.bu.İriKesir): BigDecimalMethods -> yok
BigDecimalMethods: NumMethodsInTurkish -> yok
BigDecimalMethods: NumMethodsInTurkish -> yok
BigSayı: scala.package -> yok
BigSayı: scala.package -> yok
BigSayıMethods(a: NumMethodsInTurkish.bu.İriSayı): BigSayıMethods -> yok
BigSayıMethods(a: NumMethodsInTurkish.bu.İriSayı): BigSayıMethods -> yok
BigSayıMethods: NumMethodsInTurkish -> yok
BigSayıMethods: NumMethodsInTurkish -> yok
BirSayfaKostüm: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
BirSayfaKostüm: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Biri: OptionMethodsInTurkish -> yok
Biri: OptionMethodsInTurkish -> yok
Birim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Birim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Birim: scala -> yok
Birim: scala -> yok
BirimDiziğiDizisi: TurCevirileri -> yok
BirimDiziğiDizisi: TurCevirileri -> yok
BirimLen: net.kogics.kojo.core -> yok
BirimLen: net.kogics.kojo.core -> yok
Biçim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Biçim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
BoldFont: Sayı -> yok
BoldFont: Sayı -> yok
BootstrapMethodError: java.lang -> yok
BootstrapMethodError: java.lang -> yok
Boya: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Boya: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Boş: collection.immutable.Nil.tür -> yok
Boş: collection.immutable.Nil.tür -> yok
BoşGöstergeHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
BoşGöstergeHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
BuAn: CalendarAndTimeUtilsInTurkish -> yok
BuAn: CalendarAndTimeUtilsInTurkish -> yok
BufferedImage: java.awt.image -> yok
BufferedImage: java.awt.image -> yok
BufferedImageOp: java.awt.image -> yok
BufferedImageOp: java.awt.image -> yok
BufferedIterator: scala.package -> yok
BufferedIterator: scala.package -> yok
BuildFrom: scala.collection -> yok
BuildFrom: scala.collection -> yok
Button -> yok
Button -> yok
Button -> yok
Button -> yok
Button: net.kogics.kojo.lite.Builtins -> yok
Button: net.kogics.kojo.lite.Builtins -> yok
Byte2byte(x: Byte): Byte -> yok
Byte2byte(x: Byte): Byte -> yok
Byte: scala -> yok
Byte: scala -> yok
ByteMethods(a: NumMethodsInTurkish.bu.Lokma): ByteMethods -> yok
ByteMethods(a: NumMethodsInTurkish.bu.Lokma): ByteMethods -> yok
ByteMethods: NumMethodsInTurkish -> yok
ByteMethods: NumMethodsInTurkish -> yok
Bölümselİşlev: PartialFunctionMethodsInTurkish -> yok
Bölümselİşlev: PartialFunctionMethodsInTurkish -> yok
C: net.kogics.kojo.staging.KColor.tür -> yok
C: net.kogics.kojo.staging.KColor.tür -> yok
Calendar: java.util -> yok
Calendar: java.util -> yok
Canlandırma: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Canlandırma: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
CanvasDraw: net.kogics.kojo.lite.Builtins -> yok
CanvasDraw: net.kogics.kojo.lite.Builtins -> yok
CapJoin: net.kogics.kojo.staging.CapJoin -> yok
CapJoin: net.kogics.kojo.staging.CapJoin -> yok
Class: scala.Pretanım -> yok
Class: scala.Pretanım -> yok
ClassCastException: scala.package -> yok
ClassCastException: scala.package -> yok
ClassCircularityError: java.lang -> yok
ClassCircularityError: java.lang -> yok
ClassFormatError: java.lang -> yok
ClassFormatError: java.lang -> yok
ClassLoader: java.lang -> yok
ClassLoader: java.lang -> yok
ClassNotFoundException: java.lang -> yok
ClassNotFoundException: java.lang -> yok
ClassValue: java.lang -> yok
ClassValue: java.lang -> yok
ClipShape: net.kogics.kojo.lite.Builtins -> yok
ClipShape: net.kogics.kojo.lite.Builtins -> yok
CloneNotSupportedException: java.lang -> yok
CloneNotSupportedException: java.lang -> yok
Cloneable: scala.package -> yok
Cloneable: scala.package -> yok
Cm: net.kogics.kojo.core.Cm.tür -> yok
Cm: net.kogics.kojo.core.Cm.tür -> yok
CmdQ: net.kogics.kojo.lite.Builtins -> yok
CmdQ: net.kogics.kojo.lite.Builtins -> yok
ColPanel -> yok
ColPanel -> yok
ColPanel -> yok
ColPanel -> yok
ColPanel: net.kogics.kojo.lite.Builtins -> yok
ColPanel: net.kogics.kojo.lite.Builtins -> yok
CollisionDetector: net.kogics.kojo.fpgaenUfakg.CollisionDetector -> yok
CollisionDetector: net.kogics.kojo.fpgaenUfakg.CollisionDetector -> yok
Color -> yok
Color -> yok
ColorG -> yok
ColorG -> yok
ColorHSB -> yok
ColorHSB -> yok
ColorLinearG -> yok
ColorLinearG -> yok
ColorMaker: net.kogics.kojo.doodle.Color.tür -> yok
ColorMaker: net.kogics.kojo.doodle.Color.tür -> yok
ColorRadialG -> yok
ColorRadialG -> yok
ColorYöntemleri(r: ColorMethodsInTurkish.bu.Renk): ColorYöntemleri -> yok
ColorYöntemleri(r: ColorMethodsInTurkish.bu.Renk): ColorYöntemleri -> yok
ColorYöntemleri2(r: net.kogics.kojo.doodle.Color): ColorYöntemleri2 -> yok
ColorYöntemleri2(r: net.kogics.kojo.doodle.Color): ColorYöntemleri2 -> yok
ColorYöntemleri2: ColorMethodsInTurkish -> yok
ColorYöntemleri2: ColorMethodsInTurkish -> yok
ColorYöntemleri: ColorMethodsInTurkish -> yok
ColorYöntemleri: ColorMethodsInTurkish -> yok
Comparable: java.lang -> yok
Comparable: java.lang -> yok
Compiler: java.lang -> yok
Compiler: java.lang -> yok
Console: scala -> yok
Console: scala -> yok
Costume: Sarıcı0.builtins.Tw.Costume -> yok
Costume: Sarıcı0.builtins.Tw.Costume -> yok
DRenk: ColorMethodsInTurkish -> yok
DRenk: ColorMethodsInTurkish -> yok
Data: <empty> -> yok
Data: <empty> -> yok
Date: java.util -> yok
Date: java.util -> yok
Def: <empty> -> yok
Def: <empty> -> yok
DelayedInit: scala -> yok
DelayedInit: scala -> yok
Deprecated: java.lang -> yok
Deprecated: java.lang -> yok
Dikdörtgen: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Dikdörtgen: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Diz: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Diz: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Dizi: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Dizi: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Dizi: scala.package -> yok
Dizi: scala.package -> yok
DiziYöntemleri(d: Dizi[T]): DiziYöntemleri[T] -> yok
DiziYöntemleri(d: Dizi[T]): DiziYöntemleri[T] -> yok
DiziYöntemleri: DiziMethodsInTurkish -> yok
DiziYöntemleri: DiziMethodsInTurkish -> yok
Dizik: DizikMethodsInTurkish -> yok
Dizik: DizikMethodsInTurkish -> yok
Dizik: scala -> yok
DizikDizi: scala.collection.mutable -> yok
DizikDizisi: TurCevirileri -> yok
DizikDizisi: TurCevirileri -> yok
DizikIndexOutOfBoundsException: scala.package -> yok
DizikMethods(d: DizikMethodsInTurkish.bu.Dizik[T]): DizikMethods[T] -> yok
DizikMethods: DizikMethodsInTurkish -> yok
DizikOps: scala.collection -> yok
DizikStoreException: java.lang -> yok
Dizikİşlemleri: TurCevirileri -> yok
Dizikİşlemleri: TurCevirileri -> yok
Dizim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Dizim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Dizin: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Dizin: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Dizin: scala.package -> yok
Dizin: scala.package -> yok
DizinYöntemleri(d: Dizin[T]): DizinYöntemleri[T] -> yok
DizinYöntemleri(d: Dizin[T]): DizinYöntemleri[T] -> yok
DizinYöntemleri: DizinMethodsInTurkish -> yok
DizinYöntemleri: DizinMethodsInTurkish -> yok
DokumaBoya(dosya: Yazı, x: Kesir, y: Kesir): java.awt.TexturePaint -> yok
DokumaBoya(dosya: Yazı, x: Kesir, y: Kesir): java.awt.TexturePaint -> yok
DropDown -> yok
DropDown -> yok
DropDown -> yok
DropDown -> yok
DropDown: net.kogics.kojo.lite.Builtins -> yok
DropDown: net.kogics.kojo.lite.Builtins -> yok
DummyImplicit: scala -> yok
DummyImplicit: scala -> yok
Dynamic: scala -> yok
Dynamic: scala -> yok
Either: scala.package -> yok
Either: scala.package -> yok
EksikTanımHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
EksikTanımHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Ensuring(self: A): Ensuring[A] -> yok
Ensuring(self: A): Ensuring[A] -> yok
Ensuring: scala.Pretanım -> yok
Ensuring: scala.Pretanım -> yok
Enum: java.lang -> yok
Enum: java.lang -> yok
EnumConstantNotPresentException: java.lang -> yok
EnumConstantNotPresentException: java.lang -> yok
Enumeration: scala -> yok
Enumeration: scala -> yok
Equals: scala -> yok
Equals: scala -> yok
Equiv: scala.package -> yok
Equiv: scala.package -> yok
Error: scala.package -> yok
Error: scala.package -> yok
EsnekDizim: net.kogics.kojo.lite.CoreBuiltins -> yok
EsnekDizim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
EsnekDizim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
EsnekYazı: YazıMethodsInTurkish -> yok
EsnekYazı: YazıMethodsInTurkish -> yok
EsnekYazıYöntemleri(ey: YazıMethodsInTurkish.bu.EsnekYazı): EsnekYazıYöntemleri -> yok
EsnekYazıYöntemleri(ey: YazıMethodsInTurkish.bu.EsnekYazı): EsnekYazıYöntemleri -> yok
EsnekYazıYöntemleri: YazıMethodsInTurkish -> yok
EsnekYazıYöntemleri: YazıMethodsInTurkish -> yok
Exception: scala.package -> yok
Exception: scala.package -> yok
ExceptionInInitializerError: java.lang -> yok
ExceptionInInitializerError: java.lang -> yok
ExecutionContext: scala.concurrent -> yok
ExecutionContext: scala.concurrent -> yok
Eşlek: EşlekMethodsInTurkish -> yok
Eşlek: EşlekMethodsInTurkish -> yok
Eşlek: scala.Pretanım -> yok
Eşlek: scala.Pretanım -> yok
EşlekYöntemleri(m: EşlekMethodsInTurkish.bu.Eşlek[A,D]): EşlekYöntemleri[A,D] -> yok
EşlekYöntemleri(m: EşlekMethodsInTurkish.bu.Eşlek[A,D]): EşlekYöntemleri[A,D] -> yok
EşlekYöntemleri: EşlekMethodsInTurkish -> yok
EşlekYöntemleri: EşlekMethodsInTurkish -> yok
Eşlem: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Eşlem: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Eşsizlik: CoreTypeMethodsInTurkish -> yok
Eşsizlik: CoreTypeMethodsInTurkish -> yok
Float2float(x: Float): Float -> yok
Float2float(x: Float): Float -> yok
Float: scala -> yok
Float: scala -> yok
Font -> yok
Font -> yok
Fractional: scala.package -> yok
Fractional: scala.package -> yok
Function0: scala -> yok
Function0: scala -> yok
Function10: scala -> yok
Function10: scala -> yok
Function11: scala -> yok
Function11: scala -> yok
Function12: scala -> yok
Function12: scala -> yok
Function13: scala -> yok
Function13: scala -> yok
Function14: scala -> yok
Function14: scala -> yok
Function15: scala -> yok
Function15: scala -> yok
Function16: scala -> yok
Function16: scala -> yok
Function17: scala -> yok
Function17: scala -> yok
Function18: scala -> yok
Function18: scala -> yok
Function19: scala -> yok
Function19: scala -> yok
Function1: scala -> yok
Function1: scala -> yok
Function20: scala -> yok
Function20: scala -> yok
Function21: scala -> yok
Function21: scala -> yok
Function22: scala -> yok
Function22: scala -> yok
Function2: scala -> yok
Function2: scala -> yok
Function3: scala -> yok
Function3: scala -> yok
Function4: scala -> yok
Function4: scala -> yok
Function5: scala -> yok
Function5: scala -> yok
Function6: scala -> yok
Function6: scala -> yok
Function7: scala -> yok
Function7: scala -> yok
Function8: scala -> yok
Function8: scala -> yok
Function9: scala -> yok
Function9: scala -> yok
Function: scala.Pretanım -> yok
Function: scala.Pretanım -> yok
FunctionalSayıerface: java.lang -> yok
FunctionalSayıerface: java.lang -> yok
Future: java.util.concurrent -> yok
Future: java.util.concurrent -> yok
FutureMethods(g: FutureMethodsInTurkish.bu.Gelecek[T]): FutureMethods[T] -> yok
FutureMethods(g: FutureMethodsInTurkish.bu.Gelecek[T]): FutureMethods[T] -> yok
FutureMethods: FutureMethodsInTurkish -> yok
FutureMethods: FutureMethodsInTurkish -> yok
GPics -> yok
GPics -> yok
GPics2: net.kogics.kojo.lite.CoreBuiltins -> yok
GPics2: net.kogics.kojo.lite.CoreBuiltins -> yok
Gelecek: FutureMethodsInTurkish -> yok
Gelecek: FutureMethodsInTurkish -> yok
GeneralPath: java.awt.geom -> yok
GeneralPath: java.awt.geom -> yok
GeoNokta: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
GeoNokta: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
GeoNoktaYöntemleri(gn: GeoNokta): GeoNoktaYöntemleri -> yok
GeoNoktaYöntemleri(gn: GeoNokta): GeoNoktaYöntemleri -> yok
GeoNoktaYöntemleri: GeoMethodsInTurkish -> yok
GeoNoktaYöntemleri: GeoMethodsInTurkish -> yok
GeoYol: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
GeoYol: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
GeoYolYöntemleri(yol: GeoYol): GeoYolYöntemleri -> yok
GeoYolYöntemleri(yol: GeoYol): GeoYolYöntemleri -> yok
GeoYolYöntemleri: GeoMethodsInTurkish -> yok
GeoYolYöntemleri: GeoMethodsInTurkish -> yok
Geometri: GeoMethodsInTurkish -> yok
Geometri: GeoMethodsInTurkish -> yok
Geometry: com.vividsolutions.jts.geom -> yok
Geometry: com.vividsolutions.jts.geom -> yok
Geçiş(süreSaniyeOlarak: Kesir, ilkEvre: Dizi[Kesir], sonEvre: Dizi[Kesir], kolaylaştırma: Resim.YumuşakGeçiş, resimci: Dizi[Kesir] => Resim, bitinceGizle: İkil): Canlandırma -> yok
Geçiş(süreSaniyeOlarak: Kesir, ilkEvre: Dizi[Kesir], sonEvre: Dizi[Kesir], kolaylaştırma: Resim.YumuşakGeçiş, resimci: Dizi[Kesir] => Resim, bitinceGizle: İkil): Canlandırma -> yok
Grafik2B: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Grafik2B: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Graphics2D: java.awt -> yok
Graphics2D: java.awt -> yok
GöndergeDiziğiDizisi: TurCevirileri -> yok
GöndergeDiziğiDizisi: TurCevirileri -> yok
Görünüş: GraphicsUtilsInTurkish -> yok
Görünüş: GraphicsUtilsInTurkish -> yok
HPics -> yok
HPics -> yok
HPics2: net.kogics.kojo.lite.CoreBuiltins -> yok
HPics2: net.kogics.kojo.lite.CoreBuiltins -> yok
Harf: HarfMethodsInTurkish -> yok
Harf: HarfMethodsInTurkish -> yok
Harf: scala -> yok
Harf: scala -> yok
HarfDizisindenDizi(harfDizisi: TurCevirileri.bu.SıralıDizi[TurCevirileri.bu.Harf]): HarfDizisindenDizi -> yok
HarfDizisindenDizi(harfDizisi: TurCevirileri.bu.SıralıDizi[TurCevirileri.bu.Harf]): HarfDizisindenDizi -> yok
HarfDizisindenDizi(sequenceOfHarfs: scala.collection.SıralıDizi[Harf]): HarfDizisindenDizi -> yok
HarfDizisindenDizi(sequenceOfHarfs: scala.collection.SıralıDizi[Harf]): HarfDizisindenDizi -> yok
HarfDizisindenDizi: TurCevirileri -> yok
HarfDizisindenDizi: TurCevirileri -> yok
HarfDizisindenDizi: scala.Pretanım -> yok
HarfDizisindenDizi: scala.Pretanım -> yok
HarfDizisindenDizik(arrayOfHarfs: Dizik[Harf]): HarfDizisindenDizik -> yok
HarfDizisindenDizik(harfDiziği: TurCevirileri.bu.Dizik[TurCevirileri.bu.Harf]): HarfDizisindenDizik -> yok
HarfDizisindenDizik(harfDiziği: TurCevirileri.bu.Dizik[TurCevirileri.bu.Harf]): HarfDizisindenDizik -> yok
HarfDizisindenDizik: TurCevirileri -> yok
HarfDizisindenDizik: TurCevirileri -> yok
HarfDizisindenDizik: scala.Pretanım -> yok
HarfDiziuence: java.lang -> yok
HarfDiziuence: java.lang -> yok
HarfDiziğiDizisi: TurCevirileri -> yok
HarfDiziğiDizisi: TurCevirileri -> yok
HarfYöntemleri(h: HarfMethodsInTurkish.bu.Harf): HarfYöntemleri -> yok
HarfYöntemleri(h: HarfMethodsInTurkish.bu.Harf): HarfYöntemleri -> yok
HarfYöntemleri: HarfMethodsInTurkish -> yok
HarfYöntemleri: HarfMethodsInTurkish -> yok
Harfacter2char(x: Harfacter): Harf -> yok
Harfacter2char(x: Harfacter): Harf -> yok
Harfacter: java.lang -> yok
Harfacter: java.lang -> yok
HashEşlek: net.kogics.kojo.lite.CoreBuiltins -> yok
HashEşlek: net.kogics.kojo.lite.CoreBuiltins -> yok
HashSet: net.kogics.kojo.lite.CoreBuiltins -> yok
HashSet: net.kogics.kojo.lite.CoreBuiltins -> yok
Her: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Her: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
HerDeğer: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
HerDeğer: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
HerGönder: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
HerGönder: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
HerGönderYöntemleri(h: HerGönder): HerGönderYöntemleri -> yok
HerGönderYöntemleri(h: HerGönder): HerGönderYöntemleri -> yok
HerGönderYöntemleri: CoreTypeMethodsInTurkish -> yok
HerGönderYöntemleri: CoreTypeMethodsInTurkish -> yok
HerNesneYöntemleri(h: Her): HerNesneYöntemleri -> yok
HerNesneYöntemleri(h: Her): HerNesneYöntemleri -> yok
HerNesneYöntemleri: CoreTypeMethodsInTurkish -> yok
HerNesneYöntemleri: CoreTypeMethodsInTurkish -> yok
Hiç: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Hiç: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Hiç: scala -> yok
Hiç: scala -> yok
Hiçbiri: None.tür -> yok
Hiçbiri: None.tür -> yok
Hız: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Hız: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
JComponent: javax.swing -> yok
JComponent: javax.swing -> yok
JGelecek: FutureMethodsInTurkish -> yok
JGelecek: FutureMethodsInTurkish -> yok
JHarf: TurCevirileri -> yok
JHarf: TurCevirileri -> yok
JKW: <empty> -> yok
JKW: <empty> -> yok
JKesir: TurCevirileri -> yok
JKesir: TurCevirileri -> yok
JKısa: TurCevirileri -> yok
JKısa: TurCevirileri -> yok
JLokma: TurCevirileri -> yok
JLokma: TurCevirileri -> yok
JSayı: TurCevirileri -> yok
JSayı: TurCevirileri -> yok
JUfakKesir: TurCevirileri -> yok
JUfakKesir: TurCevirileri -> yok
JUzun: TurCevirileri -> yok
JUzun: TurCevirileri -> yok
Jİkil: TurCevirileri -> yok
Jİkil: TurCevirileri -> yok
KW: <empty> -> yok
KW: <empty> -> yok
Kaplumbağa0: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Kaplumbağa0: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Kaplumbağa: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Kaplumbağa: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Kc: net.kogics.kojo.staging.KeyCodes -> yok
Kc: net.kogics.kojo.staging.KeyCodes -> yok
Kesir2double(x: Kesir): Kesir -> yok
Kesir2double(x: Kesir): Kesir -> yok
Kesir: NumMethodsInTurkish -> yok
Kesir: NumMethodsInTurkish -> yok
Kesir: java.awt.geom.Nokta2D -> yok
Kesir: java.awt.geom.Nokta2D -> yok
KesirDiziğiDizisi: TurCevirileri -> yok
KesirDiziğiDizisi: TurCevirileri -> yok
KesirRead: net.kogics.kojo.util.Read.KesirRead.tür -> yok
KesirRead: net.kogics.kojo.util.Read.KesirRead.tür -> yok
KesirYöntemleri(a: NumMethodsInTurkish.bu.Kesir): KesirYöntemleri -> yok
KesirYöntemleri(a: NumMethodsInTurkish.bu.Kesir): KesirYöntemleri -> yok
KesirYöntemleri: NumMethodsInTurkish -> yok
KesirYöntemleri: NumMethodsInTurkish -> yok
KeyFrames(frames: (Kesir, Dizi[Kesir])*): net.kogics.kojo.animation.KeyFrames -> yok
KeyFrames(frames: (Kesir, Dizi[Kesir])*): net.kogics.kojo.animation.KeyFrames -> yok
Kojo-z: <root> -> yok
Kojo-z: <root> -> yok
KullanıcınınYazılımı: Sarıcı0 -> yok
KullanıcınınYazılımı: Sarıcı0 -> yok
KuralDışı: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
KuralDışı: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
KuraldışıGirdiHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
KuraldışıGirdiHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Kuyruk: QueueMethodsInTurkish -> yok
Kuyruk: QueueMethodsInTurkish -> yok
Küme: SetMethodsInTurkish -> yok
Küme: SetMethodsInTurkish -> yok
Kısa: NumMethodsInTurkish -> yok
Kısa: NumMethodsInTurkish -> yok
KısaDiziğiDizisi: TurCevirileri -> yok
KısaDiziğiDizisi: TurCevirileri -> yok
Label -> yok
Label -> yok
Label -> yok
Label -> yok
Label: net.kogics.kojo.lite.Builtins -> yok
Label: net.kogics.kojo.lite.Builtins -> yok
LayerInstantiationException: java.lang -> yok
LayerInstantiationException: java.lang -> yok
LazyDizin: scala.package -> yok
LazyDizin: scala.package -> yok
LazyDizinYöntemleri(d: LazyDizinMethodsInTurkish.bu.MiskinDizin[T]): LazyDizinYöntemleri[T] -> yok
LazyDizinYöntemleri(d: LazyDizinMethodsInTurkish.bu.MiskinDizin[T]): LazyDizinYöntemleri[T] -> yok
LazyDizinYöntemleri: LazyDizinMethodsInTurkish -> yok
LazyDizinYöntemleri: LazyDizinMethodsInTurkish -> yok
Left: scala.package -> yok
Left: scala.package -> yok
LinkageError: java.lang -> yok
LinkageError: java.lang -> yok
Lokma: NumMethodsInTurkish -> yok
Lokma: NumMethodsInTurkish -> yok
LokmaDiziğiDizisi: TurCevirileri -> yok
LokmaDiziğiDizisi: TurCevirileri -> yok
Long2long(x: Long): Long -> yok
Long2long(x: Long): Long -> yok
Long: scala -> yok
Long: scala -> yok
LowPriorityImplicits2: scala -> yok
LowPriorityImplicits2: scala -> yok
LowPriorityImplicits: scala -> yok
LowPriorityImplicits: scala -> yok
MDizi: net.kogics.kojo.lite.CoreBuiltins -> yok
MDizi: net.kogics.kojo.lite.CoreBuiltins -> yok
MEşlek: net.kogics.kojo.lite.CoreBuiltins -> yok
MEşlek: net.kogics.kojo.lite.CoreBuiltins -> yok
MSet: net.kogics.kojo.lite.CoreBuiltins -> yok
MSet: net.kogics.kojo.lite.CoreBuiltins -> yok
Manifest: scala.Pretanım -> yok
Manifest: scala.Pretanım -> yok
MatchError: scala -> yok
MatchError: scala -> yok
Matchers: org.scalatest -> yok
Matchers: org.scalatest -> yok
MatematikselHata: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
MatematikselHata: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Math: java.lang -> yok
Math: java.lang -> yok
Melody: net.kogics.kojo.lite.Builtins -> yok
Melody: net.kogics.kojo.lite.Builtins -> yok
Method: <empty> -> yok
Method: <empty> -> yok
MiskinDizin: LazyDizinMethodsInTurkish -> yok
MiskinDizin: LazyDizinMethodsInTurkish -> yok
Module: java.lang -> yok
Module: java.lang -> yok
ModuleLayer: java.lang -> yok
ModuleLayer: java.lang -> yok
MouseButton: net.kogics.kojo.staging.MouseButtons -> yok
MouseButton: net.kogics.kojo.staging.MouseButtons -> yok
Mp3DöngüsünüDurdur: Birim -> yok
Mp3DöngüsünüDurdur: Birim -> yok
Mp3ÇalıyorMu: İkil -> yok
Mp3ÇalıyorMu: İkil -> yok
Mp3üDurdur: Birim -> yok
Mp3üDurdur: Birim -> yok
MusicScore: net.kogics.kojo.core.Score.tür -> yok
MusicScore: net.kogics.kojo.core.Score.tür -> yok
Name: <empty> -> yok
Name: <empty> -> yok
Ne: <empty> -> yok
Ne: <empty> -> yok
NegativeDizikSizeException: java.lang -> yok
NegativeDizikSizeException: java.lang -> yok
Nesne: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Nesne: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
NesneYöntemleri(h: Nesne): NesneYöntemleri -> yok
NesneYöntemleri(h: Nesne): NesneYöntemleri -> yok
NesneYöntemleri: CoreTypeMethodsInTurkish -> yok
NesneYöntemleri: CoreTypeMethodsInTurkish -> yok
Nil: collection.immutable.Nil.tür -> yok
Nil: collection.immutable.Nil.tür -> yok
NoClassDefFoundError: java.lang -> yok
NoClassDefFoundError: java.lang -> yok
NoManifest: reflect.NoManifest.tür -> yok
NoManifest: reflect.NoManifest.tür -> yok
NoSuchElementException: scala.package -> yok
NoSuchElementException: scala.package -> yok
NoSuchFieldError: java.lang -> yok
NoSuchFieldError: java.lang -> yok
NoSuchFieldException: java.lang -> yok
NoSuchFieldException: java.lang -> yok
NoSuchMethodError: java.lang -> yok
NoSuchMethodError: java.lang -> yok
NoSuchMethodException: java.lang -> yok
NoSuchMethodException: java.lang -> yok
Nokta -> yok
Nokta -> yok
Nokta -> yok
Nokta -> yok
Nokta2D -> yok
Nokta2D -> yok
Nokta2D -> yok
Nokta2D -> yok
Nokta2D(x: Kesir, y: Kesir): java.awt.geom.Nokta2D.Kesir -> yok
Nokta2D(x: Kesir, y: Kesir): java.awt.geom.Nokta2D.Kesir -> yok
Nokta2D: net.kogics.kojo.lite.CoreBuiltins -> yok
Nokta2D: net.kogics.kojo.lite.CoreBuiltins -> yok
Nokta: Nokta.tür -> yok
Nokta: Nokta.tür -> yok
Nokta: net.kogics.kojo.lite.CoreBuiltins -> yok
Nokta: net.kogics.kojo.lite.CoreBuiltins -> yok
NoktaIşık(x: Kesir, y: Kesir, yön: Kesir, yükseklik: Kesir, uzaklık: Kesir): com.jhlabs.image.LightFilter#NoktaLight -> yok
NoktaIşık(x: Kesir, y: Kesir, yön: Kesir, yükseklik: Kesir, uzaklık: Kesir): com.jhlabs.image.LightFilter#NoktaLight -> yok
NoktaLight -> yok
NoktaLight -> yok
NoktaLight: (Kesir, Kesir, Kesir, Kesir, Kesir) => com.jhlabs.image.LightFilter#NoktaLight -> yok
NoktaLight: (Kesir, Kesir, Kesir, Kesir, Kesir) => com.jhlabs.image.LightFilter#NoktaLight -> yok
None: scala -> yok
None: scala -> yok
NotImplementedError: scala -> yok
NotImplementedError: scala -> yok
Number: java.lang -> yok
Number: java.lang -> yok
NumberFormatException: scala.package -> yok
NumberFormatException: scala.package -> yok
Numeric: scala.package -> yok
Numeric: scala.package -> yok
Object: java.lang -> yok
Object: java.lang -> yok
OptManifest: scala.Pretanım -> yok
OptManifest: scala.Pretanım -> yok
Option: scala -> yok
Option: scala -> yok
Ordered: scala.package -> yok
Ordered: scala.package -> yok
Ordering: scala.package -> yok
Ordering: scala.package -> yok
OutOfMemoryError: java.lang -> yok
OutOfMemoryError: java.lang -> yok
Override: java.lang -> yok
Override: java.lang -> yok
PActivity: edu.umd.cs.piccolo.activities -> yok
PActivity: edu.umd.cs.piccolo.activities -> yok
PBounds: edu.umd.cs.piccolo.util -> yok
PBounds: edu.umd.cs.piccolo.util -> yok
PEtkinlik: FutureMethodsInTurkish -> yok
PEtkinlik: FutureMethodsInTurkish -> yok
PShapes: Sarıcı0.builtins.Picture.tür -> yok
PShapes: Sarıcı0.builtins.Picture.tür -> yok
PSınırlar: GeoMethodsInTurkish -> yok
PSınırlar: GeoMethodsInTurkish -> yok
Package: java.lang -> yok
Package: java.lang -> yok
Page: net.kogics.kojo.lite.Builtins -> yok
Page: net.kogics.kojo.lite.Builtins -> yok
Paint: java.awt -> yok
Paint: java.awt -> yok
Painter: net.kogics.kojo.lite.Builtins -> yok
Painter: net.kogics.kojo.lite.Builtins -> yok
Para: net.kogics.kojo.lite.Builtins -> yok
Para: net.kogics.kojo.lite.Builtins -> yok
PartialFunction: scala -> yok
PartialFunction: scala -> yok
PartialFunctionMethodsInTurkish(f: PartialFunction[D,R]): PartialFunctionMethodsInTurkish[D,R] -> yok
PartialFunctionMethodsInTurkish(f: PartialFunction[D,R]): PartialFunctionMethodsInTurkish[D,R] -> yok
PartialFunctionMethodsInTurkish: PartialFunctionMethodsInTurkish -> yok
PartialFunctionMethodsInTurkish: PartialFunctionMethodsInTurkish -> yok
PartialOrdering: scala.package -> yok
PartialOrdering: scala.package -> yok
PartiallyOrdered: scala.package -> yok
PartiallyOrdered: scala.package -> yok
Pic0: net.kogics.kojo.lite.Builtins -> yok
Pic0: net.kogics.kojo.lite.Builtins -> yok
Pic: net.kogics.kojo.lite.Builtins -> yok
Pic: net.kogics.kojo.lite.Builtins -> yok
PicScreen: net.kogics.kojo.lite.CoreBuiltins -> yok
PicScreen: net.kogics.kojo.lite.CoreBuiltins -> yok
PicShape: Sarıcı0.builtins.Picture.tür -> yok
PicShape: Sarıcı0.builtins.Picture.tür -> yok
Picture -> yok
Picture -> yok
PictureDraw: net.kogics.kojo.lite.Builtins -> yok
PictureDraw: net.kogics.kojo.lite.Builtins -> yok
PictureMaker: net.kogics.kojo.lite.Builtins -> yok
PictureMaker: net.kogics.kojo.lite.Builtins -> yok
PictureT -> yok
PictureT -> yok
Pixel: net.kogics.kojo.core.Pixel.tür -> yok
Pixel: net.kogics.kojo.core.Pixel.tür -> yok
PlainFont: Sayı -> yok
PlainFont: Sayı -> yok
PolyLine -> yok
PolyLine -> yok
PolyLine -> yok
PolyLine -> yok
PolyLine: net.kogics.kojo.lite.CoreBuiltins -> yok
PolyLine: net.kogics.kojo.lite.CoreBuiltins -> yok
Predef: scala -> yok
Predef: scala -> yok
PriorityQueue: scala.collection.mutable -> yok
PriorityQueue: scala.collection.mutable -> yok
Process: java.lang -> yok
Process: java.lang -> yok
ProcessBuilder: java.lang -> yok
ProcessBuilder: java.lang -> yok
ProcessHandle: java.lang -> yok
ProcessHandle: java.lang -> yok
Product10: scala -> yok
Product10: scala -> yok
Product11: scala -> yok
Product11: scala -> yok
Product12: scala -> yok
Product12: scala -> yok
Product13: scala -> yok
Product13: scala -> yok
Product14: scala -> yok
Product14: scala -> yok
Product15: scala -> yok
Product15: scala -> yok
Product16: scala -> yok
Product16: scala -> yok
Product17: scala -> yok
Product17: scala -> yok
Product18: scala -> yok
Product18: scala -> yok
Product19: scala -> yok
Product19: scala -> yok
Product1: scala -> yok
Product1: scala -> yok
Product20: scala -> yok
Product20: scala -> yok
Product21: scala -> yok
Product21: scala -> yok
Product22: scala -> yok
Product22: scala -> yok
Product2: scala -> yok
Product2: scala -> yok
Product3: scala -> yok
Product3: scala -> yok
Product4: scala -> yok
Product4: scala -> yok
Product5: scala -> yok
Product5: scala -> yok
Product6: scala -> yok
Product6: scala -> yok
Product7: scala -> yok
Product7: scala -> yok
Product8: scala -> yok
Product8: scala -> yok
Product9: scala -> yok
Product9: scala -> yok
Product: scala -> yok
Product: scala -> yok
Proxy: scala -> yok
Proxy: scala -> yok
Queue: scala.collection.mutable -> yok
Queue: scala.collection.mutable -> yok
Random: java.util.Random -> yok
Random: java.util.Random -> yok
Range: scala.package -> yok
Range: scala.package -> yok
RangeYöntemleri(r: Range): RangeYöntemleri -> yok
RangeYöntemleri(r: Range): RangeYöntemleri -> yok
RangeYöntemleri: RangeMethodsInTurkish -> yok
RangeYöntemleri: RangeMethodsInTurkish -> yok
Rational(rep: org.apache.commons.math3.fraction.BigFraction): Sarıcı0.builtins.Rational -> yok
Rational(rep: org.apache.commons.math3.fraction.BigFraction): Sarıcı0.builtins.Rational -> yok
Rational: net.kogics.kojo.kmath.Rationals -> yok
Rational: net.kogics.kojo.kmath.Rationals -> yok
RationalMaker(sc: YazıContext): Sarıcı0.builtins.RationalMaker -> yok
RationalMaker(sc: YazıContext): Sarıcı0.builtins.RationalMaker -> yok
RationalMaker: net.kogics.kojo.kmath.Rationals -> yok
RationalMaker: net.kogics.kojo.kmath.Rationals -> yok
Readable: java.lang -> yok
Readable: java.lang -> yok
RectYöntemleri(d: Dikdörtgen): RectYöntemleri -> yok
RectYöntemleri(d: Dikdörtgen): RectYöntemleri -> yok
RectYöntemleri: GeoMethodsInTurkish -> yok
RectYöntemleri: GeoMethodsInTurkish -> yok
Rectangle: net.kogics.kojo.core -> yok
Rectangle: net.kogics.kojo.core -> yok
ReflectiveOperationException: java.lang -> yok
ReflectiveOperationException: java.lang -> yok
Renk: ColorMethodsInTurkish -> yok
Renk: ColorMethodsInTurkish -> yok
Resim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Resim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Rhythm: net.kogics.kojo.lite.Builtins -> yok
Rhythm: net.kogics.kojo.lite.Builtins -> yok
RichByte: scala.runtime -> yok
RichByte: scala.runtime -> yok
RichFloat: scala.runtime -> yok
RichFloat: scala.runtime -> yok
RichHarf: scala.runtime -> yok
RichHarf: scala.runtime -> yok
RichKesir: scala.runtime -> yok
RichKesir: scala.runtime -> yok
RichLong: scala.runtime -> yok
RichLong: scala.runtime -> yok
RichSayı: scala.runtime -> yok
RichSayı: scala.runtime -> yok
RichShort: scala.runtime -> yok
RichShort: scala.runtime -> yok
Richİkil: scala.runtime -> yok
Richİkil: scala.runtime -> yok
Right: scala.package -> yok
Right: scala.package -> yok
RowPanel -> yok
RowPanel -> yok
RowPanel -> yok
RowPanel -> yok
RowPanel: net.kogics.kojo.lite.Builtins -> yok
RowPanel: net.kogics.kojo.lite.Builtins -> yok
Runnable: java.lang -> yok
Runnable: java.lang -> yok
Runtime: java.lang -> yok
Runtime: java.lang -> yok
RuntimeException: scala.package -> yok
RuntimeException: scala.package -> yok
RuntimePermission: java.lang -> yok
RuntimePermission: java.lang -> yok
SaatDilimi: CalendarAndTimeUtilsInTurkish -> yok
SaatDilimi: CalendarAndTimeUtilsInTurkish -> yok
SafeVarargs: java.lang -> yok
SafeVarargs: java.lang -> yok
SahneIşığı(x: Kesir, y: Kesir, yön: Kesir, yükseklik: Kesir, uzaklık: Kesir): com.jhlabs.image.LightFilter#SpotLight -> yok
SahneIşığı(x: Kesir, y: Kesir, yön: Kesir, yükseklik: Kesir, uzaklık: Kesir): com.jhlabs.image.LightFilter#SpotLight -> yok
Sarıcı0: <empty> -> yok
Sarıcı0: <empty> -> yok
Sayı: NumMethodsInTurkish -> yok
Sayı: NumMethodsInTurkish -> yok
SayıDiziğiDizisi: TurCevirileri -> yok
SayıDiziğiDizisi: TurCevirileri -> yok
SayıYöntemleri(a: NumMethodsInTurkish.bu.Sayı): SayıYöntemleri -> yok
SayıYöntemleri(a: NumMethodsInTurkish.bu.Sayı): SayıYöntemleri -> yok
SayıYöntemleri: NumMethodsInTurkish -> yok
SayıYöntemleri: NumMethodsInTurkish -> yok
Sayılar: NumMethodsInTurkish -> yok
Sayılar: NumMethodsInTurkish -> yok
ScalaReflectionException: scala -> yok
ScalaReflectionException: scala -> yok
SecurityException: java.lang -> yok
SecurityException: java.lang -> yok
SecurityManager: java.lang -> yok
SecurityManager: java.lang -> yok
SerialVersionUID: scala -> yok
SerialVersionUID: scala -> yok
Serializable: scala.package -> yok
Serializable: scala.package -> yok
Ses: SoundUtilsInTurkish -> yok
Ses: SoundUtilsInTurkish -> yok
Set: scala.Pretanım -> yok
Set: scala.Pretanım -> yok
SetYöntemleri(d: SetMethodsInTurkish.bu.Küme[T]): SetYöntemleri[T] -> yok
SetYöntemleri(d: SetMethodsInTurkish.bu.Küme[T]): SetYöntemleri[T] -> yok
SetYöntemleri: SetMethodsInTurkish -> yok
SetYöntemleri: SetMethodsInTurkish -> yok
Seçim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Seçim: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Shape: java.awt -> yok
Shape: java.awt -> yok
Short2short(x: Short): Short -> yok
Short2short(x: Short): Short -> yok
Short: scala -> yok
Short: scala -> yok
Singleton: scala -> yok
Singleton: scala -> yok
SketchRunner: net.kogics.kojo.lite.Builtins -> yok
SketchRunner: net.kogics.kojo.lite.Builtins -> yok
Slider -> yok
Slider -> yok
Slider -> yok
Slider -> yok
Slider: net.kogics.kojo.lite.Builtins -> yok
Slider: net.kogics.kojo.lite.Builtins -> yok
Some: scala -> yok
Some: scala -> yok
Sound: Sarıcı0.builtins.Tw.Sound -> yok
Sound: Sarıcı0.builtins.Tw.Sound -> yok
Specializable: scala -> yok
Specializable: scala -> yok
Speed: net.kogics.kojo.core -> yok
Speed: net.kogics.kojo.core -> yok
SpotLight -> yok
SpotLight -> yok
SpotLight: (Kesir, Kesir, Kesir, Kesir, Kesir) => com.jhlabs.image.LightFilter#SpotLight -> yok
SpotLight: (Kesir, Kesir, Kesir, Kesir, Kesir) => com.jhlabs.image.LightFilter#SpotLight -> yok
SpriteSheet: net.kogics.kojo.lite.Builtins -> yok
SpriteSheet: net.kogics.kojo.lite.Builtins -> yok
StackOverflowError: java.lang -> yok
StackOverflowError: java.lang -> yok
StackTraceElement: java.lang -> yok
StackTraceElement: java.lang -> yok
StackWalker: java.lang -> yok
StackWalker: java.lang -> yok
Staging: net.kogics.kojo.staging.API -> yok
Staging: net.kogics.kojo.staging.API -> yok
Story -> yok
Story -> yok
Story -> yok
Story -> yok
Story: net.kogics.kojo.lite.Builtins -> yok
Story: net.kogics.kojo.lite.Builtins -> yok
StoryPage: net.kogics.kojo.lite.Builtins -> yok
StoryPage: net.kogics.kojo.lite.Builtins -> yok
Stream: scala.package -> yok
Stream: scala.package -> yok
StrictMath: java.lang -> yok
StrictMath: java.lang -> yok
Sub: net.kogics.kojo.lite.Builtins -> yok
Sub: net.kogics.kojo.lite.Builtins -> yok
Subscriptions: net.kogics.kojo.fpgaenUfakg.Subscriptions.tür -> yok
Subscriptions: net.kogics.kojo.fpgaenUfakg.Subscriptions.tür -> yok
SuppressWarnings: java.lang -> yok
SuppressWarnings: java.lang -> yok
Symbol: scala -> yok
Symbol: scala -> yok
System: java.lang -> yok
System: java.lang -> yok
SınırDışınaTaşmaHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
SınırDışınaTaşmaHatası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
SıralıDizi: DiziMethodsInTurkish -> yok
SıralıDizi: DiziMethodsInTurkish -> yok
TAGS: <root> -> yok
TAGS: <root> -> yok
TSCanvas: net.kogics.kojo.lite.DrawingCanvasAPI -> yok
TSCanvas: net.kogics.kojo.lite.DrawingCanvasAPI -> yok
Takvim: CalendarAndTimeUtilsInTurkish -> yok
Takvim: CalendarAndTimeUtilsInTurkish -> yok
Tarih: CalendarAndTimeUtilsInTurkish -> yok
Tarih: CalendarAndTimeUtilsInTurkish -> yok
TextArea -> yok
TextArea -> yok
TextArea -> yok
TextArea -> yok
TextArea: net.kogics.kojo.lite.Builtins -> yok
TextArea: net.kogics.kojo.lite.Builtins -> yok
TextField -> yok
TextField -> yok
TextField -> yok
TextField -> yok
TextField: net.kogics.kojo.lite.Builtins -> yok
TextField: net.kogics.kojo.lite.Builtins -> yok
TexturePaint -> yok
TexturePaint -> yok
Thread: java.lang -> yok
Thread: java.lang -> yok
ThreadDeath: java.lang -> yok
ThreadDeath: java.lang -> yok
ThreadGroup: java.lang -> yok
ThreadGroup: java.lang -> yok
ThreadLocal: java.lang -> yok
ThreadLocal: java.lang -> yok
Throwable: scala.package -> yok
Throwable: scala.package -> yok
TileWorld: net.kogics.kojo.lite.Builtins -> yok
TileWorld: net.kogics.kojo.lite.Builtins -> yok
TileXY: net.kogics.kojo.lite.Builtins -> yok
TileXY: net.kogics.kojo.lite.Builtins -> yok
TimeZone: java.util -> yok
TimeZone: java.util -> yok
Timeline(duration: Kesir, keyFrames: net.kogics.kojo.animation.KeyFrames, easer: net.kogics.kojo.kmath.KEasing, picMaker: Dizi[Kesir] => Builtins.bu.Picture, hideOnDone: İkil): Sarıcı0.builtins.Animation -> yok
Timeline(duration: Kesir, keyFrames: net.kogics.kojo.animation.KeyFrames, easer: net.kogics.kojo.kmath.KEasing, picMaker: Dizi[Kesir] => Builtins.bu.Picture, hideOnDone: İkil): Sarıcı0.builtins.Animation -> yok
Timeline(duration: Kesir, keyFrames: net.kogics.kojo.animation.KeyFrames, easers: Dizi[net.kogics.kojo.kmath.KEasing], picMaker: Dizi[Kesir] => Builtins.bu.Picture, hideOnDone: İkil): Sarıcı0.builtins.Animation -> yok
Timeline(duration: Kesir, keyFrames: net.kogics.kojo.animation.KeyFrames, easers: Dizi[net.kogics.kojo.kmath.KEasing], picMaker: Dizi[Kesir] => Builtins.bu.Picture, hideOnDone: İkil): Sarıcı0.builtins.Animation -> yok
ToggleButton -> yok
ToggleButton -> yok
ToggleButton -> yok
ToggleButton -> yok
ToggleButton: net.kogics.kojo.lite.Builtins -> yok
ToggleButton: net.kogics.kojo.lite.Builtins -> yok
Transition(durationSeconds: Kesir, fromState: Dizi[Kesir], toState: Dizi[Kesir], easer: net.kogics.kojo.kmath.KEasing, picMaker: Dizi[Kesir] => Builtins.bu.Picture, hideOnDone: İkil): Sarıcı0.builtins.Animation -> yok
Transition(durationSeconds: Kesir, fromState: Dizi[Kesir], toState: Dizi[Kesir], easer: net.kogics.kojo.kmath.KEasing, picMaker: Dizi[Kesir] => Builtins.bu.Picture, hideOnDone: İkil): Sarıcı0.builtins.Animation -> yok
Traversable: scala.package -> yok
Traversable: scala.package -> yok
TraversableOnce: scala.package -> yok
TraversableOnce: scala.package -> yok
Triangle2D: io.github.jdiemke.triangulation -> yok
Triangle2D: io.github.jdiemke.triangulation -> yok
Tuple10: scala -> yok
Tuple10: scala -> yok
Tuple11: scala -> yok
Tuple11: scala -> yok
Tuple12: scala -> yok
Tuple12: scala -> yok
Tuple13: scala -> yok
Tuple13: scala -> yok
Tuple14: scala -> yok
Tuple14: scala -> yok
Tuple15: scala -> yok
Tuple15: scala -> yok
Tuple16: scala -> yok
Tuple16: scala -> yok
Tuple17: scala -> yok
Tuple17: scala -> yok
Tuple18: scala -> yok
Tuple18: scala -> yok
Tuple19: scala -> yok
Tuple19: scala -> yok
Tuple1: scala -> yok
Tuple1: scala -> yok
Tuple20: scala -> yok
Tuple20: scala -> yok
Tuple21: scala -> yok
Tuple21: scala -> yok
Tuple22: scala -> yok
Tuple22: scala -> yok
Tuple2: scala -> yok
Tuple2: scala -> yok
Tuple3: scala -> yok
Tuple3: scala -> yok
Tuple4: scala -> yok
Tuple4: scala -> yok
Tuple5: scala -> yok
Tuple5: scala -> yok
Tuple6: scala -> yok
Tuple6: scala -> yok
Tuple7: scala -> yok
Tuple7: scala -> yok
Tuple8: scala -> yok
Tuple8: scala -> yok
Tuple9: scala -> yok
Tuple9: scala -> yok
TurkishAPI: tür -> yok
TurkishAPI: tür -> yok
TurkishTurtle: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
TurkishTurtle: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Turtle: net.kogics.kojo.lite.CoreBuiltins -> yok
Turtle: net.kogics.kojo.lite.CoreBuiltins -> yok
TuvalÇizim: CanvasDrawInTurkish -> yok
TuvalÇizim: CanvasDrawInTurkish -> yok
TuşaBasmaOlayıYöntemleri(a: arayuz.olay.TuşaBasmaOlayı): TuşaBasmaOlayıYöntemleri -> yok
TuşaBasmaOlayıYöntemleri(a: arayuz.olay.TuşaBasmaOlayı): TuşaBasmaOlayıYöntemleri -> yok
TuşaBasmaOlayıYöntemleri: arayuz.SwingWidgetMethodsInTurkish -> yok
TuşaBasmaOlayıYöntemleri: arayuz.SwingWidgetMethodsInTurkish -> yok
Tw: net.kogics.kojo.turtle.TurtleWorldAPI -> yok
Tw: net.kogics.kojo.turtle.TurtleWorldAPI -> yok
Type: <empty> -> yok
Type: <empty> -> yok
TypeNotPresentException: java.lang -> yok
TypeNotPresentException: java.lang -> yok
URL: java.net -> yok
URL: java.net -> yok
UfakKesir: NumMethodsInTurkish -> yok
UfakKesir: NumMethodsInTurkish -> yok
UfakKesirDiziğiDizisi: TurCevirileri -> yok
UfakKesirDiziğiDizisi: TurCevirileri -> yok
UninitializedError: scala -> yok
UninitializedError: scala -> yok
UninitializedFieldError: scala -> yok
UninitializedFieldError: scala -> yok
UniquenessCache: scala -> yok
UniquenessCache: scala -> yok
UnknownError: java.lang -> yok
UnknownError: java.lang -> yok
UnsatisfiedLinkError: java.lang -> yok
UnsatisfiedLinkError: java.lang -> yok
UnsupportedClassVersionError: java.lang -> yok
UnsupportedClassVersionError: java.lang -> yok
UnsupportedOperationException: scala.package -> yok
UnsupportedOperationException: scala.package -> yok
Uzun: NumMethodsInTurkish -> yok
Uzun: NumMethodsInTurkish -> yok
UzunDiziğiDizisi: TurCevirileri -> yok
UzunDiziğiDizisi: TurCevirileri -> yok
UzunlukBirimi: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
UzunlukBirimi: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
VPics -> yok
VPics -> yok
VPics2: net.kogics.kojo.lite.CoreBuiltins -> yok
VPics2: net.kogics.kojo.lite.CoreBuiltins -> yok
Val: <empty> -> yok
Val: <empty> -> yok
ValueOf: scala -> yok
ValueOf: scala -> yok
VarsılHarf: TurCevirileri -> yok
VarsılHarf: TurCevirileri -> yok
VarsılKesir: TurCevirileri -> yok
VarsılKesir: TurCevirileri -> yok
VarsılKısa: TurCevirileri -> yok
VarsılKısa: TurCevirileri -> yok
VarsılLokma: TurCevirileri -> yok
VarsılLokma: TurCevirileri -> yok
VarsılSayı: TurCevirileri -> yok
VarsılSayı: TurCevirileri -> yok
VarsılUfakKesir: TurCevirileri -> yok
VarsılUfakKesir: TurCevirileri -> yok
VarsılUzun: TurCevirileri -> yok
VarsılUzun: TurCevirileri -> yok
Varsılİkil: TurCevirileri -> yok
Varsılİkil: TurCevirileri -> yok
VerifyError: java.lang -> yok
VerifyError: java.lang -> yok
VertexShape: net.kogics.kojo.core -> yok
VertexShape: net.kogics.kojo.core -> yok
Viewable: net.kogics.kojo.story -> yok
Viewable: net.kogics.kojo.story -> yok
VirtualMachineError: java.lang -> yok
VirtualMachineError: java.lang -> yok
Void: java.lang -> yok
Void: java.lang -> yok
Widget: net.kogics.kojo.lite.Builtins -> yok
Widget: net.kogics.kojo.lite.Builtins -> yok
Yapıcıdan: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yapıcıdan: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yazı: YazıMethodsInTurkish -> yok
Yazı: YazıMethodsInTurkish -> yok
Yazı: scala.Pretanım -> yok
Yazı: scala.Pretanım -> yok
YazıBuffer: java.lang -> yok
YazıBuffer: java.lang -> yok
YazıBuilder: scala.package -> yok
YazıBuilder: scala.package -> yok
YazıContext: scala -> yok
YazıContext: scala -> yok
YazıFormat(self: A): YazıFormat[A] -> yok
YazıFormat(self: A): YazıFormat[A] -> yok
YazıFormat: scala.Pretanım -> yok
YazıFormat: scala.Pretanım -> yok
YazıIndexOutOfBoundsException: scala.package -> yok
YazıIndexOutOfBoundsException: scala.package -> yok
YazıRead: net.kogics.kojo.util.Read.YazıRead.tür -> yok
YazıRead: net.kogics.kojo.util.Read.YazıRead.tür -> yok
YazıYöntemleri(y: YazıMethodsInTurkish.bu.Yazı): YazıYöntemleri -> yok
YazıYöntemleri(y: YazıMethodsInTurkish.bu.Yazı): YazıYöntemleri -> yok
YazıYöntemleri: YazıMethodsInTurkish -> yok
YazıYöntemleri: YazıMethodsInTurkish -> yok
Yazıyüzü: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yazıyüzü: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yinelenebilir: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yinelenebilir: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
YinelenebilirBirKere: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
YinelenebilirBirKere: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yok: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yok: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yok: scala -> yok
Yok: scala -> yok
YokNoktaerException: scala.package -> yok
YokNoktaerException: scala.package -> yok
YumuşakGeçiş: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
YumuşakGeçiş: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yöney2B: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yöney2B: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yöney2D -> yok
Yöney2D -> yok
Yöney2D -> yok
Yöney2D -> yok
Yöney2D: net.kogics.kojo.lite.Builtins -> yok
Yöney2D: net.kogics.kojo.lite.Builtins -> yok
Yöney: YöneyMethodsInTurkish -> yok
Yöney: YöneyMethodsInTurkish -> yok
Yöney: scala.package -> yok
Yöney: scala.package -> yok
YöneyYöntemleri(y: YöneyMethodsInTurkish.bu.Yöney[A]): YöneyYöntemleri[A] -> yok
YöneyYöntemleri(y: YöneyMethodsInTurkish.bu.Yöney[A]): YöneyYöntemleri[A] -> yok
YöneyYöntemleri: YöneyMethodsInTurkish -> yok
YöneyYöntemleri: YöneyMethodsInTurkish -> yok
Yığın: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Yığın: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
a -> yok
a_kalıp(): Birim -> yok
abstract -> yok
activateCanvas -> yok
activateEditor(): Birim -> yok
addCodeTemplates -> yok
addCodeTemplates(lang: Yazı, templates: Eşlek[Yazı,Yazı]): Birim -> yok
addHelpContent -> yok
addHelpContent(lang: Yazı, content: Eşlek[Yazı,Yazı]): Birim -> yok
akka: <root> -> yok
animDizi(as: Builtins.bu.Animation*): Sarıcı0.builtins.Animation -> yok
animDizi(as: scala.collection.Dizi[Builtins.bu.Animation]): Sarıcı0.builtins.Animation -> yok
animPar(as: Builtins.bu.Animation*): Sarıcı0.builtins.Animation -> yok
animPar(as: scala.collection.Dizi[Builtins.bu.Animation]): Sarıcı0.builtins.Animation -> yok
animate -> yok
animateWithCanvasDraw(drawFrame: Builtins.bu.CanvasDraw => Birim): Birim -> yok
animateWithRedraw -> yok
animateWithSetupCanvasDraw(setupCanvas: Builtins.bu.CanvasDraw => Birim)(drawFrame: Builtins.bu.CanvasDraw => Birim): Birim -> yok
animateWithState -> yok
animationDelay -> yok
annotation: scala -> yok
any2stringadd(self: A): any2stringadd[A] -> yok
any2stringadd: scala.Pretanım -> yok
apple: <root> -> yok
arc -> yok
arc2 -> yok
arcVertex(x: Kesir, y: Kesir, angle: Kesir): Birim -> yok
area -> yok
artalandaOynat(kod: => Birim): Birim -> yok
artalanıKur(b: Boya): Birim -> yok
artalanıKurDik(r1: Renk, r2: Renk): Birim -> yok
artalanıKurYatay(r1: Renk, r2: Renk): Birim -> yok
asInstanceOf: T0 -> yok
assert(assertion: İkil): Birim -> yok
assert(assertion: İkil, message: => Any): Birim -> yok
assets: <root> -> yok
assume(assumption: İkil): Birim -> yok
assume(assumption: İkil, message: => Any): Birim -> yok
astStopPhase: Yazı -> yok
atla -> yok
augmentYazı(x: Yazı): scala.collection.YazıOps -> yok
availableFontNames: Dizin[Yazı] -> yok
axes -> yok
axesOff -> yok
axesOn -> yok
ay: arayuz.tür -> yok
aydınlık: Kesir => res.AydınlıkBD -> yok
açı(n1: Nokta, n2: Nokta): Kesir -> yok
açı(x1: Kesir, y1: Kesir, x2: Kesir, y2: Kesir): Kesir -> yok
açıkGri: Renk -> yok
açıyaDön -> yok
açıÖlçeriGizle: Birim -> yok
açıÖlçeriGöster(x: Kesir, y: Kesir): Resim -> yok
açıÖlçeriGöster: Resim -> yok
back -> yok
back -> yok
badlib: <root> -> yok
badlib: <root> -> yok
baseFontSize: Sayı -> yok
baseFontSize: Sayı -> yok
baskın -> yok
baskın -> yok
batı -> yok
batı -> yok
bazı -> yok
bazı -> yok
başlangıçNoktasıAltSolKöşeOlsun(): Birim -> yok
başlangıçNoktasıAltSolKöşeOlsun(): Birim -> yok
başlangıçNoktasıÜstSolKöşeOlsun(): Birim -> yok
başlangıçNoktasıÜstSolKöşeOlsun(): Birim -> yok
bd2double(bd: BigDecimal): Kesir -> yok
bd2double(bd: BigDecimal): Kesir -> yok
beamsOff -> yok
beamsOff -> yok
beamsOn -> yok
beamsOn -> yok
beans: scala -> yok
beans: scala -> yok
beginShape -> yok
beginShape -> yok
belirt(belit: İkil, mesaj: => Any): Birim -> yok
belirt(belit: İkil, mesaj: => Any): Birim -> yok
beyaz: Renk -> yok
beyaz: Renk -> yok
bezierVertex(cx1: Kesir, cy1: Kesir, cx2: Kesir, cy2: Kesir, x2: Kesir, y2: Kesir): Birim -> yok
bezierVertex(cx1: Kesir, cy1: Kesir, cx2: Kesir, cy2: Kesir, x2: Kesir, y2: Kesir): Birim -> yok
bibliothek: <root> -> yok
bibliothek: <root> -> yok
bildir -> yok
bildir -> yok
birEfekt(isim: Symbol, özellikler: (Symbol, Any)*): res.SomeEffectc -> yok
birEfekt(isim: Symbol, özellikler: (Symbol, Any)*): res.SomeEffectc -> yok
birlikte -> yok
birlikte -> yok
birsonrakiGiysi -> yok
birsonrakiGiysi -> yok
biçimleriBelleğeYaz -> yok
biçimleriBelleğeYaz -> yok
biçimleriGeriYükle -> yok
biçimleriGeriYükle -> yok
black: Renk -> yok
black: Renk -> yok
blue: Renk -> yok
blue: Renk -> yok
blur -> yok
blur -> yok
blur: Sayı => net.kogics.kojo.picture.Blurc -> yok
blur: Sayı => net.kogics.kojo.picture.Blurc -> yok
boolean2İkil(x: İkil): İkil -> yok
boolean2İkil(x: İkil): İkil -> yok
booleanDizikOps(xs: Dizik[İkil]): scala.collection.DizikOps[İkil] -> yok
booleanDizikOps(xs: Dizik[İkil]): scala.collection.DizikOps[İkil] -> yok
booleanSarıcı(x: İkil): scala.runtime.Richİkil -> yok
booleanSarıcı(x: İkil): scala.runtime.Richİkil -> yok
bouncePicOffPic(pic: Builtins.bu.Picture, vel: Builtins.bu.Yöney2D, obstacle: Builtins.bu.Picture): Sarıcı0.builtins.Yöney2D -> yok
bouncePicOffPic(pic: Builtins.bu.Picture, vel: Builtins.bu.Yöney2D, obstacle: Builtins.bu.Picture): Sarıcı0.builtins.Yöney2D -> yok
bouncePicOffStage(pic: Builtins.bu.Picture, vel: Builtins.bu.Yöney2D): Sarıcı0.builtins.Yöney2D -> yok
bouncePicOffStage(pic: Builtins.bu.Picture, vel: Builtins.bu.Yöney2D): Sarıcı0.builtins.Yöney2D -> yok
bouncePicYöneyOffPic -> yok
bouncePicYöneyOffPic -> yok
bouncePicYöneyOffPic(pic: Builtins.bu.Picture, v: Builtins.bu.Yöney2D, obstacle: Builtins.bu.Picture): Sarıcı0.builtins.Yöney2D -> yok
bouncePicYöneyOffPic(pic: Builtins.bu.Picture, v: Builtins.bu.Yöney2D, obstacle: Builtins.bu.Picture): Sarıcı0.builtins.Yöney2D -> yok
bouncePicYöneyOffStage -> yok
bouncePicYöneyOffStage -> yok
bouncePicYöneyOffStage(p: Builtins.bu.Picture, v: Builtins.bu.Yöney2D): Sarıcı0.builtins.Yöney2D -> yok
bouncePicYöneyOffStage(p: Builtins.bu.Picture, v: Builtins.bu.Yöney2D): Sarıcı0.builtins.Yöney2D -> yok
bounds: net.kogics.kojo.picture.PostDrawTransformc -> yok
bounds: net.kogics.kojo.picture.PostDrawTransformc -> yok
boyaRengi: Boya => res.BoyaRengiBD -> yok
boyaRengi: Boya => res.BoyaRengiBD -> yok
boyamaRenginiKur -> yok
boyamaRenginiKur -> yok
br -> yok
br -> yok
breakpoint -> yok
breakpoint -> yok
breakpoint(msg: Any, pauseMessage: Yazı, resumeMsg: Yazı): Birim -> yok
breakpoint(msg: Any, pauseMessage: Yazı, resumeMsg: Yazı): Birim -> yok
brit -> yok
brit -> yok
britMod -> yok
britMod -> yok
brown: Renk -> yok
brown: Renk -> yok
bu -> yok
bu -> yok
bu -> yok
bu -> yok
buAn2: Uzun -> yok
buAn2: Uzun -> yok
buAn: Uzun -> yok
buAn: Uzun -> yok
buDizin: Yazı -> yok
buDizin: Yazı -> yok
buSaniye2: İriKesir -> yok
buSaniye2: İriKesir -> yok
buSaniye: Kesir -> yok
buSaniye: Kesir -> yok
builtins: net.kogics.kojo.lite.Builtins -> yok
builtins: net.kogics.kojo.lite.Builtins -> yok
bulanık: Sayı => res.BulanıkBD -> yok
bulanık: Sayı => res.BulanıkBD -> yok
buradaDur: Her => Birim -> yok
buradaDur: Her => Birim -> yok
burdaDur(mesaj: Her): Birim -> yok
burdaDur(mesaj: Her): Birim -> yok
byte2Byte(x: Byte): Byte -> yok
byte2Byte(x: Byte): Byte -> yok
byteDizikOps(xs: Dizik[Byte]): scala.collection.DizikOps[Byte] -> yok
byteDizikOps(xs: Dizik[Byte]): scala.collection.DizikOps[Byte] -> yok
byteSarıcı(x: Byte): scala.runtime.RichByte -> yok
byteSarıcı(x: Byte): scala.runtime.RichByte -> yok
büyüt(oran: Kesir): res.BüyütBD -> yok
büyüt(oran: Kesir): res.BüyütBD -> yok
büyüt(xOranı: Kesir, yOranı: Kesir): res.BüyütXyBD -> yok
büyüt(xOranı: Kesir, yOranı: Kesir): res.BüyütXyBD -> yok
büyütXY: (Kesir, Kesir) => res.BüyütXyBD -> yok
büyütXY: (Kesir, Kesir) => res.BüyütXyBD -> yok
c2rc(c: CoreBuiltins.bu.Color): net.kogics.kojo.doodle.Color -> yok
c2rc(c: CoreBuiltins.bu.Color): net.kogics.kojo.doodle.Color -> yok
camScale: Kesir -> yok
camScale: Kesir -> yok
camgöbeği: Renk -> yok
camgöbeği: Renk -> yok
canlandır(işlev: => Birim): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity] -> yok
canlandır(işlev: => Birim): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity] -> yok
canlandırEvreyle(ilkEvre: Evre)(işlev: Evre => Evre): JGelecek[PEtkinlik] -> yok
canlandırEvreyle(ilkEvre: Evre)(işlev: Evre => Evre): JGelecek[PEtkinlik] -> yok
canlandırTuvalÇizimle(görüntüyüÇiz: TuvalÇizim => Birim): Birim -> yok
canlandırTuvalÇizimle(görüntüyüÇiz: TuvalÇizim => Birim): Birim -> yok
canlandırYenidenÇizerek(ilkEvre: Evre, sonrakiEvre: Evre => Evre, işlev: Evre => Resim): Birim -> yok
canlandırYenidenÇizerek(ilkEvre: Evre, sonrakiEvre: Evre => Evre, işlev: Evre => Resim): Birim -> yok
canlandırmaBaşlayınca(işlev: => Birim): Birim -> yok
canlandırmaBaşlayınca(işlev: => Birim): Birim -> yok
canlandırmaBitince(işlev: => Birim): Birim -> yok
canlandırmaBitince(işlev: => Birim): Birim -> yok
canlandırmaDizisi(canlandırmalar: Canlandırma*): Canlandırma -> yok
canlandırmaDizisi(canlandırmalar: Canlandırma*): Canlandırma -> yok
canlandırmaDizisi(canlandırmalar: Diz[Canlandırma]): Canlandırma -> yok
canlandırmaDizisi(canlandırmalar: Diz[Canlandırma]): Canlandırma -> yok
canlandırmaEşzamanlı(canlandırmalar: Canlandırma*): rb.Animation -> yok
canlandırmaEşzamanlı(canlandırmalar: Canlandırma*): rb.Animation -> yok
canlandırmaEşzamanlı(canlandırmalar: Diz[Canlandırma]): rb.Animation -> yok
canlandırmaEşzamanlı(canlandırmalar: Diz[Canlandırma]): rb.Animation -> yok
canlandırmaHızı: Uzun -> yok
canlandırmaHızı: Uzun -> yok
canlandırmaHızınıKur -> yok
canlandırmaHızınıKur -> yok
canlandırmayıDurdur(etkinlik: JGelecek[PEtkinlik]): Birim -> yok
canlandırmayıDurdur(etkinlik: JGelecek[PEtkinlik]): Birim -> yok
canvasBounds -> yok
canvasBounds -> yok
canvasDrawMethods(tç: CanvasDrawInTurkish.bu.TuvalÇizim): canvasDrawMethods -> yok
canvasDrawMethods(tç: CanvasDrawInTurkish.bu.TuvalÇizim): canvasDrawMethods -> yok
canvasDrawMethods: CanvasDrawInTurkish -> yok
canvasDrawMethods: CanvasDrawInTurkish -> yok
canvasSketch -> yok
canvasSketch -> yok
canvasSketch(sketch: AnyRef{tanım setup(cd: Builtins.bu.CanvasDraw): Birim; tanım drawLoop(cd: Builtins.bu.CanvasDraw): Birim}, scaleOutFactor: Kesir): Birim -> yok
canvasSketch(sketch: AnyRef{tanım setup(cd: Builtins.bu.CanvasDraw): Birim; tanım drawLoop(cd: Builtins.bu.CanvasDraw): Birim}, scaleOutFactor: Kesir): Birim -> yok
catch -> yok
catch -> yok
center(pic: Builtins.bu.Picture): Birim -> yok
center(pic: Builtins.bu.Picture): Birim -> yok
cetveliGöster(x: Kesir, y: Kesir): Resim -> yok
cetveliGöster(x: Kesir, y: Kesir): Resim -> yok
cetveliGöster: Resim -> yok
cetveliGöster: Resim -> yok
challenge: <root> -> yok
challenge: <root> -> yok
changePosition -> yok
changePosition -> yok
char2Harfacter(x: Harf): Harfacter -> yok
char2Harfacter(x: Harf): Harfacter -> yok
charDizikOps(xs: Dizik[Harf]): scala.collection.DizikOps[Harf] -> yok
charDizikOps(xs: Dizik[Harf]): scala.collection.DizikOps[Harf] -> yok
charSarıcı(c: Harf): scala.runtime.RichHarf -> yok
charSarıcı(c: Harf): scala.runtime.RichHarf -> yok
checkForLargeDrawing -> yok
checkForLargeDrawing -> yok
checkNotePlayer -> yok
checkNotePlayer -> yok
cheight: Sayı -> yok
cheight: Sayı -> yok
cheight_= -> yok
cheight_= -> yok
circle -> yok
circle -> yok
classOf: Class[T] -> yok
classOf: Class[T] -> yok
clear -> yok
clear -> yok
clearGameTime -> yok
clearGameTime -> yok
clearOutput -> yok
clearOutput -> yok
clearOutputError(): Birim -> yok
clearOutputError(): Birim -> yok
clearSingleLineCode -> yok
clearSingleLineCode -> yok
clearStepDrawing(): Birim -> yok
clearStepDrawing(): Birim -> yok
clearWithUL -> yok
clearWithUL -> yok
cleari -> yok
cleari -> yok
clip(clipShape: java.awt.Shape): net.kogics.kojo.picture.Clippedc -> yok
clip(clipShape: java.awt.Shape): net.kogics.kojo.picture.Clippedc -> yok
clone: Object -> yok
clone: Object -> yok
clr(): Birim -> yok
clr(): Birim -> yok
cm: net.kogics.kojo.doodle.Color.tür -> yok
cm: net.kogics.kojo.doodle.Color.tür -> yok
code -> yok
code -> yok
col -> yok
col -> yok
col: (=> net.kogics.kojo.core.Picture, Sayı) => net.kogics.kojo.picture.VPics -> yok
col: (=> net.kogics.kojo.core.Picture, Sayı) => net.kogics.kojo.picture.VPics -> yok
colDiziYöntemleri(d: Diz[T]): colDiziYöntemleri[T] -> yok
colDiziYöntemleri(d: Diz[T]): colDiziYöntemleri[T] -> yok
colDiziYöntemleri: DiziMethodsInTurkish -> yok
colDiziYöntemleri: DiziMethodsInTurkish -> yok
collection: scala -> yok
collection: scala -> yok
color -> yok
color -> yok
color(r: Sayı, g: Sayı, b: Sayı): Renk -> yok
color(r: Sayı, g: Sayı, b: Sayı): Renk -> yok
color(rgbHex: Sayı): Renk -> yok
color(rgbHex: Sayı): Renk -> yok
com: <root> -> yok
com: <root> -> yok
compat: scala -> yok
compat: scala -> yok
compileRunCode(code: Yazı): Birim -> yok
compileRunCode(code: Yazı): Birim -> yok
concurrent: scala -> yok
concurrent: scala -> yok
copyDizikToImmutableSıralıDizi(xs: Dizik[T]): SıralıDizi[T] -> yok
copyDizikToImmutableSıralıDizi(xs: Dizik[T]): SıralıDizi[T] -> yok
countDownLatch -> yok
countDownLatch -> yok
countDownLatch(n: Sayı): java.util.concurrent.CountDownLatch -> yok
countDownLatch(n: Sayı): java.util.concurrent.CountDownLatch -> yok
currGame -> yok
currGame -> yok
currGame_= -> yok
currGame_= -> yok
currentDir: Yazı -> yok
currentDir: Yazı -> yok
curveVertex(x: Kesir, y: Kesir): Birim -> yok
curveVertex(x: Kesir, y: Kesir): Birim -> yok
curveVertexRt(r: Kesir, theta: Kesir): Birim -> yok
curveVertexRt(r: Kesir, theta: Kesir): Birim -> yok
cwidth: Sayı -> yok
cwidth: Sayı -> yok
cwidth_= -> yok
cwidth_= -> yok
cyan: Renk -> yok
cyan: Renk -> yok
daire -> yok
daire -> yok
damgalı -> yok
damgalı -> yok
darkGray: Renk -> yok
darkGray: Renk -> yok
darkGrayClassic: Renk -> yok
darkGrayClassic: Renk -> yok
data: <root> -> yok
data: <root> -> yok
de: <root> -> yok
de: <root> -> yok
def_command_0 -> yok
def_command_0 -> yok
def_command_1 -> yok
def_command_1 -> yok
def_command_2 -> yok
def_command_2 -> yok
def_function_1 -> yok
def_function_1 -> yok
def_function_2 -> yok
def_function_2 -> yok
den -> yok
den -> yok
den_türlü -> yok
den_türlü -> yok
dene -> yok
dene -> yok
deprecated: scala -> yok
deprecated: scala -> yok
deprecatedInheritance: scala -> yok
deprecatedInheritance: scala -> yok
deprecatedName: scala -> yok
deprecatedName: scala -> yok
deprecatedOverriding: scala -> yok
deprecatedOverriding: scala -> yok
dereceye(açı: Kesir): Kesir -> yok
dereceye(açı: Kesir): Kesir -> yok
deste -> yok
deste -> yok
dez -> yok
dez -> yok
dez -> yok
dez -> yok
dez_türlü -> yok
dez_türlü -> yok
değişim(sayılar: Dizik[Kesir]): Kesir -> yok
değişim(sayılar: Dizik[Kesir]): Kesir -> yok
değişim(sayılar: Dizik[Kesir], ortalama: Kesir): Kesir -> yok
değişim(sayılar: Dizik[Kesir], ortalama: Kesir): Kesir -> yok
dikeyMerkezKonumu(uzunluk: Kesir): Kesir -> yok
dikeyMerkezKonumu(uzunluk: Kesir): Kesir -> yok
direction: Kesir -> yok
direction: Kesir -> yok
disablePanAndZoom(): Birim -> yok
disablePanAndZoom(): Birim -> yok
dist: <root> -> yok
dist: <root> -> yok
distantLight(direction: Kesir, elevation: Kesir): com.jhlabs.image.LightFilter -> yok
distantLight(direction: Kesir, elevation: Kesir): com.jhlabs.image.LightFilter -> yok
div -> yok
div -> yok
do -> yok
do -> yok
dot -> yok
dot -> yok
double2Kesir(x: Kesir): Kesir -> yok
double2Kesir(x: Kesir): Kesir -> yok
doubleDizikOps(xs: Dizik[Kesir]): scala.collection.DizikOps[Kesir] -> yok
doubleDizikOps(xs: Dizik[Kesir]): scala.collection.DizikOps[Kesir] -> yok
doubleSarıcı(x: Kesir): scala.runtime.RichKesir -> yok
doubleSarıcı(x: Kesir): scala.runtime.RichKesir -> yok
doğalLogu(x: Kesir): Kesir -> yok
doğalLogu(x: Kesir): Kesir -> yok
doğru -> yok
doğru -> yok
doğru -> yok
doğru -> yok
doğrultu -> yok
doğrultu -> yok
doğu -> yok
doğu -> yok
draw -> yok
draw -> yok
drawAndHide -> yok
drawAndHide -> yok
drawAndHide(pictures: Builtins.bu.Picture*): Birim -> yok
drawAndHide(pictures: Builtins.bu.Picture*): Birim -> yok
drawCentered(pic: Builtins.bu.Picture): Birim -> yok
drawCentered(pic: Builtins.bu.Picture): Birim -> yok
drawCenteredMessage(message: Yazı, color: Builtins.bu.Color, fontSize: Sayı): Birim -> yok
drawCenteredMessage(message: Yazı, color: Builtins.bu.Color, fontSize: Sayı): Birim -> yok
drawLoop(fn: => Birim): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity] -> yok
drawLoop(fn: => Birim): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity] -> yok
drawStage -> yok
drawStage -> yok
drawStage(fillc: java.awt.Paint): Birim -> yok
drawStage(fillc: java.awt.Paint): Birim -> yok
dtor(n: Kesir): Sarıcı0.builtins.Rational -> yok
dtor(n: Kesir): Sarıcı0.builtins.Rational -> yok
durakla(saniye: Kesir): Birim -> yok
durakla(saniye: Kesir): Birim -> yok
duraklaMiliSaniye(miliSaniye: Uzun): Birim -> yok
duraklaMiliSaniye(miliSaniye: Uzun): Birim -> yok
durdur(): Birim -> yok
durdur(): Birim -> yok
durum -> yok
durum -> yok
durum -> yok
durum -> yok
dön(açı: Kesir): Birim -> yok
dön(açı: Kesir): Birim -> yok
dön(açı: Kesir, yarıçap: Kesir): Birim -> yok
dön(açı: Kesir, yarıçap: Kesir): Birim -> yok
döndür: Kesir => res.DöndürBD -> yok
döndür: Kesir => res.DöndürBD -> yok
döndürMerkezli: (Kesir, Kesir, Kesir) => res.DöndürMerBD -> yok
döndürMerkezli: (Kesir, Kesir, Kesir) => res.DöndürMerBD -> yok
eSayısı: Kesir -> yok
eSayısı: Kesir -> yok
easing: net.kogics.kojo.kmath.KEasing.tür -> yok
easing: net.kogics.kojo.kmath.KEasing.tür -> yok
edu: <root> -> yok
edu: <root> -> yok
effect -> yok
effect -> yok
effect(filter: java.awt.image.BufferedImageOp): net.kogics.kojo.picture.ApplyFilterc -> yok
effect(filter: java.awt.image.BufferedImageOp): net.kogics.kojo.picture.ApplyFilterc -> yok
effect(filterOp: Builtins.bu.ImageOp): net.kogics.kojo.picture.ApplyFilterc -> yok
effect(filterOp: Builtins.bu.ImageOp): net.kogics.kojo.picture.ApplyFilterc -> yok
effect(name: Symbol, props: (Symbol, Any)*): net.kogics.kojo.picture.SomeEffectc -> yok
effect(name: Symbol, props: (Symbol, Any)*): net.kogics.kojo.picture.SomeEffectc -> yok
ekranTazelemeHızınıGöster(renk: Renk, yazıBoyu: Sayı): Birim -> yok
ekranTazelemeHızınıGöster(renk: Renk, yazıBoyu: Sayı): Birim -> yok
ekranTazelemeHızınıKur(saniyedeKaçKere: Sayı): Birim -> yok
ekranTazelemeHızınıKur(saniyedeKaçKere: Sayı): Birim -> yok
eksenler: res.EksenlerBD.tür -> yok
eksenler: res.EksenlerBD.tür -> yok
eksenleriGizle: Birim -> yok
eksenleriGizle: Birim -> yok
eksenleriGöster: Birim -> yok
eksenleriGöster: Birim -> yok
ellipse -> yok
ellipse -> yok
ellipse(r1: Kesir, r2: Kesir): Birim -> yok
ellipse(r1: Kesir, r2: Kesir): Birim -> yok
else -> yok
else -> yok
em -> yok
em -> yok
enUfakOrtakKat(s1: Sayı, s2: Sayı): Sayı -> yok
enUfakOrtakKat(s1: Sayı, s2: Sayı): Sayı -> yok
enUfakOrtakKat(s1: Uzun, s2: Uzun): Uzun -> yok
enUfakOrtakKat(s1: Uzun, s2: Uzun): Uzun -> yok
enUfağı(x: Kesir, y: Kesir): Kesir -> yok
enUfağı(x: Kesir, y: Kesir): Kesir -> yok
enUfağı(x: Sayı, y: Sayı): Sayı -> yok
enUfağı(x: Sayı, y: Sayı): Sayı -> yok
enUfağı(x: UfakKesir, y: UfakKesir): UfakKesir -> yok
enUfağı(x: UfakKesir, y: UfakKesir): UfakKesir -> yok
enUfağı(x: Uzun, y: Uzun): Uzun -> yok
enUfağı(x: Uzun, y: Uzun): Uzun -> yok
endShape -> yok
endShape -> yok
engeldenYansıtma: (Resim, Yöney2B, Resim) => Yöney2B -> yok
engeldenYansıtma: (Resim, Yöney2B, Resim) => Yöney2B -> yok
englishTurtle -> yok
englishTurtle -> yok
entry(): Birim -> yok
entry(): Birim -> yok
enİriOrtakPayda(s1: Sayı, s2: Sayı): Sayı -> yok
enİriOrtakPayda(s1: Sayı, s2: Sayı): Sayı -> yok
enİriOrtakPayda(s1: Uzun, s2: Uzun): Uzun -> yok
enİriOrtakPayda(s1: Uzun, s2: Uzun): Uzun -> yok
enİrisi(x: Kesir, y: Kesir): Kesir -> yok
enİrisi(x: Kesir, y: Kesir): Kesir -> yok
enİrisi(x: Sayı, y: Sayı): Sayı -> yok
enİrisi(x: Sayı, y: Sayı): Sayı -> yok
enİrisi(x: UfakKesir, y: UfakKesir): UfakKesir -> yok
enİrisi(x: UfakKesir, y: UfakKesir): UfakKesir -> yok
enİrisi(x: Uzun, y: Uzun): Uzun -> yok
enİrisi(x: Uzun, y: Uzun): Uzun -> yok
epochTime -> yok
epochTime -> yok
epochTimeMillis -> yok
epochTimeMillis -> yok
eq(x$1: AnyRef): İkil -> yok
eq(x$1: AnyRef): İkil -> yok
equals(x$1: Object): İkil -> yok
equals(x$1: Object): İkil -> yok
erasePictures(): Birim -> yok
erasePictures(): Birim -> yok
ev -> yok
ev -> yok
evDizini: Yazı -> yok
evDizini: Yazı -> yok
eval(expr: Yazı): Option[Any] -> yok
eval(expr: Yazı): Option[Any] -> yok
evalInDrawingThread(fn: => T): T -> yok
evalInDrawingThread(fn: => T): T -> yok
example: <root> -> yok
example: <root> -> yok
examples: <root> -> yok
examples: <root> -> yok
export: <root> -> yok
export: <root> -> yok
exportImage -> yok
exportImage -> yok
exportImageH -> yok
exportImageH -> yok
exportImageW -> yok
exportImageW -> yok
exportThumbnail(filePrefix: Yazı, height: Sayı): java.io.File -> yok
exportThumbnail(filePrefix: Yazı, height: Sayı): java.io.File -> yok
extends -> yok
extends -> yok
eüssü(x: Kesir): Kesir -> yok
eüssü(x: Kesir): Kesir -> yok
eğer -> yok
eğer -> yok
eğer_ve_yoksa -> yok
eğer_ve_yoksa -> yok
eşle -> yok
eşle -> yok
fade -> yok
fade -> yok
fade: Sayı => net.kogics.kojo.picture.Fadec -> yok
fade: Sayı => net.kogics.kojo.picture.Fadec -> yok
fareKonumu: Nokta -> yok
fareKonumu: Nokta -> yok
fareKımıldayınca(iş: (Kesir, Kesir) => Birim): Birim -> yok
fareKımıldayınca(iş: (Kesir, Kesir) => Birim): Birim -> yok
fareyeTıklıyınca(iş: (Kesir, Kesir) => Birim): Birim -> yok
fareyeTıklıyınca(iş: (Kesir, Kesir) => Birim): Birim -> yok
fareyiSürükleyince(iş: (Kesir, Kesir) => Birim): Birim -> yok
fareyiSürükleyince(iş: (Kesir, Kesir) => Birim): Birim -> yok
fast: net.kogics.kojo.core.Fast.tür -> yok
fast: net.kogics.kojo.core.Fast.tür -> yok
fillColor -> yok
fillColor -> yok
filterImage(img: java.awt.image.BufferedImage, filter: java.awt.image.BufferedImageOp): java.awt.image.BufferedImage -> yok
filterImage(img: java.awt.image.BufferedImage, filter: java.awt.image.BufferedImageOp): java.awt.image.BufferedImage -> yok
filterPicture(p: Builtins.bu.Picture, filter: java.awt.image.BufferedImageOp): Sarıcı0.builtins.Picture -> yok
filterPicture(p: Builtins.bu.Picture, filter: java.awt.image.BufferedImageOp): Sarıcı0.builtins.Picture -> yok
filtre: Bellekteİmgeİşlemi => res.ApplyFilterc -> yok
filtre: Bellekteİmgeİşlemi => res.ApplyFilterc -> yok
final -> yok
final -> yok
finalize(): Birim -> yok
finalize(): Birim -> yok
finally -> yok
finally -> yok
flip -> yok
flip -> yok
flipAroundX: net.kogics.kojo.picture.FlipXc.tür -> yok
flipAroundX: net.kogics.kojo.picture.FlipXc.tür -> yok
flipAroundY: net.kogics.kojo.picture.FlipYc.tür -> yok
flipAroundY: net.kogics.kojo.picture.FlipYc.tür -> yok
flipX -> yok
flipX -> yok
flipY -> yok
flipY -> yok
float2Float(x: Float): Float -> yok
float2Float(x: Float): Float -> yok
floatDizikOps(xs: Dizik[Float]): scala.collection.DizikOps[Float] -> yok
floatDizikOps(xs: Dizik[Float]): scala.collection.DizikOps[Float] -> yok
floatSarıcı(x: Float): scala.runtime.RichFloat -> yok
floatSarıcı(x: Float): scala.runtime.RichFloat -> yok
for -> yok
for -> yok
forSome -> yok
forSome -> yok
for_range_command -> yok
for_range_command -> yok
for_seq_command -> yok
for_seq_command -> yok
for_seq_expr -> yok
for_seq_expr -> yok
for_seq_expr_multi -> yok
for_seq_expr_multi -> yok
forward -> yok
forward -> yok
ftor(n: Float): Sarıcı0.builtins.Rational -> yok
ftor(n: Float): Sarıcı0.builtins.Rational -> yok
fullScreenAction -> yok
fullScreenAction -> yok
fullScreenOutputAction -> yok
fullScreenOutputAction -> yok
gameTimeEndMsg: Option[Sarıcı0.builtins.Picture] -> yok
gameTimeEndMsg: Option[Sarıcı0.builtins.Picture] -> yok
gameTimeEndMsg_= -> yok
gameTimeEndMsg_= -> yok
gameTimeLabel: Option[Sarıcı0.builtins.Picture] -> yok
gameTimeLabel: Option[Sarıcı0.builtins.Picture] -> yok
gameTimeLabel_= -> yok
gameTimeLabel_= -> yok
gameTimeRunning -> yok
gameTimeRunning -> yok
gameTimeRunning_= -> yok
gameTimeRunning_= -> yok
genericDizikOps(xs: Dizik[T]): scala.collection.DizikOps[T] -> yok
genericDizikOps(xs: Dizik[T]): scala.collection.DizikOps[T] -> yok
genericWrapDizik(xs: Dizik[T]): DizikDizi[T] -> yok
genericWrapDizik(xs: Dizik[T]): DizikDizi[T] -> yok
gerekli(gerekçe: İkil, mesaj: => Any): Birim -> yok
gerekli(gerekçe: İkil, mesaj: => Any): Birim -> yok
geri -> yok
geri -> yok
geriDön -> yok
geriDön -> yok
getClass: Class[_] -> yok
getClass: Class[_] -> yok
getEditorText: Yazı -> yok
getEditorText: Yazı -> yok
getImagePixel(image: java.awt.image.BufferedImage, x: Sayı, y: Sayı): Renk -> yok
getImagePixel(image: java.awt.image.BufferedImage, x: Sayı, y: Sayı): Renk -> yok
getir -> yok
getir -> yok
giysiKur -> yok
giysiKur -> yok
giysileriKur -> yok
giysileriKur -> yok
giysiyiBüyült(oran: Kesir): Birim -> yok
giysiyiBüyült(oran: Kesir): Birim -> yok
gizle: Birim -> yok
gizle: Birim -> yok
gizli -> yok
gizli -> yok
google: <root> -> yok
google: <root> -> yok
gray: Renk -> yok
gray: Renk -> yok
green: Renk -> yok
green: Renk -> yok
gri: Renk -> yok
gri: Renk -> yok
gridOff -> yok
gridOff -> yok
gridOn -> yok
gridOn -> yok
gridiGizle: Birim -> yok
gridiGizle: Birim -> yok
gridiGöster: Birim -> yok
gridiGöster: Birim -> yok
görünmez -> yok
görünmez -> yok
görünür -> yok
görünür -> yok
göster: Birim -> yok
göster: Birim -> yok
götür(yy: Yöney2B): res.GötürBD -> yok
götür(yy: Yöney2B): res.GötürBD -> yok
gücü: (Kesir, Kesir) => Kesir -> yok
gücü: (Kesir, Kesir) => Kesir -> yok
güney -> yok
güney -> yok
gürültü: (Sayı, Kesir) => res.Noisec -> yok
gürültü: (Sayı, Kesir) => res.Noisec -> yok
hashCode: Sayı -> yok
hashCode: Sayı -> yok
heading -> yok
heading -> yok
help(): Birim -> yok
help(): Birim -> yok
hiDpiFontIncrease: Sayı -> yok
hiDpiFontIncrease: Sayı -> yok
hideAxes(): Birim -> yok
hideAxes(): Birim -> yok
hideGrid(): Birim -> yok
hideGrid(): Birim -> yok
hideProtractor(): Birim -> yok
hideProtractor(): Birim -> yok
hideScale(): Birim -> yok
hideScale(): Birim -> yok
hideScriptInOutput -> yok
hideScriptInOutput -> yok
hideVerboseOutput -> yok
hideVerboseOutput -> yok
home -> yok
home -> yok
homeDir: Yazı -> yok
homeDir: Yazı -> yok
hop -> yok
hop -> yok
hue -> yok
hue -> yok
hueMod -> yok
hueMod -> yok
hızlı: net.kogics.kojo.core.Fast.tür -> yok
hızlı: net.kogics.kojo.core.Fast.tür -> yok
hızıKur -> yok
hızıKur -> yok
i18n: <root> -> yok
i18n: <root> -> yok
id: net.kogics.kojo.picture.Transc -> yok
id: net.kogics.kojo.picture.Transc -> yok
identity(x: A): A -> yok
identity(x: A): A -> yok
ids2dds(is: (Sayı, Dizi[Kesir])): (Kesir, Dizi[Kesir]) -> yok
ids2dds(is: (Sayı, Dizi[Kesir])): (Kesir, Dizi[Kesir]) -> yok
if -> yok
if -> yok
ignore(name: Yazı)(fn: => Birim): Birim -> yok
ignore(name: Yazı)(fn: => Birim): Birim -> yok
iis2dds(is: (Sayı, Dizi[Sayı])): (Kesir, Dizi[Kesir]) -> yok
iis2dds(is: (Sayı, Dizi[Sayı])): (Kesir, Dizi[Kesir]) -> yok
ileri -> yok
ileri -> yok
ilerle -> yok
ilerle -> yok
image -> yok
image -> yok
images: <root> -> yok
images: <root> -> yok
imge(bkk: BKK): Bellekteİmge -> yok
imge(bkk: BKK): Bellekteİmge -> yok
imge(boy: Sayı, en: Sayı): Bellekteİmge -> yok
imge(boy: Sayı, en: Sayı): Bellekteİmge -> yok
imge(dosya: Yazı): Bellekteİmge -> yok
imge(dosya: Yazı): Bellekteİmge -> yok
imgeNoktası: (Bellekteİmge, Sayı, Sayı) => Renk -> yok
imgeNoktası: (Bellekteİmge, Sayı, Sayı) => Renk -> yok
imgeNoktasınıKur: (Bellekteİmge, Sayı, Sayı, Renk) => Birim -> yok
imgeNoktasınıKur: (Bellekteİmge, Sayı, Sayı, Renk) => Birim -> yok
implicit -> yok
implicit -> yok
implicitly: T -> yok
implicitly: T -> yok
import -> yok
import -> yok
incr -> yok
incr -> yok
info: <root> -> yok
info: <root> -> yok
initRandomGenerator(): Birim -> yok
initRandomGenerator(): Birim -> yok
initRandomGenerator(seed: Long): Birim -> yok
initRandomGenerator(seed: Long): Birim -> yok
inline: scala -> yok
inline: scala -> yok
insertOutputError(text: Yazı): Birim -> yok
insertOutputError(text: Yazı): Birim -> yok
installDir: Yazı -> yok
installDir: Yazı -> yok
installer.i4j: <root> -> yok
installer.i4j: <root> -> yok
installer: <root> -> yok
installer: <root> -> yok
instrument: java.lang -> yok
instrument: java.lang -> yok
int2Sayıeger(x: Sayı): Sayıeger -> yok
int2Sayıeger(x: Sayı): Sayıeger -> yok
intDizikOps(xs: Dizik[Sayı]): scala.collection.DizikOps[Sayı] -> yok
intDizikOps(xs: Dizik[Sayı]): scala.collection.DizikOps[Sayı] -> yok
intSarıcı(x: Sayı): scala.runtime.RichSayı -> yok
intSarıcı(x: Sayı): scala.runtime.RichSayı -> yok
interpret(code: Yazı): Birim -> yok
interpret(code: Yazı): Birim -> yok
invisible -> yok
invisible -> yok
invoke: java.lang -> yok
invoke: java.lang -> yok
inç: net.kogics.kojo.core.Inch.tür -> yok
inç: net.kogics.kojo.core.Inch.tür -> yok
io: <root> -> yok
io: <root> -> yok
isInstanceOf: İkil -> yok
isInstanceOf: İkil -> yok
isKeyPressed(key: Sayı): İkil -> yok
isKeyPressed(key: Sayı): İkil -> yok
isMousePressed(button: Sayı): İkil -> yok
isMousePressed(button: Sayı): İkil -> yok
isMousePressed: İkil -> yok
isMousePressed: İkil -> yok
isMp3Playing: İkil -> yok
isMp3Playing: İkil -> yok
isMusicPlaying: İkil -> yok
isMusicPlaying: İkil -> yok
isScratchPad: İkil -> yok
isScratchPad: İkil -> yok
isTracing: İkil -> yok
isTracing: İkil -> yok
itor(n: Sayı): Sarıcı0.builtins.Rational -> yok
itor(n: Sayı): Sarıcı0.builtins.Rational -> yok
için -> yok
için -> yok
için_dizi -> yok
için_dizi -> yok
için_dizi_komut -> yok
için_dizi_komut -> yok
için_diziler -> yok
için_diziler -> yok
için_diziler_komut -> yok
için_diziler_komut -> yok
için_komutu_adımlı_aralıklı -> yok
için_komutu_adımlı_aralıklı -> yok
için_komutu_aralıklı -> yok
için_komutu_aralıklı -> yok
işareti(x: Number): Sayı -> yok
işareti(x: Number): Sayı -> yok
java: <root> -> yok
java: <root> -> yok
javax: <root> -> yok
javax: <root> -> yok
javazoom: <root> -> yok
javazoom: <root> -> yok
jdk: <root> -> yok
jdk: <root> -> yok
joystick(radius: Kesir): net.kogics.kojo.lite.JoyStick -> yok
joystick(radius: Kesir): net.kogics.kojo.lite.JoyStick -> yok
jssc: <root> -> yok
jssc: <root> -> yok
jumpTo -> yok
jumpTo -> yok
jumpTo(p: Nokta): Birim -> yok
jumpTo(p: Nokta): Birim -> yok
jumpTo(x: Kesir, y: Kesir): Birim -> yok
jumpTo(x: Kesir, y: Kesir): Birim -> yok
ka-bridge: <root> -> yok
ka-bridge: <root> -> yok
kahverengi: Renk -> yok
kahverengi: Renk -> yok
kalemBoyu: Kesir => res.KalemBoyuBD -> yok
kalemBoyu: Kesir => res.KalemBoyuBD -> yok
kalemKalınlığınıKur -> yok
kalemKalınlığınıKur -> yok
kalemRengi: Boya => res.KalemRengiBD -> yok
kalemRengi: Boya => res.KalemRengiBD -> yok
kalemRenginiKur -> yok
kalemRenginiKur -> yok
kalemiKaldır -> yok
kalemiKaldır -> yok
kalemiİndir -> yok
kalemiİndir -> yok
kalemİnikMi -> yok
kalemİnikMi -> yok
kaplumbağa0: kaplumbağa.tür -> yok
kaplumbağa0: kaplumbağa.tür -> yok
kaplumbağa: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
kaplumbağa: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
kare(en: Kesir): Birim -> yok
kare(en: Kesir): Birim -> yok
karekökü(x: Kesir): Kesir -> yok
karekökü(x: Kesir): Kesir -> yok
karesi(x: Kesir): Kesir -> yok
karesi(x: Kesir): Kesir -> yok
kaydır(n: Nokta): res.KaydırC -> yok
kaydır(n: Nokta): res.KaydırC -> yok
kaydır(x: Kesir, y: Kesir): res.KaydırC -> yok
kaydır(x: Kesir, y: Kesir): res.KaydırC -> yok
kaydır(yy: Yöney2B): res.KaydırC -> yok
kaydır(yy: Yöney2B): res.KaydırC -> yok
kesirOku(istem: Yazı): Kesir -> yok
kesirOku(istem: Yazı): Kesir -> yok
kmath: net.kogics.kojo.kmath.Kmath.tür -> yok
kmath: net.kogics.kojo.kmath.Kmath.tür -> yok
kojoCtx: net.kogics.kojo.core.KojoCtx -> yok
kojoCtx: net.kogics.kojo.core.KojoCtx -> yok
kojoGeçmişBakışaçısınıKur: Birim -> yok
kojoGeçmişBakışaçısınıKur: Birim -> yok
kojoSayıerp: net.kogics.kojo.xscala.KojoSayıerpreter -> yok
kojoSayıerp: net.kogics.kojo.xscala.KojoSayıerpreter -> yok
kojoVarsayılanBakışaçısınıKur: Birim -> yok
kojoVarsayılanBakışaçısınıKur: Birim -> yok
kojoVarsayılanİkinciBakışaçısınıKur: Birim -> yok
kojoVarsayılanİkinciBakışaçısınıKur: Birim -> yok
kojoYazılımcıkBakışaçısınıKur: Birim -> yok
kojoYazılımcıkBakışaçısınıKur: Birim -> yok
kojoÇalışmaSayfalıBakışaçısınıKur: Birim -> yok
kojoÇalışmaSayfalıBakışaçısınıKur: Birim -> yok
kojoÇıktılıÖyküBakışaçısınıKur: Birim -> yok
kojoÇıktılıÖyküBakışaçısınıKur: Birim -> yok
kojoÖyküBakışaçısınıKur: Birim -> yok
kojoÖyküBakışaçısınıKur: Birim -> yok
konum -> yok
konum -> yok
konumVeYönüBelleğeYaz -> yok
konumVeYönüBelleğeYaz -> yok
konumVeYönüGeriYükle -> yok
konumVeYönüGeriYükle -> yok
konumuDeğiştir(x: Kesir, y: Kesir): Birim -> yok
konumuDeğiştir(x: Kesir, y: Kesir): Birim -> yok
konumuKur(x: Kesir, y: Kesir): Birim -> yok
konumuKur(x: Kesir, y: Kesir): Birim -> yok
koru -> yok
koru -> yok
kosinüs(açı: Kesir): Kesir -> yok
kosinüs(açı: Kesir): Kesir -> yok
kosinüsünAçısı(x: Kesir): Kesir -> yok
kosinüsünAçısı(x: Kesir): Kesir -> yok
koyuGri: Renk -> yok
koyuGri: Renk -> yok
kurulumDizini: Yazı -> yok
kurulumDizini: Yazı -> yok
kuvveti(x: Kesir, k: Kesir): Kesir -> yok
kuvveti(x: Kesir, k: Kesir): Kesir -> yok
kuzey -> yok
kuzey -> yok
kırmızı: Renk -> yok
kırmızı: Renk -> yok
l10n-level2: <root> -> yok
l10n-level2: <root> -> yok
language: scala -> yok
language: scala -> yok
languageFeature: scala -> yok
languageFeature: scala -> yok
lastLine: Option[(java.awt.geom.Nokta2D.Kesir, java.awt.geom.Nokta2D.Kesir)] -> yok
lastLine: Option[(java.awt.geom.Nokta2D.Kesir, java.awt.geom.Nokta2D.Kesir)] -> yok
lastTurn: Option[(java.awt.geom.Nokta2D.Kesir, Kesir, Kesir)] -> yok
lastTurn: Option[(java.awt.geom.Nokta2D.Kesir, Kesir, Kesir)] -> yok
lazy -> yok
lazy -> yok
left -> yok
left -> yok
li -> yok
li -> yok
lib: <root> -> yok
lib: <root> -> yok
libs: <root> -> yok
libs: <root> -> yok
light: Kesir => net.kogics.kojo.picture.Britc -> yok
light: Kesir => net.kogics.kojo.picture.Britc -> yok
lightGray: Renk -> yok
lightGray: Renk -> yok
lightMod: (Renk, Kesir) => Renk -> yok
lightMod: (Renk, Kesir) => Renk -> yok
lights(lights: com.jhlabs.image.LightFilter.Light*): net.kogics.kojo.picture.Lightsc -> yok
lights(lights: com.jhlabs.image.LightFilter.Light*): net.kogics.kojo.picture.Lightsc -> yok
lineTo(p: Nokta): Birim -> yok
lineTo(p: Nokta): Birim -> yok
lineTo(x: Kesir, y: Kesir): Birim -> yok
lineTo(x: Kesir, y: Kesir): Birim -> yok
locally(x: T): T -> yok
locally(x: T): T -> yok
log2tabanlı(x: Kesir): Kesir -> yok
log2tabanlı(x: Kesir): Kesir -> yok
log: <root> -> yok
log: <root> -> yok
logTabanlı(x: Kesir, t: Kesir): Kesir -> yok
logTabanlı(x: Kesir, t: Kesir): Kesir -> yok
logaritması(x: Kesir): Kesir -> yok
logaritması(x: Kesir): Kesir -> yok
long2Long(x: Long): Long -> yok
long2Long(x: Long): Long -> yok
longDizikOps(xs: Dizik[Long]): scala.collection.DizikOps[Long] -> yok
longDizikOps(xs: Dizik[Long]): scala.collection.DizikOps[Long] -> yok
longSarıcı(x: Long): scala.runtime.RichLong -> yok
longSarıcı(x: Long): scala.runtime.RichLong -> yok
lruCache(enİriEntries: Sayı): Eşlek[A,B] -> yok
lruCache(enİriEntries: Sayı): Eşlek[A,B] -> yok
ltor(n: Long): Sarıcı0.builtins.Rational -> yok
ltor(n: Long): Sarıcı0.builtins.Rational -> yok
magenta: Renk -> yok
magenta: Renk -> yok
makeCenteredMessage(message: Yazı, color: Builtins.bu.Color, fontSize: Sayı): Sarıcı0.builtins.Picture -> yok
makeCenteredMessage(message: Yazı, color: Builtins.bu.Color, fontSize: Sayı): Sarıcı0.builtins.Picture -> yok
management: java.lang -> yok
management: java.lang -> yok
manifest: Manifest[T] -> yok
manifest: Manifest[T] -> yok
match -> yok
match -> yok
math: scala -> yok
math: scala -> yok
mathgames: <root> -> yok
mathgames: <root> -> yok
mathx: net.kogics.kojo.kmath.Kmath.tür -> yok
mathx: net.kogics.kojo.kmath.Kmath.tür -> yok
mavi: Renk -> yok
mavi: Renk -> yok
media: <root> -> yok
media: <root> -> yok
medium: net.kogics.kojo.core.Medium.tür -> yok
medium: net.kogics.kojo.core.Medium.tür -> yok
melody -> yok
melody -> yok
merkezeTaşı: Resim => Birim -> yok
merkezeTaşı: Resim => Birim -> yok
miskin -> yok
miskin -> yok
module-info: <empty> -> yok
module-info: <empty> -> yok
module: java.lang -> yok
module: java.lang -> yok
mor: Renk -> yok
mor: Renk -> yok
morumsu: Renk -> yok
morumsu: Renk -> yok
mouseButton: Sayı -> yok
mouseButton: Sayı -> yok
mousePosition: Nokta -> yok
mousePosition: Nokta -> yok
mouseX: Kesir -> yok
mouseX: Kesir -> yok
mouseY: Kesir -> yok
mouseY: Kesir -> yok
moveTo -> yok
moveTo -> yok
mozilla: <root> -> yok
mozilla: <root> -> yok
mscore -> yok
mscore -> yok
mutPriQueMethods(d: PriorityQueue[T]): mutPriQueMethods[T] -> yok
mutPriQueMethods(d: PriorityQueue[T]): mutPriQueMethods[T] -> yok
mutPriQueMethods: QueueMethodsInTurkish -> yok
mutPriQueMethods: QueueMethodsInTurkish -> yok
mutQueueMethods(d: Queue[T]): mutQueueMethods[T] -> yok
mutQueueMethods(d: Queue[T]): mutQueueMethods[T] -> yok
mutQueueMethods: QueueMethodsInTurkish -> yok
mutQueueMethods: QueueMethodsInTurkish -> yok
mutlakDeğer(x: Kesir): Kesir -> yok
mutlakDeğer(x: Kesir): Kesir -> yok
mutlakDeğer(x: Sayı): Sayı -> yok
mutlakDeğer(x: Sayı): Sayı -> yok
mutlakDeğer(x: UfakKesir): UfakKesir -> yok
mutlakDeğer(x: UfakKesir): UfakKesir -> yok
mutlakDeğer(x: Uzun): Uzun -> yok
mutlakDeğer(x: Uzun): Uzun -> yok
müzikMp3DöngüsünüKapat: Birim -> yok
müzikMp3DöngüsünüKapat: Birim -> yok
müzikMp3üKapat: Birim -> yok
müzikMp3üKapat: Birim -> yok
müzikMp3üÇal(mp3dosyası: Yazı): Birim -> yok
müzikMp3üÇal(mp3dosyası: Yazı): Birim -> yok
müzikMp3üÇalDöngülü(mp3dosyası: Yazı): Birim -> yok
müzikMp3üÇalDöngülü(mp3dosyası: Yazı): Birim -> yok
müzikMp3üÇalıyorMu: İkil -> yok
müzikMp3üÇalıyorMu: İkil -> yok
müzikÇalıyorMu: İkil -> yok
müzikÇalıyorMu: İkil -> yok
müzikİndir(httpAdresi: Yazı): Birim -> yok
müzikİndir(httpAdresi: Yazı): Birim -> yok
müziğiDurdur: Birim -> yok
müziğiDurdur: Birim -> yok
müziğiKapat: Birim -> yok
müziğiKapat: Birim -> yok
native: scala -> yok
native: scala -> yok
ne(x$1: AnyRef): İkil -> yok
ne(x$1: AnyRef): İkil -> yok
nesne -> yok
nesne -> yok
net: <root> -> yok
net: <root> -> yok
new -> yok
new -> yok
newMp3Player: net.kogics.kojo.music.KMp3 -> yok
newMp3Player: net.kogics.kojo.music.KMp3 -> yok
newTurtle -> yok
newTurtle -> yok
newTurtle(x: Kesir, y: Kesir, costume: Yazı): net.kogics.kojo.core.Turtle -> yok
newTurtle(x: Kesir, y: Kesir, costume: Yazı): net.kogics.kojo.core.Turtle -> yok
newTurtle: net.kogics.kojo.core.Turtle -> yok
newTurtle: net.kogics.kojo.core.Turtle -> yok
nextCostume -> yok
nextCostume -> yok
noColor: Renk -> yok
noColor: Renk -> yok
noPen: net.kogics.kojo.picture.PreDrawTransformc -> yok
noPen: net.kogics.kojo.picture.PreDrawTransformc -> yok
noinline: scala -> yok
noinline: scala -> yok
noise -> yok
noise -> yok
noise: (Sayı, Kesir) => net.kogics.kojo.picture.Noisec -> yok
noise: (Sayı, Kesir) => net.kogics.kojo.picture.Noisec -> yok
nokta(çap: Sayı): Birim -> yok
nokta(çap: Sayı): Birim -> yok
noktaIşık: (Kesir, Kesir, Kesir, Kesir, Kesir) => res.NoktaIşıkBD -> yok
noktaIşık: (Kesir, Kesir, Kesir, Kesir, Kesir) => res.NoktaIşıkBD -> yok
noktaSayısı: net.kogics.kojo.core.Pixel.tür -> yok
noktaSayısı: net.kogics.kojo.core.Pixel.tür -> yok
noktayaDön -> yok
noktayaDön -> yok
noktayaGit(n: Nokta): Birim -> yok
noktayaGit(n: Nokta): Birim -> yok
noktayaGit(x: Kesir, y: Kesir): Birim -> yok
noktayaGit(x: Kesir, y: Kesir): Birim -> yok
notaÇal(frekans: Sayı, süreMiliSaniye: Sayı, ses: Sayı): Birim -> yok
notaÇal(frekans: Sayı, süreMiliSaniye: Sayı, ses: Sayı): Birim -> yok
notaÇalgısınıKur(çalgı: Sayı): Birim -> yok
notaÇalgısınıKur(çalgı: Sayı): Birim -> yok
notify(): Birim -> yok
notify(): Birim -> yok
notifyAll(): Birim -> yok
notifyAll(): Birim -> yok
nt(t: net.kogics.kojo.core.Turtle): net.kogics.kojo.turtle.LoTurtle -> yok
nt(t: net.kogics.kojo.core.Turtle): net.kogics.kojo.turtle.LoTurtle -> yok
nt(x: Kesir, y: Kesir): net.kogics.kojo.turtle.LoTurtle -> yok
nt(x: Kesir, y: Kesir): net.kogics.kojo.turtle.LoTurtle -> yok
nt: net.kogics.kojo.turtle.LoTurtle -> yok
nt: net.kogics.kojo.turtle.LoTurtle -> yok
object -> yok
object -> yok
ofBirim: DizikDizi -> yok
ofBirim: DizikDizi -> yok
ofByte: DizikDizi -> yok
ofByte: DizikDizi -> yok
ofFloat: DizikDizi -> yok
ofFloat: DizikDizi -> yok
ofHarf: DizikDizi -> yok
ofHarf: DizikDizi -> yok
ofKesir: DizikDizi -> yok
ofKesir: DizikDizi -> yok
ofLong: DizikDizi -> yok
ofLong: DizikDizi -> yok
ofRef: DizikDizi -> yok
ofRef: DizikDizi -> yok
ofSayı: DizikDizi -> yok
ofSayı: DizikDizi -> yok
ofShort: DizikDizi -> yok
ofShort: DizikDizi -> yok
offset -> yok
offset -> yok
ofİkil: DizikDizi -> yok
ofİkil: DizikDizi -> yok
onAnimationStart(fn: => Birim): Birim -> yok
onAnimationStart(fn: => Birim): Birim -> yok
onAnimationStop(fn: => Birim): Birim -> yok
onAnimationStop(fn: => Birim): Birim -> yok
onClear -> yok
onClear -> yok
onKeyPress(fn: Sayı => Birim): Birim -> yok
onKeyPress(fn: Sayı => Birim): Birim -> yok
onKeyRelease(fn: Sayı => Birim): Birim -> yok
onKeyRelease(fn: Sayı => Birim): Birim -> yok
onMouseClick(fn: (Kesir, Kesir) => Birim): Birim -> yok
onMouseClick(fn: (Kesir, Kesir) => Birim): Birim -> yok
onMouseDrag(fn: (Kesir, Kesir) => Birim): Birim -> yok
onMouseDrag(fn: (Kesir, Kesir) => Birim): Birim -> yok
onMouseMove(fn: (Kesir, Kesir) => Birim): Birim -> yok
onMouseMove(fn: (Kesir, Kesir) => Birim): Birim -> yok
onRunDone(): Birim -> yok
onRunDone(): Birim -> yok
onRunStart(): Birim -> yok
onRunStart(): Birim -> yok
onlukTabandaLogu(x: Kesir): Kesir -> yok
onlukTabandaLogu(x: Kesir): Kesir -> yok
opac -> yok
opac -> yok
optManifest: OptManifest[T] -> yok
optManifest: OptManifest[T] -> yok
orange: Renk -> yok
orange: Renk -> yok
org: <root> -> yok
org: <root> -> yok
originBottomLeft(): Birim -> yok
originBottomLeft(): Birim -> yok
originTopLeft(): Birim -> yok
originTopLeft(): Birim -> yok
orta: net.kogics.kojo.core.Medium.tür -> yok
orta: net.kogics.kojo.core.Medium.tür -> yok
ortalama(sayılar: Dizik[Kesir]): Kesir -> yok
ortalama(sayılar: Dizik[Kesir]): Kesir -> yok
override -> yok
override -> yok
oynat(canlandırma: Canlandırma): Birim -> yok
oynat(canlandırma: Canlandırma): Birim -> yok
oyunSüresiniGeriyeSayarakGöster(süreSaniyeOlarak: Sayı, mesaj: Yazı, renk: Renk, yazıBoyu: Sayı, kx: Kesir, ky: Kesir): Birim -> yok
oyunSüresiniGeriyeSayarakGöster(süreSaniyeOlarak: Sayı, mesaj: Yazı, renk: Renk, yazıBoyu: Sayı, kx: Kesir, ky: Kesir): Birim -> yok
oyunSüresiniGöster(süreSaniyeOlarak: Sayı, mesaj: Yazı, renk: Renk, yazıBoyu: Sayı, kx: Kesir, ky: Kesir): Birim -> yok
oyunSüresiniGöster(süreSaniyeOlarak: Sayı, mesaj: Yazı, renk: Renk, yazıBoyu: Sayı, kx: Kesir, ky: Kesir): Birim -> yok
p -> yok
p -> yok
p2rp(path: java.awt.geom.GeneralPath): net.kogics.kojo.core.Rich2DPath -> yok
p2rp(path: java.awt.geom.GeneralPath): net.kogics.kojo.core.Rich2DPath -> yok
package -> yok
package -> yok
page -> yok
page -> yok
para -> yok
para -> yok
parlaklık: Kesir => res.ParlaklıkBD -> yok
parlaklık: Kesir => res.ParlaklıkBD -> yok
pause -> yok
pause -> yok
pause(seconds: Kesir): Birim -> yok
pause(seconds: Kesir): Birim -> yok
pauseMillis(milliSeconds: Long): Birim -> yok
pauseMillis(milliSeconds: Long): Birim -> yok
pembe: Renk -> yok
pembe: Renk -> yok
penColor -> yok
penColor -> yok
penDown -> yok
penDown -> yok
penThickness -> yok
penThickness -> yok
penThickness: Kesir => net.kogics.kojo.picture.StrokeWidthc -> yok
penThickness: Kesir => net.kogics.kojo.picture.StrokeWidthc -> yok
penUp -> yok
penUp -> yok
penWidth -> yok
penWidth -> yok
perimeter -> yok
perimeter -> yok
perlin2: net.kogics.kojo.util.PerlinNoiseImproved -> yok
perlin2: net.kogics.kojo.util.PerlinNoiseImproved -> yok
perlin: net.kogics.kojo.util.PerlinNoiseProcessing -> yok
perlin: net.kogics.kojo.util.PerlinNoiseProcessing -> yok
piSayısı: Kesir -> yok
piSayısı: Kesir -> yok
picBatch: net.kogics.kojo.picture.BatchPics.tür -> yok
picBatch: net.kogics.kojo.picture.BatchPics.tür -> yok
picCol -> yok
picCol -> yok
picCol2: net.kogics.kojo.picture.VPics2.tür -> yok
picCol2: net.kogics.kojo.picture.VPics2.tür -> yok
picColCentered -> yok
picColCentered -> yok
picColCentered: net.kogics.kojo.picture.VPics2.tür -> yok
picColCentered: net.kogics.kojo.picture.VPics2.tür -> yok
picRow -> yok
picRow -> yok
picRow2: net.kogics.kojo.picture.HPics2.tür -> yok
picRow2: net.kogics.kojo.picture.HPics2.tür -> yok
picRowCentered -> yok
picRowCentered -> yok
picRowCentered: net.kogics.kojo.picture.HPics2.tür -> yok
picRowCentered: net.kogics.kojo.picture.HPics2.tür -> yok
picStack -> yok
picStack -> yok
picStack2: net.kogics.kojo.picture.GPics2.tür -> yok
picStack2: net.kogics.kojo.picture.GPics2.tür -> yok
picStackCentered -> yok
picStackCentered -> yok
picStackCentered: net.kogics.kojo.picture.GPics2.tür -> yok
picStackCentered: net.kogics.kojo.picture.GPics2.tür -> yok
pict -> yok
pict -> yok
pictureSketch(sketch: AnyRef{tanım setup(cd: Builtins.bu.PictureDraw): Birim; tanım drawLoop(cd: Builtins.bu.PictureDraw): Birim}): Birim -> yok
pictureSketch(sketch: AnyRef{tanım setup(cd: Builtins.bu.PictureDraw): Birim; tanım drawLoop(cd: Builtins.bu.PictureDraw): Birim}): Birim -> yok
pink: Renk -> yok
pink: Renk -> yok
playMp3 -> yok
playMp3 -> yok
playMp3Loop -> yok
playMp3Loop -> yok
playMp3Sound -> yok
playMp3Sound -> yok
playMp3Sound(mp3File: Yazı): Birim -> yok
playMp3Sound(mp3File: Yazı): Birim -> yok
playMusic -> yok
playMusic -> yok
playMusicLoop -> yok
playMusicLoop -> yok
playMusicUntilDone -> yok
playMusicUntilDone -> yok
playNote(pitch: Sayı, durationMillis: Sayı, volume: Sayı): Birim -> yok
playNote(pitch: Sayı, durationMillis: Sayı, volume: Sayı): Birim -> yok
playSound -> yok
playSound -> yok
playSound(voice: net.kogics.kojo.core.Voice): Birim -> yok
playSound(voice: net.kogics.kojo.core.Voice): Birim -> yok
pm: Sarıcı0.builtins.PictureMaker.tür -> yok
pm: Sarıcı0.builtins.PictureMaker.tür -> yok
position -> yok
position -> yok
postDrawTransform(fn: Builtins.bu.Picture => Birim): net.kogics.kojo.picture.PostDrawTransformc -> yok
postDrawTransform(fn: Builtins.bu.Picture => Birim): net.kogics.kojo.picture.PostDrawTransformc -> yok
pre -> yok
pre -> yok
preDrawTransform(fn: Builtins.bu.Picture => Birim): net.kogics.kojo.picture.PreDrawTransformc -> yok
preDrawTransform(fn: Builtins.bu.Picture => Birim): net.kogics.kojo.picture.PreDrawTransformc -> yok
preloadImage(file: Yazı): Birim -> yok
preloadImage(file: Yazı): Birim -> yok
preloadMp3(mp3File: Yazı): Birim -> yok
preloadMp3(mp3File: Yazı): Birim -> yok
pressedKeys: scala.collection.Set[Sayı] -> yok
pressedKeys: scala.collection.Set[Sayı] -> yok
print -> yok
print -> yok
printf(text: Yazı, xs: Any*): Birim -> yok
printf(text: Yazı, xs: Any*): Birim -> yok
println -> yok
println -> yok
private -> yok
private -> yok
processing: <root> -> yok
processing: <root> -> yok
project: <root> -> yok
project: <root> -> yok
protected -> yok
protected -> yok
purple: Renk -> yok
purple: Renk -> yok
quadraticVertex(cx: Kesir, cy: Kesir, x2: Kesir, y2: Kesir): Birim -> yok
quadraticVertex(cx: Kesir, cy: Kesir, x2: Kesir, y2: Kesir): Birim -> yok
radyana(açı: Kesir): Kesir -> yok
radyana(açı: Kesir): Kesir -> yok
random -> yok
random -> yok
randomColor: Renk -> yok
randomColor: Renk -> yok
randomFrom -> yok
randomFrom -> yok
randomKesir -> yok
randomKesir -> yok
randomLong: Long -> yok
randomLong: Long -> yok
randomNormalKesir(mean: Kesir, stdDev: Kesir): Kesir -> yok
randomNormalKesir(mean: Kesir, stdDev: Kesir): Kesir -> yok
randomNormalKesir: Kesir -> yok
randomNormalKesir: Kesir -> yok
randomSayı: Sayı -> yok
randomSayı: Sayı -> yok
randomTransparentColor: Renk -> yok
randomTransparentColor: Renk -> yok
randomİkil -> yok
randomİkil -> yok
rangeTill(start: Kesir, end: Kesir, step: Kesir): NumericRange.Exclusive[BigDecimal] -> yok
rangeTill(start: Kesir, end: Kesir, step: Kesir): NumericRange.Exclusive[BigDecimal] -> yok
rangeTill(start: Sayı, end: Sayı, step: Sayı): Range -> yok
rangeTill(start: Sayı, end: Sayı, step: Sayı): Range -> yok
rangeTo(start: Kesir, end: Kesir, step: Kesir): NumericRange.Inclusive[BigDecimal] -> yok
rangeTo(start: Kesir, end: Kesir, step: Kesir): NumericRange.Inclusive[BigDecimal] -> yok
rangeTo(start: Sayı, end: Sayı, step: Sayı): Range -> yok
rangeTo(start: Sayı, end: Sayı, step: Sayı): Range -> yok
rasgele: Kesir -> yok
rasgele: Kesir -> yok
rastgele(altSınır: Sayı, üstSınır: Sayı): Sayı -> yok
rastgele(altSınır: Sayı, üstSınır: Sayı): Sayı -> yok
rastgeleDiziden(dizi: Dizi[T]): T -> yok
rastgeleDiziden(dizi: Dizi[T]): T -> yok
rastgeleDiziden(dizi: Dizi[T], ağırlıklar: Dizi[Kesir]): T -> yok
rastgeleDiziden(dizi: Dizi[T], ağırlıklar: Dizi[Kesir]): T -> yok
rastgeleDoğalKesir: Kesir -> yok
rastgeleDoğalKesir: Kesir -> yok
rastgeleKarıştır(xLer: YinelenebilirBirKere[T]): C -> yok
rastgeleKarıştır(xLer: YinelenebilirBirKere[T]): C -> yok
rastgeleKesir(altSınır: Kesir, üstSınır: Kesir): Kesir -> yok
rastgeleKesir(altSınır: Kesir, üstSınır: Kesir): Kesir -> yok
rastgeleNormalKesir: Kesir -> yok
rastgeleNormalKesir: Kesir -> yok
rastgeleRenk: Renk -> yok
rastgeleRenk: Renk -> yok
rastgeleSayı: Sayı -> yok
rastgeleSayı: Sayı -> yok
rastgeleSeçim: İkil -> yok
rastgeleSeçim: İkil -> yok
rastgeleTohumunuKur(tohum: Uzun): Birim -> yok
rastgeleTohumunuKur(tohum: Uzun): Birim -> yok
rastgeleUzun: Long -> yok
rastgeleUzun: Long -> yok
rastgeleÇanEğrisinden: Kesir -> yok
rastgeleÇanEğrisinden: Kesir -> yok
rastgeleİkil: İkil -> yok
rastgeleİkil: İkil -> yok
rastgeleŞeffafRenk: Renk -> yok
rastgeleŞeffafRenk: Renk -> yok
rb: net.kogics.kojo.lite.Builtins -> yok
rb: net.kogics.kojo.lite.Builtins -> yok
rc2c(rc: net.kogics.kojo.doodle.Color): Sarıcı0.builtins.Color -> yok
rc2c(rc: net.kogics.kojo.doodle.Color): Sarıcı0.builtins.Color -> yok
rcDizi2cDizi(rcs: scala.collection.Dizi[net.kogics.kojo.doodle.Color]): scala.collection.Dizi[Sarıcı0.builtins.Color] -> yok
rcDizi2cDizi(rcs: scala.collection.Dizi[net.kogics.kojo.doodle.Color]): scala.collection.Dizi[Sarıcı0.builtins.Color] -> yok
readKesir -> yok
readKesir -> yok
readSayı -> yok
readSayı -> yok
readln -> yok
readln -> yok
red: Renk -> yok
red: Renk -> yok
ref: scala -> yok
ref: scala -> yok
refDizikOps(xs: Dizik[T]): scala.collection.DizikOps[T] -> yok
refDizikOps(xs: Dizik[T]): scala.collection.DizikOps[T] -> yok
reflect -> yok
reflect -> yok
reflect: scala -> yok
reflect: scala -> yok
reimportBuiltins(): Birim -> yok
reimportBuiltins(): Birim -> yok
reimportDefaults(): Birim -> yok
reimportDefaults(): Birim -> yok
renkler: net.kogics.kojo.doodle.Color.tür -> yok
renkler: net.kogics.kojo.doodle.Color.tür -> yok
renksiz: Renk -> yok
renksiz: Renk -> yok
repeat -> yok
repeat -> yok
repeatFor -> yok
repeatFor -> yok
repeatUntil -> yok
repeatUntil -> yok
repeatWhile -> yok
repeatWhile -> yok
repeati -> yok
repeati -> yok
require(requirement: İkil): Birim -> yok
require(requirement: İkil): Birim -> yok
require(requirement: İkil, message: => Any): Birim -> yok
require(requirement: İkil, message: => Any): Birim -> yok
resetNotePlayer(): Birim -> yok
resetNotePlayer(): Birim -> yok
resetPanAndZoom(): Birim -> yok
resetPanAndZoom(): Birim -> yok
resetSayıerpreter(): Birim -> yok
resetSayıerpreter(): Birim -> yok
resimİndir(httpAdresi: Yazı): Birim -> yok
resimİndir(httpAdresi: Yazı): Birim -> yok
resolvedPath(fname: Yazı): Yazı -> yok
resolvedPath(fname: Yazı): Yazı -> yok
restorePosHe -> yok
restorePosHe -> yok
restoreStyle -> yok
restoreStyle -> yok
retainSingleLineCode -> yok
retainSingleLineCode -> yok
return -> yok
return -> yok
richBuiltins: net.kogics.kojo.lite.Builtins -> yok
richBuiltins: net.kogics.kojo.lite.Builtins -> yok
right -> yok
right -> yok
robosim: <root> -> yok
robosim: <root> -> yok
rot -> yok
rot -> yok
rotp -> yok
rotp -> yok
rotp: (Kesir, Kesir, Kesir) => net.kogics.kojo.picture.Rotpc -> yok
rotp: (Kesir, Kesir, Kesir) => net.kogics.kojo.picture.Rotpc -> yok
round -> yok
round -> yok
row -> yok
row -> yok
row: (net.kogics.kojo.core.Picture, Sayı) => net.kogics.kojo.picture.HPics -> yok
row: (net.kogics.kojo.core.Picture, Sayı) => net.kogics.kojo.picture.HPics -> yok
rpt(n: Sayı)(code: => net.kogics.kojo.turtle.LoTurtle): net.kogics.kojo.turtle.LoTurtle -> yok
rpt(n: Sayı)(code: => net.kogics.kojo.turtle.LoTurtle): net.kogics.kojo.turtle.LoTurtle -> yok
rtnp -> yok
rtnp -> yok
rtnp_= -> yok
rtnp_= -> yok
run(anim: Builtins.bu.Animation): Birim -> yok
run(anim: Builtins.bu.Animation): Birim -> yok
runCommandQuery(cmdQ: Builtins.bu.CmdQ[M]): Birim -> yok
runCommandQuery(cmdQ: Builtins.bu.CmdQ[M]): Birim -> yok
runGame(init: S, update: (S, M) => S, view: S => Builtins.bu.Picture, subscriptions: S => Dizi[Builtins.bu.Sub[M]], refreshRate: Long): Birim -> yok
runGame(init: S, update: (S, M) => S, view: S => Builtins.bu.Picture, subscriptions: S => Dizi[Builtins.bu.Sub[M]], refreshRate: Long): Birim -> yok
runInBackground -> yok
runInBackground -> yok
runInDrawingThread(code: => Birim): Birim -> yok
runInDrawingThread(code: => Birim): Birim -> yok
runInGuiThread(code: => Birim): Birim -> yok
runInGuiThread(code: => Birim): Birim -> yok
runtime: scala -> yok
runtime: scala -> yok
rythm -> yok
rythm -> yok
sRandom: scala.util.Random -> yok
sRandom: scala.util.Random -> yok
sahneIşığı: (Kesir, Kesir, Kesir, Kesir, Kesir) => res.SahneIşığıBD -> yok
sahneIşığı: (Kesir, Kesir, Kesir, Kesir, Kesir) => res.SahneIşığıBD -> yok
sahneKenarındanYansıtma: (Resim, Yöney2B) => Yöney2B -> yok
sahneKenarındanYansıtma: (Resim, Yöney2B) => Yöney2B -> yok
samples: <root> -> yok
samples: <root> -> yok
santim: net.kogics.kojo.core.Cm.tür -> yok
santim: net.kogics.kojo.core.Cm.tür -> yok
sarı: Renk -> yok
sarı: Renk -> yok
sat -> yok
sat -> yok
satMod -> yok
satMod -> yok
satıroku(istem: Yazı): Yazı -> yok
satıroku(istem: Yazı): Yazı -> yok
satıryaz: Birim -> yok
satıryaz: Birim -> yok
savePosHe -> yok
savePosHe -> yok
saveStyle -> yok
saveStyle -> yok
saydamlık: Kesir => res.SaydamlıkBD -> yok
saydamlık: Kesir => res.SaydamlıkBD -> yok
sayıOku(istem: Yazı): Sayı -> yok
sayıOku(istem: Yazı): Sayı -> yok
sayıya(x: Number): Sayı -> yok
sayıya(x: Number): Sayı -> yok
sayıyaKadarSay(n: İriSayı, sessiz: İkil): Kesir -> yok
sayıyaKadarSay(n: İriSayı, sessiz: İkil): Kesir -> yok
sağ -> yok
sağ -> yok
scala-tr: <root> -> yok
scala-tr: <root> -> yok
scala: <root> -> yok
scala: <root> -> yok
scalariform: <root> -> yok
scalariform: <root> -> yok
scale -> yok
scale -> yok
scaleCostume -> yok
scaleCostume -> yok
scalep -> yok
scalep -> yok
scalep(f: Kesir, x: Kesir, y: Kesir): net.kogics.kojo.picture.PreDrawTransformc -> yok
scalep(f: Kesir, x: Kesir, y: Kesir): net.kogics.kojo.picture.PreDrawTransformc -> yok
schedule -> yok
schedule -> yok
scheduleN(n: Sayı, seconds: Kesir)(code: => Birim): javax.swing.Timer -> yok
scheduleN(n: Sayı, seconds: Kesir)(code: => Birim): javax.swing.Timer -> yok
screenDPI: Sayı -> yok
screenDPI: Sayı -> yok
screenSize: java.awt.Dimension -> yok
screenSize: java.awt.Dimension -> yok
scroll -> yok
scroll -> yok
sealed -> yok
sealed -> yok
sesMp3üÇal(mp3dosyası: Yazı): Birim -> yok
sesMp3üÇal(mp3dosyası: Yazı): Birim -> yok
setAnimationDelay -> yok
setAnimationDelay -> yok
setAstStopPhase -> yok
setAstStopPhase -> yok
setAstStopPhase(phase: Yazı): Birim -> yok
setAstStopPhase(phase: Yazı): Birim -> yok
setBackground -> yok
setBackground -> yok
setBackgroundH -> yok
setBackgroundH -> yok
setBackgroundV -> yok
setBackgroundV -> yok
setBirimLength -> yok
setBirimLength -> yok
setBirimLength(ul: net.kogics.kojo.core.BirimLen): Birim -> yok
setBirimLength(ul: net.kogics.kojo.core.BirimLen): Birim -> yok
setCostume -> yok
setCostume -> yok
setCostumeImage -> yok
setCostumeImage -> yok
setCostumeImages -> yok
setCostumeImages -> yok
setCostumes -> yok
setCostumes -> yok
setDrawingCanvasAspectRatio(r: Kesir): Birim -> yok
setDrawingCanvasAspectRatio(r: Kesir): Birim -> yok
setDrawingCanvasSize(width: Sayı, height: Sayı): Birim -> yok
setDrawingCanvasSize(width: Sayı, height: Sayı): Birim -> yok
setDrawingCanvasToA0(): Birim -> yok
setDrawingCanvasToA0(): Birim -> yok
setDrawingCanvasToA0Landscape(): Birim -> yok
setDrawingCanvasToA0Landscape(): Birim -> yok
setDrawingCanvasToA1(): Birim -> yok
setDrawingCanvasToA1(): Birim -> yok
setDrawingCanvasToA1Landscape(): Birim -> yok
setDrawingCanvasToA1Landscape(): Birim -> yok
setDrawingCanvasToA2(): Birim -> yok
setDrawingCanvasToA2(): Birim -> yok
setDrawingCanvasToA2Landscape(): Birim -> yok
setDrawingCanvasToA2Landscape(): Birim -> yok
setDrawingCanvasToA3(): Birim -> yok
setDrawingCanvasToA3(): Birim -> yok
setDrawingCanvasToA3Landscape(): Birim -> yok
setDrawingCanvasToA3Landscape(): Birim -> yok
setDrawingCanvasToA4(): Birim -> yok
setDrawingCanvasToA4(): Birim -> yok
setDrawingCanvasToA4Landscape(): Birim -> yok
setDrawingCanvasToA4Landscape(): Birim -> yok
setEditorFont(name: Yazı): Birim -> yok
setEditorFont(name: Yazı): Birim -> yok
setEditorTabSize -> yok
setEditorTabSize -> yok
setEditorTabSize(ts: Sayı): Birim -> yok
setEditorTabSize(ts: Sayı): Birim -> yok
setFillColor -> yok
setFillColor -> yok
setHeading -> yok
setHeading -> yok
setImagePixel -> yok
setImagePixel -> yok
setNoPen(): Birim -> yok
setNoPen(): Birim -> yok
setNoteInstrument(instrumentCode: Sayı): Birim -> yok
setNoteInstrument(instrumentCode: Sayı): Birim -> yok
setOutputBackground -> yok
setOutputBackground -> yok
setOutputBackground(color: Builtins.bu.Color): Birim -> yok
setOutputBackground(color: Builtins.bu.Color): Birim -> yok
setOutputTextColor -> yok
setOutputTextColor -> yok
setOutputTextColor(color: Builtins.bu.Color): Birim -> yok
setOutputTextColor(color: Builtins.bu.Color): Birim -> yok
setOutputTextFontSize -> yok
setOutputTextFontSize -> yok
setOutputTextFontSize(size: Sayı): Birim -> yok
setOutputTextFontSize(size: Sayı): Birim -> yok
setPenCapJoin(cap: Sayı, join: Sayı): Birim -> yok
setPenCapJoin(cap: Sayı, join: Sayı): Birim -> yok
setPenCapJoin(capJoin: (Sayı, Sayı)): Birim -> yok
setPenCapJoin(capJoin: (Sayı, Sayı)): Birim -> yok
setPenColor -> yok
setPenColor -> yok
setPenFont -> yok
setPenFont -> yok
setPenFontSize -> yok
setPenFontSize -> yok
setPenThickness -> yok
setPenThickness -> yok
setPosition -> yok
setPosition -> yok
setRandomSeed(seed: Long): Birim -> yok
setRandomSeed(seed: Long): Birim -> yok
setRefreshRate -> yok
setRefreshRate -> yok
setRefreshRate(fps: Sayı): Birim -> yok
setRefreshRate(fps: Sayı): Birim -> yok
setScreenDPI -> yok
setScreenDPI -> yok
setScreenDPI(dpi: Sayı): Birim -> yok
setScreenDPI(dpi: Sayı): Birim -> yok
setSlowness -> yok
setSlowness -> yok
setSpeed -> yok
setSpeed -> yok
setup(fn: => Birim): Birim -> yok
setup(fn: => Birim): Birim -> yok
shapeDone(path: java.awt.geom.GeneralPath): Birim -> yok
shapeDone(path: java.awt.geom.GeneralPath): Birim -> yok
shapePath: java.awt.geom.GeneralPath -> yok
shapePath: java.awt.geom.GeneralPath -> yok
shear(shearX: Kesir, shearY: Kesir): net.kogics.kojo.picture.PreDrawTransformc -> yok
shear(shearX: Kesir, shearY: Kesir): net.kogics.kojo.picture.PreDrawTransformc -> yok
short2Short(x: Short): Short -> yok
short2Short(x: Short): Short -> yok
shortDizikOps(xs: Dizik[Short]): scala.collection.DizikOps[Short] -> yok
shortDizikOps(xs: Dizik[Short]): scala.collection.DizikOps[Short] -> yok
shortSarıcı(x: Short): scala.runtime.RichShort -> yok
shortSarıcı(x: Short): scala.runtime.RichShort -> yok
show -> yok
show -> yok
show(pictures: Builtins.bu.Picture*): Birim -> yok
show(pictures: Builtins.bu.Picture*): Birim -> yok
showAxes(): Birim -> yok
showAxes(): Birim -> yok
showFps(color: Builtins.bu.Color, fontSize: Sayı): Birim -> yok
showFps(color: Builtins.bu.Color, fontSize: Sayı): Birim -> yok
showGameTime(limitSecs: Sayı, endMsg: => Yazı, color: Builtins.bu.Color, fontSize: Sayı, dx: Kesir, dy: Kesir, countDown: İkil): Birim -> yok
showGameTime(limitSecs: Sayı, endMsg: => Yazı, color: Builtins.bu.Color, fontSize: Sayı, dx: Kesir, dy: Kesir, countDown: İkil): Birim -> yok
showGameTimeCountdown(limitSecs: Sayı, endMsg: => Yazı, color: Builtins.bu.Color, fontSize: Sayı, dx: Kesir, dy: Kesir): Birim -> yok
showGameTimeCountdown(limitSecs: Sayı, endMsg: => Yazı, color: Builtins.bu.Color, fontSize: Sayı, dx: Kesir, dy: Kesir): Birim -> yok
showGrid(): Birim -> yok
showGrid(): Birim -> yok
showProtractor(x: Kesir, y: Kesir): net.kogics.kojo.core.Picture -> yok
showProtractor(x: Kesir, y: Kesir): net.kogics.kojo.core.Picture -> yok
showProtractor: net.kogics.kojo.core.Picture -> yok
showProtractor: net.kogics.kojo.core.Picture -> yok
showScale(x: Kesir, y: Kesir): net.kogics.kojo.core.Picture -> yok
showScale(x: Kesir, y: Kesir): net.kogics.kojo.core.Picture -> yok
showScale: net.kogics.kojo.core.Picture -> yok
showScale: net.kogics.kojo.core.Picture -> yok
showScriptInOutput -> yok
showScriptInOutput -> yok
showVerboseOutput -> yok
showVerboseOutput -> yok
shuffle(seq: scala.collection.Dizi[T]): scala.collection.Dizi[T] -> yok
shuffle(seq: scala.collection.Dizi[T]): scala.collection.Dizi[T] -> yok
sil -> yok
sil -> yok
silVeSakla: Birim -> yok
silVeSakla: Birim -> yok
silVeÇizimBirienUfakiKur(ub: UzunlukBirimi): Birim -> yok
silVeÇizimBirienUfakiKur(ub: UzunlukBirimi): Birim -> yok
silipSakla: Birim -> yok
silipSakla: Birim -> yok
sinüs(açı: Kesir): Kesir -> yok
sinüs(açı: Kesir): Kesir -> yok
sinüsünAçısı(x: Kesir): Kesir -> yok
sinüsünAçısı(x: Kesir): Kesir -> yok
siyah: Renk -> yok
siyah: Renk -> yok
size(width: Sayı, height: Sayı): Birim -> yok
size(width: Sayı, height: Sayı): Birim -> yok
sketchpic -> yok
sketchpic -> yok
slow: net.kogics.kojo.core.Slow.tür -> yok
slow: net.kogics.kojo.core.Slow.tür -> yok
sol -> yok
sol -> yok
soluk: Sayı => res.SolukBD -> yok
soluk: Sayı => res.SolukBD -> yok
son -> yok
son -> yok
sonunda -> yok
sonunda -> yok
soyut -> yok
soyut -> yok
span -> yok
span -> yok
specialized: scala -> yok
specialized: scala -> yok
spin -> yok
spin -> yok
spin: Sayı => net.kogics.kojo.picture.Spinc -> yok
spin: Sayı => net.kogics.kojo.picture.Spinc -> yok
src: <root> -> yok
src: <root> -> yok
stAddButton -> yok
stAddButton -> yok
stAddField -> yok
stAddField -> yok
stAddLinkEnterHandler -> yok
stAddLinkEnterHandler -> yok
stAddLinkEnterHandler(name: Yazı, story: Builtins.bu.Story): Birim -> yok
stAddLinkEnterHandler(name: Yazı, story: Builtins.bu.Story): Birim -> yok
stAddLinkExitHandler -> yok
stAddLinkExitHandler -> yok
stAddLinkExitHandler(name: Yazı, story: Builtins.bu.Story): Birim -> yok
stAddLinkExitHandler(name: Yazı, story: Builtins.bu.Story): Birim -> yok
stAddLinkHandler -> yok
stAddLinkHandler -> yok
stAddLinkHandler(name: Yazı, story: Builtins.bu.Story): Birim -> yok
stAddLinkHandler(name: Yazı, story: Builtins.bu.Story): Birim -> yok
stAddUiBigComponent(c: javax.swing.JComponent): Birim -> yok
stAddUiBigComponent(c: javax.swing.JComponent): Birim -> yok
stAddUiComponent(c: javax.swing.JComponent): Birim -> yok
stAddUiComponent(c: javax.swing.JComponent): Birim -> yok
stCanvasLocation: java.awt.Nokta -> yok
stCanvasLocation: java.awt.Nokta -> yok
stClear -> yok
stClear -> yok
stClickRunAsWorksheetButton(): Birim -> yok
stClickRunAsWorksheetButton(): Birim -> yok
stClickRunButton -> yok
stClickRunButton -> yok
stClickRunSayıerpreterButton(): Birim -> yok
stClickRunSayıerpreterButton(): Birim -> yok
stCompileRunCode(code: Yazı): Birim -> yok
stCompileRunCode(code: Yazı): Birim -> yok
stDisableNextButton(): Birim -> yok
stDisableNextButton(): Birim -> yok
stEnableNextButton(): Birim -> yok
stEnableNextButton(): Birim -> yok
stFieldValue -> yok
stFieldValue -> yok
stFormula -> yok
stFormula -> yok
stFrame: javax.swing.JFrame -> yok
stFrame: javax.swing.JFrame -> yok
stGotoUrl(url: Yazı): Birim -> yok
stGotoUrl(url: Yazı): Birim -> yok
stHelpFor(instr: Yazı): Yazı -> yok
stHelpFor(instr: Yazı): Yazı -> yok
stInsertCodeBlock -> yok
stInsertCodeBlock -> yok
stInsertCodeBlock(code: Yazı): Birim -> yok
stInsertCodeBlock(code: Yazı): Birim -> yok
stInsertCodeInline -> yok
stInsertCodeInline -> yok
stInsertCodeInline(code: Yazı): Birim -> yok
stInsertCodeInline(code: Yazı): Birim -> yok
stNext -> yok
stNext -> yok
stOnStoryStop(story: Builtins.bu.Story)(fn: => Birim): Birim -> yok
stOnStoryStop(story: Builtins.bu.Story)(fn: => Birim): Birim -> yok
stPlayMp3 -> yok
stPlayMp3 -> yok
stPlayMp3Loop -> yok
stPlayMp3Loop -> yok
stPlayStory -> yok
stPlayStory -> yok
stRunCode -> yok
stRunCode -> yok
stSetScript -> yok
stSetScript -> yok
stSetStorytellerWidth(width: Sayı): Birim -> yok
stSetStorytellerWidth(width: Sayı): Birim -> yok
stSetUserControlsBg(color: Builtins.bu.Color): Birim -> yok
stSetUserControlsBg(color: Builtins.bu.Color): Birim -> yok
stShowStatusError -> yok
stShowStatusError -> yok
stShowStatusMsg -> yok
stShowStatusMsg -> yok
stage: net.kogics.kojo.core.Picture -> yok
stage: net.kogics.kojo.core.Picture -> yok
stageArea: net.kogics.kojo.core.Picture -> yok
stageArea: net.kogics.kojo.core.Picture -> yok
stageBorder: net.kogics.kojo.core.Picture -> yok
stageBorder: net.kogics.kojo.core.Picture -> yok
stageBot: net.kogics.kojo.core.Picture -> yok
stageBot: net.kogics.kojo.core.Picture -> yok
stageLeft: net.kogics.kojo.core.Picture -> yok
stageLeft: net.kogics.kojo.core.Picture -> yok
stageRight: net.kogics.kojo.core.Picture -> yok
stageRight: net.kogics.kojo.core.Picture -> yok
stageTop: net.kogics.kojo.core.Picture -> yok
stageTop: net.kogics.kojo.core.Picture -> yok
stopAnimation(): Birim -> yok
stopAnimation(): Birim -> yok
stopAnimationActivity(a: java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity]): Birim -> yok
stopAnimationActivity(a: java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity]): Birim -> yok
stopAnimations(): Birim -> yok
stopAnimations(): Birim -> yok
stopMp3(): Birim -> yok
stopMp3(): Birim -> yok
stopMp3Loop(): Birim -> yok
stopMp3Loop(): Birim -> yok
stopMusic(): Birim -> yok
stopMusic(): Birim -> yok
stopNotePlayer(): Birim -> yok
stopNotePlayer(): Birim -> yok
strong -> yok
strong -> yok
sty -> yok
sty -> yok
style -> yok
style -> yok
sun: <root> -> yok
sun: <root> -> yok
super -> yok
super -> yok
superFast: net.kogics.kojo.core.SuperFast.tür -> yok
superFast: net.kogics.kojo.core.SuperFast.tür -> yok
swing: scala -> yok
swing: scala -> yok
switchToDefault2Perspective(): Birim -> yok
switchToDefault2Perspective(): Birim -> yok
switchToDefaultPerspective(): Birim -> yok
switchToDefaultPerspective(): Birim -> yok
switchToHistoryBrowsingPerspective(): Birim -> yok
switchToHistoryBrowsingPerspective(): Birim -> yok
switchToOutputStoryViewingPerspective(): Birim -> yok
switchToOutputStoryViewingPerspective(): Birim -> yok
switchToScriptEditingPerspective(): Birim -> yok
switchToScriptEditingPerspective(): Birim -> yok
switchToStoryViewingPerspective(): Birim -> yok
switchToStoryViewingPerspective(): Birim -> yok
switchToWorksheetPerspective(): Birim -> yok
switchToWorksheetPerspective(): Birim -> yok
synchronized(x$1: T0): T0 -> yok
synchronized(x$1: T0): T0 -> yok
sys: scala -> yok
sys: scala -> yok
süreTut(komut: => Birim): Birim -> yok
süreTut(komut: => Birim): Birim -> yok
sınıf -> yok
sınıf -> yok
sınıf -> yok
sınıf -> yok
sırayaSok(kaçSaniyeSonra: Kesir)(komut: => Birim): javax.swing.Timer -> yok
sırayaSok(kaçSaniyeSonra: Kesir)(komut: => Birim): javax.swing.Timer -> yok
sırayaSok(n: Sayı, kaçSaniyeSonra: Kesir)(komut: => Birim): javax.swing.Timer -> yok
sırayaSok(n: Sayı, kaçSaniyeSonra: Kesir)(komut: => Birim): javax.swing.Timer -> yok
tCanvas: net.kogics.kojo.core.SCanvas -> yok
tCanvas: net.kogics.kojo.core.SCanvas -> yok
taban(x: Kesir): Kesir -> yok
taban(x: Kesir): Kesir -> yok
tanjant(açı: Kesir): Kesir -> yok
tanjant(açı: Kesir): Kesir -> yok
tanjantınAçısı(x: Kesir): Kesir -> yok
tanjantınAçısı(x: Kesir): Kesir -> yok
tanım -> yok
tanım -> yok
tanım -> yok
tanım -> yok
tanım_işlev -> yok
tanım_işlev -> yok
tanım_işlev_2_girdili -> yok
tanım_işlev_2_girdili -> yok
tanım_işlev_çıktı_türü_ile -> yok
tanım_işlev_çıktı_türü_ile -> yok
tanım_komut_1_girdili -> yok
tanım_komut_1_girdili -> yok
tanım_komut_2_girdili -> yok
tanım_komut_2_girdili -> yok
tanım_komut_girdisiz -> yok
tanım_komut_girdisiz -> yok
target: <root> -> yok
target: <root> -> yok
tavan(x: Kesir): Kesir -> yok
tavan(x: Kesir): Kesir -> yok
templates: <root> -> yok
templates: <root> -> yok
test -> yok
test -> yok
test(name: Yazı)(fn: => Birim): Birim -> yok
test(name: Yazı)(fn: => Birim): Birim -> yok
testTrKeywords: İkil -> yok
testTrKeywords: İkil -> yok
textExtent -> yok
textExtent -> yok
throw -> yok
throw -> yok
throws: scala -> yok
throws: scala -> yok
timeit(fn: => T): T -> yok
timeit(fn: => T): T -> yok
timeit(msg: Yazı)(fn: => T): T -> yok
timeit(msg: Yazı)(fn: => T): T -> yok
timeline -> yok
timeline -> yok
timer -> yok
timer -> yok
timer(milliSeconds: Long)(code: => Birim): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity] -> yok
timer(milliSeconds: Long)(code: => Birim): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity] -> yok
timerWithState(rate: Long, init: S)(code: S => S): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity] -> yok
timerWithState(rate: Long, init: S)(code: S => S): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity] -> yok
toIhm(handler: Sayı => Birim): net.kogics.kojo.story.HandlerHolder[Sayı] -> yok
toIhm(handler: Sayı => Birim): net.kogics.kojo.story.HandlerHolder[Sayı] -> yok
toShm(handler: Yazı => Birim): net.kogics.kojo.story.HandlerHolder[Yazı] -> yok
toShm(handler: Yazı => Birim): net.kogics.kojo.story.HandlerHolder[Yazı] -> yok
toVhm(handler: () => Birim): net.kogics.kojo.story.HandlerHolder[Birim] -> yok
toVhm(handler: () => Birim): net.kogics.kojo.story.HandlerHolder[Birim] -> yok
toYazı: Yazı -> yok
toYazı: Yazı -> yok
toggleFullScreenCanvas(): Birim -> yok
toggleFullScreenCanvas(): Birim -> yok
toggleFullScreenOutput(): Birim -> yok
toggleFullScreenOutput(): Birim -> yok
ton: Kesir => res.TonBD -> yok
ton: Kesir => res.TonBD -> yok
tools: scala -> yok
tools: scala -> yok
towards -> yok
towards -> yok
trForReverse(a: Canlandırma): trForReverse -> yok
trForReverse(a: Canlandırma): trForReverse -> yok
trForReverse: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
trForReverse: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
trait -> yok
trait -> yok
trans -> yok
trans -> yok
transform(fn: Builtins.bu.Picture => Birim): net.kogics.kojo.picture.PreDrawTransformc -> yok
transform(fn: Builtins.bu.Picture => Birim): net.kogics.kojo.picture.PreDrawTransformc -> yok
transient: scala -> yok
transient: scala -> yok
transition -> yok
transition -> yok
triangulate(points: scala.collection.Dizi[CoreBuiltins.bu.Nokta]): scala.collection.Dizi[io.github.jdiemke.triangulation.Triangle2D] -> yok
triangulate(points: scala.collection.Dizi[CoreBuiltins.bu.Nokta]): scala.collection.Dizi[io.github.jdiemke.triangulation.Triangle2D] -> yok
try -> yok
try -> yok
tt -> yok
tt -> yok
tuple2ToZippedOps(x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1,T2] -> yok
tuple2ToZippedOps(x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1,T2] -> yok
tuple3ToZippedOps(x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1,T2,T3] -> yok
tuple3ToZippedOps(x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1,T2,T3] -> yok
turn -> yok
turn -> yok
turnEast(): Birim -> yok
turnEast(): Birim -> yok
turnNorth(): Birim -> yok
turnNorth(): Birim -> yok
turnSouth(): Birim -> yok
turnSouth(): Birim -> yok
turnWest(): Birim -> yok
turnWest(): Birim -> yok
turtle0: net.kogics.kojo.core.Turtle -> yok
turtle0: net.kogics.kojo.core.Turtle -> yok
turuncu: Renk -> yok
turuncu: Renk -> yok
tuvalAlanı: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
tuvalAlanı: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
tuvalBoyutOranınınKur(oran: Kesir): Birim -> yok
tuvalBoyutOranınınKur(oran: Kesir): Birim -> yok
tuvalBoyutlarınıKur(en: Sayı, boy: Sayı): Birim -> yok
tuvalBoyutlarınıKur(en: Sayı, boy: Sayı): Birim -> yok
tuvaleYaz(t: Her): Birim -> yok
tuvaleYaz(t: Her): Birim -> yok
tuvaliDöndür(açı: Kesir): Birim -> yok
tuvaliDöndür(açı: Kesir): Birim -> yok
tuvaliEtkinleştir(): Birim -> yok
tuvaliEtkinleştir(): Birim -> yok
tuvaliKaydır(x: Kesir, y: Kesir): Birim -> yok
tuvaliKaydır(x: Kesir, y: Kesir): Birim -> yok
tuşaBasılıMı(tuş: Sayı): İkil -> yok
tuşaBasılıMı(tuş: Sayı): İkil -> yok
tuşaBasınca(iş: Sayı => Birim): Birim -> yok
tuşaBasınca(iş: Sayı => Birim): Birim -> yok
tuşlar: KeyCodesInTurkish -> yok
tuşlar: KeyCodesInTurkish -> yok
tuşuBırakınca(iş: Sayı => Birim): Birim -> yok
tuşuBırakınca(iş: Sayı => Birim): Birim -> yok
tümEkran: Birim -> yok
tümEkran: Birim -> yok
tümEkranTuval: Birim -> yok
tümEkranTuval: Birim -> yok
tümEkranÇıktı: Birim -> yok
tümEkranÇıktı: Birim -> yok
tür -> yok
tür -> yok
ul -> yok
ul -> yok
unchecked: scala -> yok
unchecked: scala -> yok
unitDizikOps(xs: Dizik[Birim]): scala.collection.DizikOps[Birim] -> yok
unitDizikOps(xs: Dizik[Birim]): scala.collection.DizikOps[Birim] -> yok
url(url: Yazı): java.net.URL -> yok
url(url: Yazı): java.net.URL -> yok
urlHandler -> yok
urlHandler -> yok
util: scala -> yok
util: scala -> yok
uzaklık(n1: Nokta, n2: Nokta): Kesir -> yok
uzaklık(n1: Nokta, n2: Nokta): Kesir -> yok
uzaklık(x1: Kesir, y1: Kesir, x2: Kesir, y2: Kesir): Kesir -> yok
uzaklık(x1: Kesir, y1: Kesir, x2: Kesir, y2: Kesir): Kesir -> yok
valueOf: T -> yok
valueOf: T -> yok
var -> yok
var -> yok
varMı(o: OptionMethodsInTurkish.bu.Belki[T]): İkil -> yok
varMı(o: OptionMethodsInTurkish.bu.Belki[T]): İkil -> yok
ver -> yok
ver -> yok
verilen -> yok
verilen -> yok
version -> yok
version -> yok
vertex(x: Kesir, y: Kesir): Birim -> yok
vertex(x: Kesir, y: Kesir): Birim -> yok
vertexRt(r: Kesir, theta: Kesir): Birim -> yok
vertexRt(r: Kesir, theta: Kesir): Birim -> yok
viewRotate(a: Kesir): Birim -> yok
viewRotate(a: Kesir): Birim -> yok
viewScale(factor: Kesir): Birim -> yok
viewScale(factor: Kesir): Birim -> yok
viewTranslate(x: Kesir, y: Kesir): Birim -> yok
viewTranslate(x: Kesir, y: Kesir): Birim -> yok
visible -> yok
visible -> yok
volatile: scala -> yok
volatile: scala -> yok
wait(): Birim -> yok
wait(): Birim -> yok
wait(x$1: Long): Birim -> yok
wait(x$1: Long): Birim -> yok
wait(x$1: Long, x$2: Sayı): Birim -> yok
wait(x$1: Long, x$2: Sayı): Birim -> yok
waitFor(): Birim -> yok
waitFor(): Birim -> yok
weave -> yok
weave -> yok
weave: (Kesir, Kesir, Kesir, Kesir) => net.kogics.kojo.picture.Weavec -> yok
weave: (Kesir, Kesir, Kesir, Kesir) => net.kogics.kojo.picture.Weavec -> yok
wh -> yok
wh -> yok
while -> yok
while -> yok
white: Renk -> yok
white: Renk -> yok
wipe -> yok
wipe -> yok
with -> yok
with -> yok
withFillColor(pic: Builtins.bu.Picture, color: Builtins.bu.Color): net.kogics.kojo.core.Picture -> yok
withFillColor(pic: Builtins.bu.Picture, color: Builtins.bu.Color): net.kogics.kojo.core.Picture -> yok
withPenColor(pic: Builtins.bu.Picture, color: Builtins.bu.Color): net.kogics.kojo.core.Picture -> yok
withPenColor(pic: Builtins.bu.Picture, color: Builtins.bu.Color): net.kogics.kojo.core.Picture -> yok
withRotation(pic: Builtins.bu.Picture, angle: Kesir): net.kogics.kojo.core.Picture -> yok
withRotation(pic: Builtins.bu.Picture, angle: Kesir): net.kogics.kojo.core.Picture -> yok
withScaling(pic: Builtins.bu.Picture, factor: Kesir): net.kogics.kojo.core.Picture -> yok
withScaling(pic: Builtins.bu.Picture, factor: Kesir): net.kogics.kojo.core.Picture -> yok
withTranslation(pic: Builtins.bu.Picture, x: Kesir, y: Kesir): net.kogics.kojo.core.Picture -> yok
withTranslation(pic: Builtins.bu.Picture, x: Kesir, y: Kesir): net.kogics.kojo.core.Picture -> yok
wrapBirimDizik(xs: Dizik[Birim]): DizikDizi.ofBirim -> yok
wrapBirimDizik(xs: Dizik[Birim]): DizikDizi.ofBirim -> yok
wrapByteDizik(xs: Dizik[Byte]): DizikDizi.ofByte -> yok
wrapByteDizik(xs: Dizik[Byte]): DizikDizi.ofByte -> yok
wrapFloatDizik(xs: Dizik[Float]): DizikDizi.ofFloat -> yok
wrapFloatDizik(xs: Dizik[Float]): DizikDizi.ofFloat -> yok
wrapHarfDizik(xs: Dizik[Harf]): DizikDizi.ofHarf -> yok
wrapHarfDizik(xs: Dizik[Harf]): DizikDizi.ofHarf -> yok
wrapKesirDizik(xs: Dizik[Kesir]): DizikDizi.ofKesir -> yok
wrapKesirDizik(xs: Dizik[Kesir]): DizikDizi.ofKesir -> yok
wrapLongDizik(xs: Dizik[Long]): DizikDizi.ofLong -> yok
wrapLongDizik(xs: Dizik[Long]): DizikDizi.ofLong -> yok
wrapRefDizik(xs: Dizik[T]): DizikDizi.ofRef[T] -> yok
wrapRefDizik(xs: Dizik[T]): DizikDizi.ofRef[T] -> yok
wrapSayıDizik(xs: Dizik[Sayı]): DizikDizi.ofSayı -> yok
wrapSayıDizik(xs: Dizik[Sayı]): DizikDizi.ofSayı -> yok
wrapShortDizik(xs: Dizik[Short]): DizikDizi.ofShort -> yok
wrapShortDizik(xs: Dizik[Short]): DizikDizi.ofShort -> yok
wrapYazı(s: Yazı): WrappedYazı -> yok
wrapYazı(s: Yazı): WrappedYazı -> yok
wrapİkilDizik(xs: Dizik[İkil]): DizikDizi.ofİkil -> yok
wrapİkilDizik(xs: Dizik[İkil]): DizikDizi.ofİkil -> yok
write -> yok
write -> yok
xml: scala -> yok
xml: scala -> yok
yakala -> yok
yakala -> yok
yaklaş(oran: Kesir): Birim -> yok
yaklaş(oran: Kesir): Birim -> yok
yaklaş(oran: Kesir, xMerkez: Kesir, yMerkez: Kesir): Birim -> yok
yaklaş(oran: Kesir, xMerkez: Kesir, yMerkez: Kesir): Birim -> yok
yaklaşXY(xOran: Kesir, yOran: Kesir, xMerkez: Kesir, yMerkez: Kesir): Birim -> yok
yaklaşXY(xOran: Kesir, yOran: Kesir, xMerkez: Kesir, yMerkez: Kesir): Birim -> yok
yaklaşmayaİzinVerme: Birim -> yok
yaklaşmayaİzinVerme: Birim -> yok
yaklaşmayıSil: Birim -> yok
yaklaşmayıSil: Birim -> yok
yakın(x: Kesir): Uzun -> yok
yakın(x: Kesir): Uzun -> yok
yakın(x: UfakKesir): Sayı -> yok
yakın(x: UfakKesir): Sayı -> yok
yakını(x: Kesir): Kesir -> yok
yakını(x: Kesir): Kesir -> yok
yanlış -> yok
yanlış -> yok
yanlış -> yok
yanlış -> yok
yansıt: Sayı => res.YansıtBD -> yok
yansıt: Sayı => res.YansıtBD -> yok
yansıtX: res.YansıtXbD.tür -> yok
yansıtX: res.YansıtXbD.tür -> yok
yansıtY: res.YansıtYbD.tür -> yok
yansıtY: res.YansıtYbD.tür -> yok
yap -> yok
yap -> yok
yatayMerkezKonumu(uzunluk: Kesir): Kesir -> yok
yatayMerkezKonumu(uzunluk: Kesir): Kesir -> yok
yavaş: net.kogics.kojo.core.Slow.tür -> yok
yavaş: net.kogics.kojo.core.Slow.tür -> yok
yay -> yok
yay -> yok
yayar -> yok
yayar -> yok
yaz(veri: Her): Birim -> yok
yaz(veri: Her): Birim -> yok
yazı -> yok
yazı -> yok
yazıBoyunuKur -> yok
yazıBoyunuKur -> yok
yazıYüzünüKur(yy: Yazıyüzü): Birim -> yok
yazıYüzünüKur(yy: Yazıyüzü): Birim -> yok
yazılımcıkDüzenleyicisiniEtkinleştir(): Birim -> yok
yazılımcıkDüzenleyicisiniEtkinleştir(): Birim -> yok
yazıyüzleri: Dizin[Yazı] -> yok
yazıyüzleri: Dizin[Yazı] -> yok
yazıyüzü(adı: Yazı, boyu: Sayı): Yazıyüzü -> yok
yazıyüzü(adı: Yazı, boyu: Sayı): Yazıyüzü -> yok
yazıyüzü(adı: Yazı, boyu: Sayı, biçem: Sayı): Yazıyüzü -> yok
yazıyüzü(adı: Yazı, boyu: Sayı, biçem: Sayı): Yazıyüzü -> yok
yazıÇerçevesi(yazı: Yazı, yazıBoyu: Sayı, yazıyüzüAdı: Yazı): Dikdörtgen -> yok
yazıÇerçevesi(yazı: Yazı, yazıBoyu: Sayı, yazıyüzüAdı: Yazı): Dikdörtgen -> yok
yellow: Renk -> yok
yellow: Renk -> yok
yeni -> yok
yeni -> yok
yeniKaplumbağa(x: Kesir, y: Kesir, giysiDosyası: Yazı): Kaplumbağa -> yok
yeniKaplumbağa(x: Kesir, y: Kesir, giysiDosyası: Yazı): Kaplumbağa -> yok
yeniMp3Çalar: Mp3Çalar -> yok
yeniMp3Çalar: Mp3Çalar -> yok
yeşil: Renk -> yok
yeşil: Renk -> yok
yield -> yok
yield -> yok
yinele(n: Sayı)(diziKomut: => Birim): Birim -> yok
yinele(n: Sayı)(diziKomut: => Birim): Birim -> yok
yineleDizinli(n: Sayı)(diziKomut: Sayı => Birim): Birim -> yok
yineleDizinli(n: Sayı)(diziKomut: Sayı => Birim): Birim -> yok
yineleDoğruKaldıkça -> yok
yineleDoğruKaldıkça -> yok
yineleDoğruysa(koşul: => İkil)(diziKomut: => Birim): Birim -> yok
yineleDoğruysa(koşul: => İkil)(diziKomut: => Birim): Birim -> yok
yineleKere(dizi: Yinelenebilir[T])(diziKomut: T => Birim): Birim -> yok
yineleKere(dizi: Yinelenebilir[T])(diziKomut: T => Birim): Birim -> yok
yineleOlanaKadar(koşul: => İkil)(diziKomut: => Birim): Birim -> yok
yineleOlanaKadar(koşul: => İkil)(diziKomut: => Birim): Birim -> yok
yineleSayaçla(miliSaniye: Uzun)(işlev: => Birim): JGelecek[PEtkinlik] -> yok
yineleSayaçla(miliSaniye: Uzun)(işlev: => Birim): JGelecek[PEtkinlik] -> yok
yineleİlktenSona(ilki: Sayı, sonu: Sayı)(diziKomut: Sayı => Birim): Birim -> yok
yineleİlktenSona(ilki: Sayı, sonu: Sayı)(diziKomut: Sayı => Birim): Birim -> yok
yineleİçin(dizi: Yinelenebilir[T])(diziKomut: T => Birim): Birim -> yok
yineleİçin(dizi: Yinelenebilir[T])(diziKomut: T => Birim): Birim -> yok
yok -> yok
yok -> yok
yok -> yok
yok -> yok
yokMu(o: OptionMethodsInTurkish.bu.Belki[T]): İkil -> yok
yokMu(o: OptionMethodsInTurkish.bu.Belki[T]): İkil -> yok
yoksa -> yok
yoksa -> yok
yorumla(komutDizisi: Yazı): Birim -> yok
yorumla(komutDizisi: Yazı): Birim -> yok
yuvarla(sayı: Number, basamaklar: Sayı): Kesir -> yok
yuvarla(sayı: Number, basamaklar: Sayı): Kesir -> yok
zIndex(idx: Sayı): net.kogics.kojo.picture.PostDrawTransformc -> yok
zIndex(idx: Sayı): net.kogics.kojo.picture.PostDrawTransformc -> yok
zamanTut(başlık: Yazı)(işlev: => T)(bitiş: Yazı): T -> yok
zamanTut(başlık: Yazı)(işlev: => T)(bitiş: Yazı): T -> yok
zoom -> yok
zoom -> yok
zoomXY(xfactor: Kesir, yfactor: Kesir, cx: Kesir, cy: Kesir): Birim -> yok
zoomXY(xfactor: Kesir, yfactor: Kesir, cx: Kesir, cy: Kesir): Birim -> yok
zıpla -> yok
zıpla -> yok
İkil2boolean(x: İkil): İkil -> yok
İkil2boolean(x: İkil): İkil -> yok
İkil: java.lang -> yok
İkil: java.lang -> yok
İkil: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İkil: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İkilDiziğiDizisi: TurCevirileri -> yok
İkilDiziğiDizisi: TurCevirileri -> yok
İmge: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İmge: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İmgeİşlemi: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İmgeİşlemi: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İriKesir: NumMethodsInTurkish -> yok
İriKesir: NumMethodsInTurkish -> yok
İriSayı: NumMethodsInTurkish -> yok
İriSayı: NumMethodsInTurkish -> yok
İşParçacığıÖlümü: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İşParçacığıÖlümü: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İşletimBağlamı: FutureMethodsInTurkish -> yok
İşletimBağlamı: FutureMethodsInTurkish -> yok
İşlev1: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İşlev1: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İşlev2: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İşlev2: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İşlev3: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
İşlev3: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
** turkish letters ç ı ğ ü ş ö
IllegalAccessError: java.lang -> yok
IllegalAccessError: java.lang -> yok
IllegalAccessException: java.lang -> yok
IllegalAccessException: java.lang -> yok
IllegalArgumentException: scala.package -> yok
IllegalArgumentException: scala.package -> yok
IllegalCallerException: java.lang -> yok
IllegalCallerException: java.lang -> yok
IllegalMonitorStateException: java.lang -> yok
IllegalMonitorStateException: java.lang -> yok
IllegalStateException: java.lang -> yok
IllegalStateException: java.lang -> yok
IllegalThreadStateException: java.lang -> yok
IllegalThreadStateException: java.lang -> yok
Image: net.kogics.kojo.lite.CoreBuiltins -> yok
Image: net.kogics.kojo.lite.CoreBuiltins -> yok
ImageOp: net.kogics.kojo.lite.Builtins -> yok
ImageOp: net.kogics.kojo.lite.Builtins -> yok
ImmutableIterableMethods(d: Iterable[T]): ImmutableIterableMethods[T] -> yok
ImmutableIterableMethods(d: Iterable[T]): ImmutableIterableMethods[T] -> yok
ImmutableIterableMethods: DiziMethodsInTurkish -> yok
ImmutableIterableMethods: DiziMethodsInTurkish -> yok
Inch: net.kogics.kojo.core.Inch.tür -> yok
Inch: net.kogics.kojo.core.Inch.tür -> yok
IncompatibleClassChangeError: java.lang -> yok
IncompatibleClassChangeError: java.lang -> yok
IncrPage: net.kogics.kojo.lite.Builtins -> yok
IncrPage: net.kogics.kojo.lite.Builtins -> yok
IndexOutOfBoundsException: scala.package -> yok
IndexOutOfBoundsException: scala.package -> yok
InheritableThreadLocal: java.lang -> yok
InheritableThreadLocal: java.lang -> yok
InstantiationError: java.lang -> yok
InstantiationError: java.lang -> yok
InstantiationException: java.lang -> yok
InstantiationException: java.lang -> yok
Instrument: net.kogics.kojo.music.Instrument.tür -> yok
Instrument: net.kogics.kojo.music.Instrument.tür -> yok
ItalicFont: Sayı -> yok
ItalicFont: Sayı -> yok
Iterable: scala.package -> yok
Iterable: scala.package -> yok
IterableMethods(d: Yinelenebilir[T]): IterableMethods[T] -> yok
IterableMethods(d: Yinelenebilir[T]): IterableMethods[T] -> yok
IterableMethods: DiziMethodsInTurkish -> yok
IterableMethods: DiziMethodsInTurkish -> yok
IterableOnce: scala.package -> yok
IterableOnce: scala.package -> yok
Iterator: scala.package -> yok
Iterator: scala.package -> yok
IteratorMethods(d: Yineleyici[T]): IteratorMethods[T] -> yok
IteratorMethods(d: Yineleyici[T]): IteratorMethods[T] -> yok
IteratorMethods: DiziMethodsInTurkish -> yok
IteratorMethods: DiziMethodsInTurkish -> yok
Sayı: scala -> yok
Sayı: scala -> yok
SayıRead: net.kogics.kojo.util.Read.SayıRead.tür -> yok
SayıRead: net.kogics.kojo.util.Read.SayıRead.tür -> yok
Sayıeger2int(x: Sayıeger): Sayı -> yok
Sayıeger2int(x: Sayıeger): Sayı -> yok
Sayıeger: java.lang -> yok
Sayıeger: java.lang -> yok
Sayıegral: scala.package -> yok
Sayıegral: scala.package -> yok
SayıernalError: java.lang -> yok
SayıernalError: java.lang -> yok
SayıerruptedException: scala.package -> yok
SayıerruptedException: scala.package -> yok
SıralıDizi: scala.package -> yok
SıralıDizi: scala.package -> yok
SıralıDiziYöntemleri(d: DiziMethodsInTurkish.bu.SıralıDizi[T]): SıralıDiziYöntemleri[T] -> yok
SıralıDiziYöntemleri(d: DiziMethodsInTurkish.bu.SıralıDizi[T]): SıralıDiziYöntemleri[T] -> yok
SıralıDiziYöntemleri: DiziMethodsInTurkish -> yok
SıralıDiziYöntemleri: DiziMethodsInTurkish -> yok
Çalgı: MusicUtilsInTurkish -> yok
ÇalışmaSırasıKuralDışı: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
ÇiniDünyası: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
ÇiniXY: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
Çizim: Görünüş.tür -> yok
ÖncelikSırası: QueueMethodsInTurkish -> yok
Üçgen: net.kogics.kojo.lite.i18n.TurkishAPI -> yok
çevir: Sayı => res.ÇevirBD -> yok
çiz(r2: Resim): Birim -> yok
çiz(rler: Diz[Resim]): Birim -> yok
çiz(rler: Resim*): Birim -> yok
çizMerkezde: Resim => Birim -> yok
çizMerkezdeYazı: (Yazı, Renk, Sayı) => Birim -> yok
çizSahne: Boya => Birim -> yok
çizVeSakla(resimler: Resim*): Birim -> yok
çizimSonrasıİşlev: (Resim => Birim) => res.ÇizimSonrasıİşlevBD -> yok
çizimiKaydet(dosyaAdı: Yazı): Birim -> yok
çizimiKaydet(dosyaAdı: Yazı, en: Sayı, boy: Sayı): Birim -> yok
çizimiKaydetBoy(dosyaAdı: Yazı, boy: Sayı): Birim -> yok
çizimiKaydetEn(dosyaAdı: Yazı, en: Sayı): Birim -> yok
çizimiPulBoyundaKaydet(dosyaAdı: Yazı, boy: Sayı): Birim -> yok
çizimiSil: Birim -> yok
çizimÖncesiİşlev: (Resim => Birim) => res.ÇizimÖncesiİşlevBD -> yok
çokHızlı: net.kogics.kojo.core.SuperFast.tür -> yok
çıktıArtalanınıKur(renk: Renk): Birim -> yok
çıktıYazıRenginiKur(renk: Renk): Birim -> yok
çıktıYazıYüzüBoyunuKur(boy: Sayı): Birim -> yok
çıktıyıSil: Birim -> yok
örgü: (Kesir, Kesir, Kesir, Kesir) => res.Weavec -> yok
örtük -> yok
özellik -> yok
üst -> yok
üçgen(en: Kesir): Birim -> yok
üçgenDöşeme(noktalar: Dizi[Nokta]): Diz[Üçgen] -> yok
ızgarayıGizle: Birim -> yok
ızgarayıGizle: Birim -> yok
ızgarayıGöster: Birim -> yok
ızgarayıGöster: Birim -> yok
ışıklar(ışıklar: com.jhlabs.image.LightFilter.Light*): res.Lightsc -> yok
ışıklar(ışıklar: com.jhlabs.image.LightFilter.Light*): res.Lightsc -> yok
ışınlarıAç -> yok
ışınlarıAç -> yok
ışınlarıKapat -> yok
ışınlarıKapat -> yok
* Symbol type in scala (used in resim.scala) but maybe it doesn't really belong in scala 
https://www.scala-lang.org/api/2.13.6/scala/Symbol.html
https://www.scala-lang.org/api/2.13.6/scala/Symbol$.html
https://stackoverflow.com/questions/1324466/practical-examples-of-using-symbols-in-scala
* Console output:
** Havai Fişekler
Initializing Midi Sequencer...
Done
* Errors and exceptions
** DONE java.lang.IllegalArgumentException: requirement failed: kişinin yaşı yanlış girildi
  at scala.Predef$.require(Predef.scala:340)
  at net.kogics.kojo.lite.i18n.TurkishAPI$.gerekli(trInit.scala:127)
  ... 47 elided

durum sınıf Kişi(ad: Yazı, yaş: Sayı) {
    gerekli(yaş > 0 && yaş < 1000, "kişinin yaşı yanlış girildi")
}

dez k1 = Kişi("Mustafa Kemal", 143)
dez k2 = Kişi("Garip Durum", -1) // bir de -1 yerine 1 girip çalıştır
yaz("Buraya gelecek mi bakalım")

** Exception in thread "AWT-EventQueue-0" java.lang.NumberFormatException: For input string: "foo"

silVeSakla
dez ay_uzunluk = ay.Yazıgirdisi(60)
dez ay_renkler = ay.Salındıraç("mavi", "yeşil", "sarı")
Resim.arayüz(ay.Tanıt("Sayı ve Renk Seç:")).veGötür(-100,120).çiz
Resim.arayüz(ay_uzunluk).veGötür(-100, 100).çiz
Resim.arayüz(ay_renkler).veGötür(-100, 80).çiz
Resim.arayüz(ay.Düğme("Sayı ve Renk Seçimlerini Yaz"){
  satıryaz("=" * 10)
  satıryaz(s"Sayı: ${ay_uzunluk.değeri}")
  satıryaz(s"Renk: ${ay_renkler.değeri}")}
).veGötür(-100, 60).çiz

** Error[4,19]: type mismatch;
 found   : Int(128)
 required: UserCode.this.TurkishAPI.Lokma
    (which expands to)  Byte
dez b2: Lokma = 1 << 7

* minor 2

import net.kogics.kojo.util.Utils //> import net.kogics.kojo.util.Utils
Utils.libDir //> val res1: String = /Users/ben/.kojo/lite/libk
Utils.extensionsDir //> val res2: String = /Users/ben/.kojo/extension

~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/xscala/ScalaCodeRunner2.scala

Scanning libk...
Additional jars available (within libk) - 25

Scanning extensions...
Additional jars available (within /Users/ben/.kojo/extension/kojo-music) - 4

* minor worksheet and type info
PEtkinlik <- edu.umd.cs.piccolo.activities.PActivity
JGelecek <- java.util.concurrent.Future
---
//> dez sonuç199: java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity] = net.kogics.kojo.util.FutureResult@2b1c777
[tür] saat : Birim
[tür] canlandır : (işlev: => Birim): java.util.concurrent.Future[edu.umd.cs.piccolo.activities.PActivity]

* DONE! keyword completion and syntax highlighting:
  cd ~/kojo-repo
  sgrep CodeCompletionUtils | grep import
  sgrep 'org.fife.ui'
  https://bobbylight.github.io/RSyntaxTextArea/
  ~/kojo-repo/src/main/scala/net/kogics/kojo/lite/KojoCompletionProvider.scala =>
    import org.fife.ui.autocomplete.Completion
        val (keywordCompletions, koffset) = execSupport.keywordCompletions(prefix)
        keywordCompletions.foreach { completion =>

* Hata oldu - java.net.UnknownHostException: upload.wikimedia.foo.org (kütük dosyasında daha çok bilgi var)
Test with: ~/src/yaz/denemeler/b_bkk_url.kojo

* scala-tutorial interpreter creates res0 res1 ... resN, we translate the output to sonuçN but we also need to define ın the interpreter: val sonuçN = resN

* ~/src/yaz/denemeler/a_devam.kojo
PBounds[x=-11.0,y=-11.0,width=22.0,height=22.0]
Drag Protractor to move it around; Shift-Drag to rotate. ~/kojo-repo/src/main/scala/net/kogics/kojo/lite/canvas/SpriteCanvas.scala
Problem - head of empty String
Problem - java.net.UnknownHostException: upload.wikimedia.org (see log for details)
    val i3 = imge(BKK(
    "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Flower_poster_2.jpg/330px-Flower_poster_2.jpg"
    ))
~/kojo-repo/src/main/scala/net/kogics/kojo/util/Utils.scala:    println(s"Problem - ${t.toString} (see log for details)")
~/kojo-repo/src/main/scala/net/kogics/kojo/lite/MultiInstanceHandler.scala:  // and the accompanying 'Problem - no such object in table' message that shows up in the Java Console
~/kojo-repo/src/main/scala/net/kogics/kojo/picture/picimage.scala:            println(s"Problem - ${e.getMessage}")

* DONE TODO: KeyCodes -> tuşlar ~/kojo-repo/src/main/scala/net/kogics/kojo/staging/KeyCodes.scala
** Do it now!
ben@Bulents-MacBook-Pro tr % grep -r tuşlar *
grep -r tuşlar *
ben@Bulents-MacBook-Pro tr % 
* TODO: todo:
cd /Users/ben/kojo-repo/src/main/resources/samples/tr
grep todo *
scala-tutorial.kojo:    "Bu vesileyle daha büyük bir örnek görelim ve bilgisayarın temeli olan mantığa giriş yapalım. Mantık nedir bilir misin? Belki iyi tanımazsın ama bildiğinden eminim çünkü mantık bizim altıncı hissimiz gibidir. Mantıksızlık hiç hoşumuza gitmez. Bak şöyle yazabiliriz mantık işlemlerinin temelini. Bunu okurken + * x ve ! gibi imlerin tanımlarını nasıl yaptığımıza da dikkat!".p,  // ttodo: unary_ below
unit-circle.kojo:dez rEksen = siyah.fadeOut(0.5) // todo
* TODO: Costume.car etc
** In samples like: ~/kojo-repo/src/main/resources/samples/tr/physics-uvats.kojo
** See: ~/kojo-repo/src/main/resources/media
** Code in ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/turtle/TurtleWorldAPI.scala
see: class Costume
* TODO: ~/src/kojo/git/kojo/src/main/resources/samples/tr/hunted-fp.kojo (not on menu yet! ?)

* DONE TODO: gizle or gizle() ?? 
* DONE ~/src/kojo/git/kojo/src/main/resources/samples/tr/fireworks.kojo (Canlandirma menusunde)

* 2023.04.15 TODO:
DONE /Users/ben/src/kojo/git/kojo/src/main/resources/samples/tr/animated-square-creation.kojo
/Users/ben/src/kojo/git/kojo/src/main/resources/samples/tr/hunted-fp.kojo
DONE /Users/ben/src/kojo/git/kojo/src/main/resources/samples/tr/fireworks-canvas.kojo
/Users/ben/src/kojo/git/kojo/src/main/resources/samples/tr/fireworks.kojo
* DONE: easing
** Find pointers to the code of KEasing in: trInit.scala
** used in 
  ~/src/kojo/git/kojo/src/main/resources/samples/tr/lamp-animation2.kojo
  /Users/ben/src/kojo/git/kojo/src/main/resources/samples/tr/animated-square-creation.kojo
* TODO: tune1.kojo and tune2.kojo
* scanLeft and scanRight 
* Extensions libk
~/.kojo/lite/libk/animated-gif-lib-1.4.jar
~/.kojo/extension/kojo-music/net.kogics.kojo-music-0.1.jar
* Music
If you run this program again while some music is playing, you will have to restart Kojo to stop the music that is playing from the previous run. So stop any playing music before re-running this program!
Starting Alda Player...
Launched Music Server. Waiting...
qjc INFO  2022-09-09 15:16:07 StateManager.cleanUpStaleStateFiles:72 - Cleaning up stale files in /Users/ben/Library/Caches/alda/state/players...
qjc INFO  2022-09-09 15:16:07 StateManager.cleanUpStaleStateFiles:72 - Cleaning up stale files in /Users/ben/Library/Caches/alda/state/repl-servers...
qjc INFO  2022-09-09 15:16:07 Main.run:77 - Starting receiver, listening on port 46023...
qjc INFO  2022-09-09 15:16:07 MidiEngine.<init>:276 - Initializing MIDI sequencer...
qjc INFO  2022-09-09 15:16:07 MidiEngine.<init>:281 - Initializing MIDI synthesizer...
Server is up and listening.
qjc INFO  2022-09-09 15:16:10 Main.run:90 - Starting player...
Music Server Started.
* For color selection:
.   actions.scala          2772 Scala            ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/action/actions.scala
  Bundle_tr.properties   12494 Conf[JavaProp]   ~/src/kojo/git/kojo/src/main/resources/net/kogics/kojo/lite/Bundle_tr.properties
  Bundle.properties     11554 Conf[JavaProp]   ~/src/kojo/git/kojo/src/main/resources/net/kogics/kojo/lite/Bundle.properties

* Init/start up
Renk ve görünüş ayarları       → En üstteki 'Dosya' menüsünde 'Ayarlar' var. Ona tıkla
Scanning libk...
Additional jars available (within libk) - 25
Scanning extensions...
Additional jars available (within /Users/ben/.kojo/extension/kojo-music) - 4
initk programı çalışıyor...
                                      _____
Kaplumbağalı Kojo'ya Hoşgeldin!
* Renk seçin ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/action/actions.scala
Utils.loadString("S_Color").ilkHarfiBüyült
      print("Selected Color:   ")
      cprint("\u2588" * 6 + "\n", sColor)
      val color = if (sColor.getAlpha < 255) {
        "Color(%d, %d, %d, %d)".format(sColor.getRed, sColor.getGreen, sColor.getBlue, sColor.getAlpha)
      }
      else {
        "Color(%d, %d, %d)".format(sColor.getRed, sColor.getGreen, sColor.getBlue)
      }
      println(color)
      println("Example usage: setPenColor(%s)" format (color))

* Compiler option!
** Error[1,1]: not found: value abc
abc x = 1
^
Error[1,5]: postfix operator x needs to be enabled
by making the implicit value scala.language.postfixOps visible.
----
This can be achieved by adding the import clause 'import scala.language.postfixOps'
or by setting the compiler option -language:postfixOps.
See the Scaladoc for value scala.language.postfixOps for a discussion
why the feature needs to be explicitly enabled.
abc x = 1
** Error[1,1]: not found: value dez
dez x = 1
^
Error[1,5]: postfix operator x needs to be enabled
by making the implicit value scala.language.postfixOps visible.
----
This can be achieved by adding the import clause 'import scala.language.postfixOps'
or by setting the compiler option -language:postfixOps.
See the Scaladoc for value scala.language.postfixOps for a discussion
why the feature needs to be explicitly enabled.
dez x = 1
* DONE Checkin:
- Fix code and samples not to use upcoming translations of keywords
** Turkish keywords: bu, doğru, durum, eşle, son, yap, yeni
** For the keywords: this, true, case, match, final, do, new
- Translations for the names of a few more methods in Set, etc. (subsets, partition, empty)
- Translations for a few more collections (IndexedSeq and Iterator)
- Replace draw(pic) with pic.draw() -- hit the cache limit in one of my tests
- A few pedagocial improvements to sample code
* New turkish keywords should not be used in any Turkish code or sample! E.g.,
doğru (true, line, Resim.doğru!) -> scala-tutorial and unit-circle
eşle (match)
bu (this)
check in:
  ~/src/kojo/git/for-kojo-rep/DIRS_WITH_TR_SAMPLES
  ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/i18n/tr/*
  ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/i18n/trInit.scala
* Arduino: translate file names: #yukle ~/kojo-includes/ka-bridge.kojo -> #yukle ~/kojo-yuklemeler/ka-kopru.kojo
~/src/kojo/git/kojo/src/main/resources/ka-bridge/tr/sample.kojo
* DONE Array.mapInPlace
* DONE grep String *
* tuşlar.VK_ESCAPE
* Renk.fadeOut etc..
* Media    ~/kojo-repo/src/main/resources/media:
Costume.womanWaving, car, pencil, bat1, bat2 ...
/media/collidium/ball1.png
/media/collidium/win.mp3
"/media/music-loops/DrumBeats.mp3"
"/media/music-loops/Cave.mp3"
* filter worksheet output:
TurkishAPI.Sayı -> Sayı
doğru //> val res36: Boolean = true
* DONE #worksheet and #include
** ben@Bulents-MacBook-Pro kojo % sgrep user\.language
sgrep user\.language
src/TAGS/TEMP_userLanguage.scala:main/scala/net/kogics/kojo/lite/KojoCtx.scala:    prefs.put("user.language", _userLanguage)
src/TAGS/TEMP_userLanguage.scala:main/scala/net/kogics/kojo/lite/i18n/LangInit.scala:    val userLanguage = prefs.get("user.language", System.getProperty("user.language"))
src/TAGS/TEMP_userLanguage.scala:main/scala/net/kogics/kojo/lite/i18n/LangInit.scala:      System.setProperty("user.language", userLanguage)
src/TAGS/TEMP_userLanguage.scala:    prefs.put("user.language", _userLanguage)
src/TAGS/TEMP_userLanguage.scala:    val userLanguage = prefs.get("user.language", System.getProperty("user.language"))
src/TAGS/TEMP_userLanguage.scala:  System.setProperty("user.language", userLanguage)
src/main/scala/net/kogics/kojo/util/Utils.scala:    loadResource2(s"/i18n/initk/${System.getProperty("user.language")}.${mode.code}.kojo")
src/main/scala/net/kogics/kojo/xscala/Help.scala:        langHelp(topic, System.getProperty("user.language")).getOrElse(null)
src/main/scala/net/kogics/kojo/xscala/CodeCompletionUtils.scala:        langMethodTemplate(completion, System.getProperty("user.language")).getOrElse(null)
src/main/scala/net/kogics/kojo/lite/KojoCtx.scala:    prefs.put("user.language", _userLanguage)
src/main/scala/net/kogics/kojo/lite/i18n/LangInit.scala:    val userLanguage = prefs.get("user.language", System.getProperty("user.language"))
src/main/scala/net/kogics/kojo/lite/i18n/LangInit.scala:      System.setProperty("user.language", userLanguage)
src/main/scala/net/kogics/kojo/lite/i18n/LangInit.scala:    System.getProperty("user.language") match {
src/main/scala/net/kogics/kojo/lite/i18n/LangInit.scala:    System.getProperty("user.language") match {
src/main/scala/net/kogics/kojo/lite/i18n/LangInit.scala:    System.getProperty("user.language") match {
src/main/scala/net/kogics/kojo/lite/Main.scala:    kojoCtx = new KojoCtx(args.length == 1 && args(0) == "subKojo") // context needs to be created right up front to set user language
src/test/scala/net/kogics/kojo/xscala/CodeCompletionUtilsTest.scala:    val oldLang = System.getProperty("user.language")
src/test/scala/net/kogics/kojo/xscala/CodeCompletionUtilsTest.scala:    System.setProperty("user.language", "sv")
src/test/scala/net/kogics/kojo/xscala/CodeCompletionUtilsTest.scala:    System.setProperty("user.language", oldLang)
src/test/scala/net/kogics/kojo/xscala/HelpTest.scala:    val oldLang = System.getProperty("user.language")
src/test/scala/net/kogics/kojo/xscala/HelpTest.scala:    System.setProperty("user.language", "sv")
src/test/scala/net/kogics/kojo/xscala/HelpTest.scala:    System.setProperty("user.language", oldLang)
ben@Bulents-MacBook-Pro kojo % 
** ben@Bulents-MacBook-Pro kojo % cd /Users/ben/src/kojo/git/kojo
ben@Bulents-MacBook-Pro kojo % grep -r \#worksheet src/*
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/CodeExecutionSupport.scala    code.indexOf("#worksheet") != -1
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/util/Utils.scala       val includes = """//\s*#include.*""".r.findAllIn(code)
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/util/Utils.scala       def getFileName(s: String) = """//\s*#include""".r.replaceFirstIn(s, "").trim
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/util/Utils.scala       val baseCode = """//(\s)*#include(.*)""".r.replaceAllIn(code, "//$1#Include$2")
** grep -r \#worksheet src/*
*** prime-factors.kojo // #worksheet
*** primes.kojo // #worksheet (satırın başındaki bir komut. Bu yazılımcığı çalışma sayfası olarak çalıştırıyor)
ben@Bulents-MacBook-Pro kojo % grep -r \#include src/*
** grep -r \#include src/*
~/src/kojo/git/kojo/src/main/resources/ka-bridge/sample.kojo // #include ~/kojo-includes/ka-bridge.kojo
~/src/kojo/git/kojo/src/main/resources/ka-bridge/ka_bridge_bt/ka_bridge_bt.ino #include <Servo.h>
~/src/kojo/git/kojo/src/main/resources/ka-bridge/ka_bridge_bt/ka_bridge_bt.ino #include <SoftwareSerial.h>
~/src/kojo/git/kojo/src/main/resources/ka-bridge/ka_bridge/ka_bridge.ino #include <Servo.h>
~/src/kojo/git/kojo/src/main/resources/ka-bridge/ka_bridge/ka_bridge.ino #include <SoftwareSerial.h>
*** ~/src/kojo/git/kojo/src/main/resources/ka-bridge/tr/sample.kojo // #include ~/kojo-includes/ka-bridge.kojo
~/src/kojo/git/kojo/src/main/resources/robosim/obstacle-greedy.kojo // #include /robosim/robot.kojo
~/src/kojo/git/kojo/src/main/resources/robosim/obstacle-greedy.kojo // #include /robosim/environment1.kojo
~/src/kojo/git/kojo/src/main/resources/robosim/obstacle-furthest.kojo // #include /robosim/robot.kojo
~/src/kojo/git/kojo/src/main/resources/robosim/obstacle-furthest.kojo // #include /robosim/environment1.kojo
*** ~/src/kojo/git/kojo/src/main/resources/robosim/tr/obstacle-greedy.kojo // #include /robosim/tr/robot.kojo
~/src/kojo/git/kojo/src/main/resources/robosim/tr/obstacle-greedy.kojo // #include /robosim/tr/cevre.kojo
*** ~/src/kojo/git/kojo/src/main/resources/robosim/tr/obstacle-furthest.kojo // #include /robosim/tr/robot.kojo
~/src/kojo/git/kojo/src/main/resources/robosim/tr/obstacle-furthest.kojo // #include /robosim/tr/cevre.kojo
~/src/kojo/git/kojo/src/main/resources/samples/tr/TRANSLATE_NOW * #worksheet and #include 
*** ?? ~/src/kojo/git/kojo/src/main/resources/challenge/angles-and-curves.kojo // #include /challenge/runner.kojo
~/src/kojo/git/kojo/src/main/resources/challenge/get-started.kojo // #include /challenge/runner.kojo
*** ~/src/kojo/git/kojo/src/main/resources/challenge/tr/get-started.kojo // #include /challenge/tr/runner.kojo
ben@Bulents-MacBook-Pro kojo % 
* keywords!
val -> dez // değişmez değer
var -> den // değişken değer
def -> tanım // yeni yöntem ya da işlev tanımı
* ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/AppMenu.scala:    val genProgMenu = newJMenu(Utils.loadString("S_GeneralProgramming"))
* DONE oyunSüresiniGöster -> oyunSüresiniGeriyeSayarakGöster
DONE addition-game.kojo:val oyunSüresi = 30 // Bir dakika sürsün istersen 60 girebilirsin
DONE car-ride.kojo:val oyunSüresi = 60
DONE collidium.kojo:    oyunSüresiniGöster(60, "Süre doldu. Tekrar dene", renkler.lightBlue, 20) // açık mavi
DONT DO THIS ONE crazy-square.kojo:val oyunSüresi = 60
DONE flappy-ball.kojo:oyunSüresiniGöster(oyunSüresi, "Tebrikler!", yeşil, 20)
DONE hunted.kojo:val oyunSüresi = 20
DONE multiplication-game.kojo:        if (geçenSüre == oyunSüresi) {
DONE scala-tutorial.kojo:oyunSüresiniGeriyeSayarakGöster(60, "Süre bitti", yeşil) // oyun 60 saniye sürsün 
DONE subtraction-game.kojo:        if (geçenSüre == oyunSüresi) {
* DONE Checkin: 
More translation to handle a few more edge-cases in math games
Translated a few more methods and types from swing GUI library. 
Refactored math translation code. Translated some methods from kmath. 
Translated a few more core types.
* Game of Life in Turkish gives an error upon click from Story window
* Sayma Alıştırması (next to Çizim Tuvali) where is the code?
* Öykücü
* case class .copy method e.g. memory-cards.kojo
  https://stackoverflow.com/questions/35626038/scala-case-class-copy-implementation
* othello ve mağara
~/src/kojo/git/kojo/installer/examples/othello/menu_tr.kojo.installed
~/src/kojo/git/kojo/installer/examples/tiledgame/game_tr.kojo.installed
* arayüz ay =>
./widgets-canvas.kojo
~/src/kojo/git/kojo/installer/examples/othello/menu_tr.kojo.installed
~/src/kojo/git/kojo/src/main/resources/mathgames/tr/identify-fractions.kojo
~/src/kojo/git/kojo/src/main/resources/mathgames/tr/counting.kojo
~/src/kojo/git/kojo/src/main/resources/mathgames/tr/make-fractions.kojo
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/i18n/tr/arayuz.scala
* mathgames:
../../mathgames/tr/counting.kojo
* öykücü
sgrep "running story"
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/story/StoryTeller.scala
You can control a running story via buttons that appear at the bottom of this pane.
    prevBut.setToolTipText(Utils.loadString("S_StoryTellerPreviousView"))

[type] Story : (pages: net.kogics.kojo.story.Viewable*): net.kogics.kojo.story.Story
[type] Page : (name: String, body: => scala.xml.Node, code: => Unit): net.kogics.kojo.story.Page
* Sayma Alıştırması
1- CTL_ArithAerobicsTopComponent=Sayma Alıştırması
2- sgrep CTL_ArithAerobicsTopComponent
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/topc/ArithAerobicsHolder.scala:  extends BaseHolder("AE", Utils.loadString("CTL_ArithAerobicsTopComponent"), ae) {
3- ArithAerobicsHolder.scala:
import net.kogics.kojo.lite.ArithAerobicsPane
4- ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/ArithAerobicsPane.scala
import net.kogics.rithica.addition.{TopContainer => Adder}
import net.kogics.rithica.division.{TopContainer => Divider}
import net.kogics.rithica.multiplication.{TopContainer => Multiplier}
import net.kogics.rithica.subtraction.{TopContainer => Subtractor}
import net.kogics.rithica.ui.{TopContainer => ArithContainer}
5- ~/src/kojo/git/kojo/lib/rithica.jar
* DONE grep size *
DONE genart-mondrian.kojo    case (renk, sıra) => if (sıra < dörtgenler.size)
DONE mandelbrot.kojo        renkler(sayıya(karekökü(i + 10 - yumuşak) * 256) % renkler.size)
DONE scala-tutorial.kojo satıryaz(s"Dünyamızda $KU'in karesi yani ${dünya.size} tane hane var.")
DONE scala-tutorial.kojo yaz(s"$seç. desende ${desen.size} tane canlı kare var. Adı $adı.\nNesilleri sayalım: ")
* DONE Check-in: translations for StringBuilder and PartialFunction
These are used in l-systems sample. Updated the sample to use the new translations.
* DONE EsnekYazı
package.scala:  type EsnekYazı=collection.mutable.StringBuilder
l-systems.kojo:        val üretilmişSayı = new EsnekYazı
* DONE type Bölümselİşlev[D,R] = PartialFunction[D,R]
* DONE grep mkString *
* DONE grep toString *
* DONE grep toInt *
* DONE rep toDouble *
* DONE grep foreach *
DONE collidium.kojo engeller.foreach { o => çiz(o) }
DONE flappy-ball.kojo    engeller foreach { engel =>  // engellerin herbiri içın yapmamız gereken şeyler 
DONE genart-delaunay.kojo    üçgenler.foreach { üçgen =>
DONE l-systems.kojo        kuram.foreach { c =>
* DONE grep head *
primes.kojo:    sayılar.head #:: elek3(sayılar.tail.filter { e => e % sayılar.head != 0 })
* DONE grep filter *
primes.kojo:    case sayı :: gerisi => sayı :: elek(gerisi.filter { e => e % sayı != 0 })
primes.kojo:    case sayı #:: gerisi => sayı #:: elek2(gerisi.filter { e => e % sayı != 0 })
primes.kojo:    sayılar.head #:: elek3(sayılar.tail.filter { e => e % sayılar.head != 0 })
primes.kojo:val asallar: MiskinDizin[Sayı] = 2 #:: MiskinDizin.sayalım(3, 2).filter { asalMı }
* DONE grep map *
DONE collidium.kojo val engeller = (1 to engelSayısı).map { n =>
DONE genart-cubic-disarray.kojo çiz(dörtgenler.map { d =>
DONE genart-tiled-lines.kojo çiz(çizgiler.map(çizgidenResim))
DONE read-vector-bargraph.kojo val çubuklar = yöney.map { n => çubuk(n) }
DONE read-vector-mean.kojo satıryaz(f"      Uzunluğu: ${karekökü(yöney.map(x => x*x).sum)}%.2f")  // pisagor bu kadar basit! (8-)
* DONE grep value *
DONE addition-game.kojo             val x = yanıtKutusu.value
DONE multiplication-game.kojo             val x = yanıtKutusu.value
DONE subtraction-game.kojo             val x = yanıtKutusu.value
DONE widgets-canvas.kojo         val hız = ay_hız.value // saniyede bu kadar nokta ilerlesin
DONE ~/src/kojo/git/kojo/installer/examples/othello/menu_tr.kojo.installed
* DONE grep abs *
DONE dragon-curve.kojo    ejder(derinlik - 1, açı.abs)  // .abs mutlak değeri verir. -1.5.abs = 1.5
DONE hunted.kojo val enİriY = ta.y.abs
DONE lunar-lander.kojo            if (im.hız.y.abs > 3) {
* DONE grep rgba and grep hsl etc.. see renk.scala (tik tac toe)
* DONE grep radial *
eye-effects.kojo val boya = renkler.radialMultipleGradient(
eye.kojo val boya = renkler.radialMultipleGradient(0, 0, 150,
* DONE grep linear *
genart-delaunay.kojo:            val doğrusalEğim = renkler.linearGradient(a.x, a.y, siyah, b.x, b.y, mavi)
lamp-animation2.kojo    setFillColor(cm.linearGradient(0, 0, cm.red, 0, 130, cm.yellow))
tan-theta.kojo boyamaRenginiKur(renkler.linearGradient(
tree2.kojo artalanıKur(renkler.linearGradient(0, -100, kahverengi, 0, 100, açıkMavi))
* DONE grep çevir *
penta-pattern.kojo:    renk = renk.çevir(birSonraki)
square-pattern.kojo:    renk = renk.çevir(360 / 15)
tic-tac-toe.kojo:    def sütun(x: Sayı) = tahta(x).toSeq // tahta(x) bir Array. Dizi'ye çevirelim onu
tree0.kojo:    // 'sayıya' adlı metod, kesirli sayıyı tam sayıya çeviriyor.
two-turtle-interaction.kojo:      o.çevir(k1)
two-turtle-interaction2.kojo:  bu.çevir(k1)
widgets-canvas.kojo:    </html>.toString // toString Yazıya çevirir
* DONE Test: radiance.kojo
* DONE traits givens/implicits
** sorted by trait name 
AnyMethodsInTurkish
CalendarInTurkish
CharMethodsInTurkish
ColorMethodsInTurkish
GeoMethodsInTurkish
LazyListMethodsInTurkish
ListMethodsInTurkish
NumMethodsInTurkish
OptionMethodsInTurkish
RangeMethodsInTurkish
SeqMethodsInTurkish
SetMethodsInTurkish
StringMethodsInTurkish
VectorMethodsInTurkish
** sorted by file name
aralik.scala trait RangeMethodsInTurkish
belki.scala trait OptionMethodsInTurkish
buan.scala trait CalendarInTurkish
dizi.scala trait SeqMethodsInTurkish
dizin.scala trait ListMethodsInTurkish
geo.scala trait GeoMethodsInTurkish
harf.scala trait CharMethodsInTurkish
kume.scala trait SetMethodsInTurkish
miskindizi.scala trait LazyListMethodsInTurkish
nesne.scala trait AnyMethodsInTurkish
renk.scala trait ColorMethodsInTurkish
sayi.scala trait NumMethodsInTurkish
yazi.scala trait StringMethodsInTurkish
yoney.scala trait VectorMethodsInTurkish
* DONE toString -> yazıya
* DONE TO TEST (all staged samples!): 
~/src/kojo/git/kojo/src/main/resources/samples/tr/genart-tri-mesh.kojo
~/src/kojo/git/kojo/src/main/resources/samples/tr/genart-joy-division.kojo
* DONE Yöney GeoYol geo.scala
* DONE Dikdörtgen Üçgen
* DONE toDouble toDegrees
* DONE TO TEST! toInt -> sayıya İşlevler sayfasının son yazılımı
DONE angle-experiment.kojo:    val açı = yuvarla(360 - doğrultu + 90).toInt % 360 // toInt: kesirden sayıya
DONE collidium.kojo val topunGöreceKonumuBaşta = (engellerArasıUzaklık / 4).toInt
DONE fern.kojo:        kalemRenginiKur(Renk(0, mutlakDeğer(200 - x * 3).toInt, 40))
DONEflappy-ball.kojo    val boy = rastgele((0.5 * ta.boyu).toInt) + 50
genart-joy-division.kojo        noktalar = noktalar :+ Nokta(x, y + rastgeleKesir(f1.toInt)) // toInt Kesir'i Sayı'ya çevir
instruction-palette.kojo    math.max(50, te.width.toInt)
l-systems.kojo                val n = üretilmişSayı.toString.toInt // esnek yazıdan sayıya çevir
tangram-skier.kojo        kalemRenginiKur(Renk(uzaklık.toInt, mutlakDeğer(255 - uzaklık * 3).toInt, 125))
* DONE renk.spin
* DONE prime-factors!
** (shell-command "grep foreach *.*" nil nil)
car-ride.kojo:    // foreach yöntemi, yukarıda kullandığımız Eşlem türünün herÖgeİçin adlı yöntemine benzer.
car-ride.kojo:    yolÇizgileri.foreach { yç => 
collidium.kojo:engeller.foreach { o => çiz(o) }
collidium.kojo:engeller.foreach { o => o.girdiyiAktar(Resim.tuvalBölgesi) }
flappy-ball.kojo:    engeller foreach { engel =>  // engellerin herbiri içın yapmamız gereken şeyler 
genart-delaunay.kojo:    üçgenler.foreach { üçgen =>
genart-tri-mesh.kojo:üçgenSıraları.foreach { sıra =>
l-systems.kojo:        kuram.foreach { c =>
prime-factors.kojo:deneyler.foreach { d =>
* resim.scala implement karalamadan
* DONE todo: translate until and to used in tutorial
** rest:
genart-hypnotic-squares.kojo
DONE genart-tiled-lines.kojo
DONE instruction-palette.kojo
DONE mandelbrot.kojo
* next commit
Translating a few of the common methods of Char, List and String
for use in scala tutorial and other samples.
* scala tutorial
Bookmark: Yazıların (String) Kullanılışı
Daha once:
  Program Akışı: to,until yerine Aralik
  Sıralamalar: (Char, Sayı) -> (Harf, Sayı)
* koco'ya kısaca bir gözatalım mı? (TikTok! see Keep/Kojo)
kojo diye yazılır ama koco diye okunur.
java/scala tabanlı çağdaş bir öğrenim/öğretim ortamı
- oyun oynama
- öğrenme
- deney yapma
- yazılımcık yazma
- mantıklı düşünme
- multi-media yazma yaratma
- robot programlama
* TODO: Translate:
Unable to stop script.
Doing a forced-stop. It's best to just restart Kojo!
Problem - java.lang.ThreadDeath (see log for details)
Script Stopped.
* New in December 2021
.   lamp-animation.kojo    1149 Scala            ~/src/kojo/git/kojo/src/main/resources/samples/lamp-animation.kojo
    tree2.kojo              818 Scala            ~/src/kojo/git/kojo/src/main/resources/samples/tree2.kojo
** animateWithState animateWithRedraw
canlandırDurumla
canlandırYenidenÇizerek
.   Help.scala            65690 Scala            ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/xscala/Help.scala
* New in October 2021
.   tic-tac-toe.kojo<tr>    7966 Scala            ~/src/kojo/git/kojo/src/main/resources/samples/tr/tic-tac-toe.kojo
    tic-tac-toe.kojo<samples>    6855 Scala            ~/src/kojo/git/kojo/src/main/resources/samples/tic-tac-toe.kojo
  -rw-r--r--   1 ben  staff   6855 Oct  9 12:04 tic-tac-toe.kojo
  -rw-r--r--   1 ben  staff    424 Oct  9 12:04 radiance.kojo
  -rw-r--r--   1 ben  staff   1246 Oct  9 12:04 genart-hypnotic-squares.kojo
  -rw-r--r--   1 ben  staff   1846 Oct  9 12:04 angle-experiment.kojo
* MOSTLY DONE:
         ../../mathgames
DONE	 ../../robosim
DONE     ../../challenge
DONE 270 ~/src/kojo/git/kojo/installer/examples/tiledgame/game_tr.kojo.installed
DONE 182 car-ride.kojo
DONE 278 mandelbrot.kojo
DONE  48 widgets-canvas.kojo
DONE  75 genart-tri-mesh.kojo
DONE  82 flappy-ball.kojo
DONE 109 l-systems.kojo
DONE 120 arduino-prog.kojo
DONE 142 tangram-skier.kojo
DONE 156 collidium.kojo
NOT IN MENUS 193 composing-music.kojo
* Set
car-ride.kojo:val markers = collection.mutable.Set.empty[Picture]
flappy-ball.kojo:var obstacles = Set.empty[Picture]
scala-tutorial.kojo:      row("""Set(1, 3, 5, 3, 1).mkString("{", " ", "}")""".c, "Bir öncekinde olduğu gibi G1'in elemanlarınının aralarına G3'ü ekleyerek yazıya çevirir ama en başa G2, en sona da G4 yazılarını ekler.")
scala-tutorial.kojo:Set(1, 3, 3, 1).mkString("{", " ", "}")
* Map
DONE hunted.kojo
DONE turtle-controller.kojo
car-ride.kojo
* Vector Array ArrayBuffer
** grep
*** LATER
car-ride.kojo:    cars += c -> Vector2D(0, -carSpeed)
collidium.kojo:        Vector2D(1, 1)
collidium.kojo:import collection.mutable.ArrayBuffer
*** DONE:
scala-tutorial.kojo:    "Ekrana yazı yazmak bilgisayar programlamada epey sık karşılaşılan bir sorun! Bu bölümde bazı tanımlar ve yazı türünün faydalı metodlarından bazılarını göreceğiz. Bu metodların benzerleri Dizin türünde ve ona benzeyen sıra sıra elemanlar içeren başka türlerde de var, Dizim (Array), Yöney (Vector), Dizi (Seq) gibi hafifçe başkalaşmış ama benzer türler). Bir sonraki bölümde Dizin metodlarını görünce benzerliği farkedeceksin.".p,
*** Tested:
genart-cubic-disarray.kojo:var dörtgenler = Vector.empty[Dikdörtgen]
genart-joy-division.kojo:    var noktalar = Vector.empty[Nokta] // boş Nokta kümesiyle başlayalım
genart-tiled-lines.kojo:var çizgiler = Vector.empty[Köşegen] // aslında çizgileri hesaplayıp bu Vector'e kaydedeceğiz
genart-tri-mesh.kojo:    var üçgenSırası = Vector.empty[Nokta]  // todo
genart-mondrian.kojo:    Vector(dörtgenA, dörtgenB)
read-vector-bargraph.kojo:var yöney = Vector[Sayı]()
read-vector-mean.kojo:var yöney = Vector[Sayı]()
* Array/ArrayBuffer
collidium.kojo:import collection.mutable.ArrayBuffer
collidium.kojo:def line(ps: ArrayBuffer[Point], c: Color) = Picture {
collidium.kojo:val slingPts = ArrayBuffer.empty[Point]
collidium.kojo:val paddlePts = ArrayBuffer.empty[Point]
genart-delaunay.kojo:val noktalar = ArrayBuffer(Nokta(-100, -50), Nokta(100, -50), Nokta(-100, 50))
* The End
