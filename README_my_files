* modules on top of Java
The Scala Programming Language (http://www.scala-lang.org)
Docking Frames (http://dock.javaforge.com/) for providing multiple, dockable windows
RSyntaxTextArea (http://fifesoft.com/rsyntaxtextarea/) for Syntax Highlighting and Code Completion within the Script Editor
Scalariform (https://github.com/mdr/scalariform/) for Code Formatting within the Script Editor
Piccolo2D (http://www.piccolo2d.org) for 2D Graphics
JTS Topology Suite (http://tsusiatsoftware.net/jts/main.html) for Collision Detection
JFugue (http://www.jfugue.org) for computer generated music
The H2 Database Engine (http://www.h2database.com) for storing history
GeoGebra (http://www.geogebra.org) for Interactive Geometry and Algebra
HttpUnit (http://httpunit.sourceforge.net/) for HTTP communication
JLaTeXMath (http://forge.scilab.org/index.php/p/jlatexmath/) to display LaTeX commands
JLayer (http://www.javazoom.net/javalayer/javalayer.html) to play MP3 files
Table Layout (https://java.net/projects/tablelayout) for Arithmetic Aerobics
The Netbeans Platform (http://www.netbeans.org) for some Script Editor Icons
The Scratch Project (http://scratch.mit.edu) for some Media files
The OpenJDK Project (http://openjdk.java.net/) for Tracing support
JHLabs image filters (http://www.jhlabs.com/ip/filters/) for Picture effects
jSSC (http://code.google.com/p/java-simple-serial-connector/) for serial port communication
The Gargi font (http://savannah.nongnu.org/projects/gargi) for Devanagari support
The Doodle project (https://github.com/underscoreio/doodle) for rich color support
ScalaSwingContrib (https://github.com/benhutchison/ScalaSwingContrib) for UI layout
Scalatest (http://www.scalatest.org/) for testing
Akka (https://akka.io/) for concurrency
Darcula (https://github.com/bulenkov/Darcula) for the dark Kojo theme
libTiled (https://www.mapeditor.org/) to load game level files created with the Tiled Map Editor
Processing (https://processing.org/) for perlin noise and curved shapes
Delaunay Triangulator (https://github.com/jdiemke/delaunay-triangulator) for triangulation of points
Java implementation of HSLuv (https://github.com/hsluv/hsluv-java) for a perceptually uniform color space
Rhino (https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino) for the Code Exchange interface
* Find/Replace turkish translation/chars ~/src/kojo/git/kojo/lib/rstaui.jar
   -rw-rw-rw-       408  22-Mar-2021  18:48:46  org/fife/rsta/ui/TextFilePropertiesDialog_tr.properties
   -rw-rw-rw-       218  22-Mar-2021  18:49:22  org/fife/rsta/ui/GoToDialog_tr.properties
   -rw-rw-rw-       605  22-Mar-2021  14:02:20  org/fife/rsta/ui/search/Search_tr.properties
   -rw-rw-rw-       185  22-Mar-2021  18:51:26  org/fife/rsta/ui/search/SearchToolBar_tr.properties
~/src/kojo/git/kojo/lib/rstaui.jar:org/fife/rsta/ui/search/Search_tr.properties
* Picture

.   transforms.scala      10924 Scala            ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/picture/transforms.scala
trait Transformer extends Picture with CorePicOps2
    Picture.scala          5217 Scala            ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/core/Picture.scala
trait Picture extends InputAware
    trInit.scala          28975 Scala            ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/i18n/trInit.scala
    package.scala         13330 Scala            ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/picture/package.scala
    pics.scala            24734 Scala            ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/picture/pics.scala
trait InputAware
.   InputAware.scala       4198 Scala            ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/core/InputAware.scala

~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/core/Picture.scala
** From Lalit
*** CoreBuiltins.scala
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/CoreBuiltins.scala
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/Builtins.scala

** in: ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/core/package.scala
package net.kogics.kojo
package object core {
  type Painter = Turtle => Unit
}

** in: ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/picture/pics.scala
object Pic {
  def apply(painter: Painter)(implicit canvas: SCanvas) = new Pic(painter)
}

~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/picture/package.scala
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/Builtins.scala
object Picture in: ~/src/kojo/git/kojo/grep_object
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/core/Picture.scala
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/core/InputAware.scala
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/CoreBuiltins.scala
~/src/kojo/resim/giris.kojo

* Older
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/xscala/Help.scala
~/src/kojo/git/kojo/localization.md
~/src/kojo/git/kojo/l10n-level2/level2_tr.properties
~/src/kojo/git/kojo/src/main/
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/AppMenu.scala
             loadAndRunResourceNEL("/samples/", file)
    // mathActivityMenu.add(menuItemFor("S_AngleExperiment", "angle-experiment.kojo"))
    toolsMenu.add(menuItemFor("S_InstructionPalette", "instruction-palette.kojo"))
** ~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/i18n/trInit.scala
~/src/kojo/git/kojo/src/main/resources/i18n/initk/tr.tw.kojo
~/src/kojo/git/kojo/src/main/resources/net/kogics/kojo/lite/Bundle_tr.properties
~/src/kojo/git/kojo/src/main/resources/samples/tr/scala-tutorial.kojo


~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/CoreBuiltins.scala
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/Builtins.scala   e.g. canvasBounds animate animateWithRedraw
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/lite/DrawingCanvasAPI.scala animateWithState
~/src/kojo/git/kojo/src/main/scala/net/kogics/kojo/xscala/Help.scala

** TurkishAPITest ~/src/kojo/git/kojo/src/test/scala/net/kogics/kojo/lite/i18n/TurkishAPITest.scala
(shell-command "grep -r TurkishAPITest kojo/src/*" nil nil)
kojo/src/test/scala/net/kogics/kojo/lite/i18n/TurkishAPITest.scala:class TurkishAPITest extends FunSuite with Matchers {
TurkishAPITest:
[info] - yinele(n){block} should repeat the block n times
[info] - yineleDoğruysa(condition){block} should execute block while condition holds
[info] - yineleOlanaKadar(condition){block} should execute block while condition does not hold
[info] - yineleDizinli(n){i => fn(i)} should call fn n times with indices 1 to n
[info] - yineleİlktenSona(start, end){i => fn(i)} should call fn with the Int values from start to end
[info] - yineleKere[T](iterable){e => fn(e)} should process all elements of iterable
[info] - İkil (Boolean in Turkish) should work
[info] VectorBounceTest:

* The End
